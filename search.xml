<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>samtools</title>
      <link href="/2018/05/16/Linux/samtools%E5%91%BD%E4%BB%A4/"/>
      <url>/2018/05/16/Linux/samtools%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h4 id="samtools"><a href="#samtools" class="headerlink" title="samtools"></a>samtools</h4><p>samtools view -f 4 file.bam &gt; unmapped.sam<br>samtools view -b -f 4 file.bam &gt; unmapped.bam<br>samtools view -b -F 4 file.bam &gt; mapped.bam</p><p><a href="https://www.biostars.org/p/56246/" target="_blank" rel="noopener">Question: How To Filter Mapped Reads With Samtools</a><br><a href="http://www.cnblogs.com/emanlee/p/4316581.html" target="_blank" rel="noopener">samtools命令讲解</a><br><a href="https://wiki2.org/en/List_of_RNA-Seq_bioinformatics_tools" target="_blank" rel="noopener">List_of_RNA-Seq_bioinformatics_tools</a></p>]]></content>
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bioinformatics </tag>
            
            <tag> samtools </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux Tips记录</title>
      <link href="/2018/05/15/Linux/Linux_Tips/"/>
      <url>/2018/05/15/Linux/Linux_Tips/</url>
      <content type="html"><![CDATA[<h4 id="set"><a href="#set" class="headerlink" title="set"></a>set</h4><blockquote><p>set 所有本地定义的Shell变量；env 用来显示环境变量；export 用来显示和设置环境变量<br>set 显示当前shell的变量，包括当前用户的变量；env 显示当前用户的变量；export 显示当前导出成用户变量的shell变量</p></blockquote><h4 id="du"><a href="#du" class="headerlink" title="du"></a>du</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输出当前目录下上G和T的目录所使用的空间</span><br><span class="line">du -h --max-depth=1 /home |grep [TG] |sort</span><br><span class="line">``` </span><br><span class="line">#### 占用内存资源/CPU最多的前 10 个进程 [参考](https://linux.cn/article-9373-1.html)</span><br></pre></td></tr></table></figure><p>ps -auxf | sort -nr -k 4 | head -10<br>ps -auxf | sort -nr -k 3 | head -10<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#### nohup</span><br><span class="line">&gt;jobs命令用于显示当前终端关联的后台任务情况</span><br><span class="line">&gt;bg [%n]用于将后台暂停的进程继续运行。</span><br><span class="line">&gt;fg [%n]用于将后台执行的进程变成前台进程。</span><br><span class="line">&gt;kill %n用于杀掉指定的任务</span><br><span class="line"></span><br><span class="line">#### top</span><br><span class="line">&gt;获取到top的进程ID为21223，父ID17594</span><br><span class="line">&gt;ps -ef | grep top</span><br><span class="line">&gt;pstree命令来看二者关系</span><br><span class="line">&gt;pstree -H 21223| grep top</span><br><span class="line">&gt;&apos;bash shell&apos; 和 &apos;top&apos; 进程处在同一个会话期 , 父 ID 是17594</span><br><span class="line">&gt;ps -xj|grep 17594</span><br><span class="line"></span><br><span class="line">#### 清除ZOMBIE（僵尸）进程</span><br><span class="line">看各个状态的进程</span><br></pre></td></tr></table></figure></p><p>ps -a -o pid,ppid,stat,command<br>进程级别<br>ps axwf -eo pid,stat | grep D<br>线程级别<br>ps -eL -eo pid,stat,pcpu | grep D<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;kill –18 PPID （PPID是其父进程）</span><br><span class="line">&gt;或者kill –15 PID1 PID2(PID1,PID2是僵尸进程的父进程的其它子进程)，然后再kill父进程：kill –15 PPID 这样僵尸进程就可能被完全杀掉了</span><br><span class="line"></span><br><span class="line">#### 计算文件夹下文件目录数量、统计字符数</span><br></pre></td></tr></table></figure></p><p>某目录下文件的个数（不包括子目录）<br>ls -l |grep “^-“|wc -l<br>某目录下文件的个数（包括子目录）<br>ls -lR|grep “^-“|wc -l<br>某文件夹下目录的个数（包括子目录）<br>ls -lR|grep “^d”|wc -l<br>统计指定文件中包含某字符串的行数、字数和字节数<br>grep ‘b’ file | wc<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#### vim</span><br></pre></td></tr></table></figure></p><p>:nohl 删除高亮<br>:/ term search<br>:n,$s/vivian/sky/g 替换第 n 行开始到最后一行中每一行所有 vivian 为 sky<br>:s#vivian/#sky/# 替换当前行第一个 vivian/ 为 sky/<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#### shell字符串截取与拼接</span><br><span class="line">[bash shell学习之变量](http://blog.51cto.com/lovelace/1211141)</span><br></pre></td></tr></table></figure></p><p>var=<a href="http://www.test.com/lalala123.html" target="_blank" rel="noopener">http://www.test.com/lalala123.html</a><br>echo ${var#<em>//} 左起/ 向左删除<br>echo ${var##</em>/} 右起/ 向左删除<br>echo ${var%/<em>} 右起/ 向右删除<br>echo ${var%%/</em>} 左起/ 向右删除<br>echo ${var:0:5} 左起 第0个字符到第4个<br>echo ${var:0-7} 右起 第0个字符到第6个<br>value1=hello 赋值，不能有空格<br>value2=${value1}”world” 拼接<br>echo ${value2}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#### shell 2&gt;&amp;1 使用 [参考](http://www.cnblogs.com/yangyongzhi/p/3364939.html)</span><br><span class="line">&gt;cat food 2&gt;&amp;1 &gt;file ：错误输出到终端，标准输出被重定向到文件file</span><br><span class="line">&gt;cat food &gt;file 2&gt;&amp;1 ：标准输出被重定向到文件file，然后错误输出也重定向到和标准输出一样，所以也错误输出到文件file</span><br><span class="line"></span><br><span class="line">#### rename</span><br><span class="line">##### rename命令是哪个版本</span><br><span class="line">man rename</span><br><span class="line">##### C</span><br></pre></td></tr></table></figure></p><p>以log开头的所有文件中的log字符替换为history<br>rename log history log*<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">想实现类似perl rename 功能，自建perl脚本</span><br></pre></td></tr></table></figure></p><p>#!/usr/bin/perl -w<br>use strict;</p><p>use Getopt::Long;<br>Getopt::Long::Configure(‘bundling’);</p><p>my ($verbose, $no_act, $force, $op);</p><p>die “Usage: rename [-v] [-n] [-f] perlexpr [filenames]\n”<br>    unless GetOptions(<br>        ‘v|verbose’ =&gt; \$verbose,<br>        ‘n|no-act’  =&gt; \$no_act,<br>        ‘f|force’   =&gt; \$force,<br>    ) and $op = shift;</p><p>$verbose++ if $no_act;</p><p>if (!@ARGV) {<br>    print “reading filenames from STDIN\n” if $verbose;<br>    @ARGV = <stdin>;<br>    chop(@ARGV);<br>}</stdin></p><p>for (@ARGV) {<br>    my $was = $<em>;<br>    eval $op;<br>    die $@ if $@;<br>    next if $was eq $</em>; # ignore quietly<br>    if (-e $<em> and !$force)<br>    {<br>        warn  “$was not renamed: $</em> already exists\n”;<br>    }<br>    elsif ($no<em>act or rename $was, $</em>)<br>    {<br>        print “$was renamed as $<em>\n” if $verbose;<br>    }<br>    else<br>    {<br>        warn  “Can’t rename $was $</em>: $!\n”;<br>    }<br>}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[源码地址](https://gist.github.com/keymon/995151) 偶尔打不开</span><br><span class="line">##### perl 正则</span><br></pre></td></tr></table></figure></p><p>以 .bak结尾，把.bak去掉<br>rename ‘s/.bak$//‘ <em>.bak<br>把所有文件名内含有大小字母的修改为小写字母<br>rename ‘y/A-Z/a-z/‘ </em><br>文件名去空格<br>rename ‘s/[ ]+/_/g’ *<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#### paste</span><br></pre></td></tr></table></figure></p><p>合并两列，-d指定域分隔符为：<br>paste -d: file1 file2<br>合并两行<br>paste -s file1 file2<br>选项（-），对每一个（-），从标准输入中读一次数据。如，空格作域分隔符，以6列格式显示目录列表</p><h1 id="ls-etc-paste-d”-“"><a href="#ls-etc-paste-d”-“" class="headerlink" title="ls /etc | paste -d” “ - - - - - -"></a>ls /etc | paste -d” “ - - - - - -</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#### awk [参考](http://man.linuxde.net/awk)</span><br></pre></td></tr></table></figure><p>awk -F: ‘{print NR,$1,$2,$3,$4,$5}’ OFS=’\t’ helloworld.sh //制表符分隔输出前5个字段，并打印行号<br>awk -F’[:#/]’ ‘{print NF}’ helloworld.sh //指定三个分隔符，并输出每行字段数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#### 软件下载</span><br><span class="line">[tar.gz,tar.bz2下载参考](http://www.cnblogs.com/huangfenghit/archive/2011/02/17/1957057.html)</span><br></pre></td></tr></table></figure></p><p>tar jxvf filename.tar.bz2<br>tar zxvf filename.tar.gz<br>./configure<br>make<br>make install<br>make clean<br>卸载<br>make uninstall<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">i安装软件，v检测套件是否安装正确</span><br><span class="line">rpm -ivh filename.rpm</span><br><span class="line">卸载软件</span><br><span class="line">rpm -e 软件名</span><br><span class="line">rpm --rebuild filename.src.rpm </span><br><span class="line">rpm -ivh /usr/src/regflag/RPMS/i386/filename.rpm</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i filename.deb</span><br><span class="line">dpkg -e filename</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unrar filename.rar</span><br><span class="line">unzip filename.zip</span><br></pre></td></tr></table></figure><h4 id="32-64位CentOS-安装记录"><a href="#32-64位CentOS-安装记录" class="headerlink" title="32/64位CentOS 安装记录"></a>32/64位CentOS 安装记录</h4><p>虚拟机：VirtualBox for windows hosts  <a href="http://www.virtualbox.org/wiki/Downloads" target="_blank" rel="noopener">http://www.virtualbox.org/wiki/Downloads</a><br>新建Lunixy用的虚拟机：CentOS<br>下载CentOS镜像 <a href="http://Iso.lishiming.net" target="_blank" rel="noopener">http://Iso.lishiming.net</a> 32/64<br>设置虚拟光驱：找到镜像<br>安装CentOSg<br>出现问题：内存不能written<br>改成安装VMware：VMware——&gt;CentOS开虚拟机——&gt;登录——&gt;application 注意联网<br>MobaXterm <a href="http://mobaxterm.mobatek.net/download.html" target="_blank" rel="noopener">http://mobaxterm.mobatek.net/download.html</a></p><h4 id="查看Linux系统"><a href="#查看Linux系统" class="headerlink" title="查看Linux系统"></a>查看Linux系统</h4><ul><li>uname -a  查看内核/操作系统/CPU信息 </li><li>head -n 1 /etc/issue  查看操作系统版本 </li><li>cat /proc/cpuinfo  查看CPU信息 </li><li>hostname  查看计算机名 </li><li>lspci -tv  列出所有PCI设备 </li><li>lsusb -tv  列出所有USB设备 </li><li>lsmod  列出加载的内核模块 </li><li>env  查看环境变量资源 </li><li>free -m  查看内存使用量和交换区使用量 </li><li>df -h  查看各分区使用情况 </li><li>du -sh &lt;目录名&gt;  查看指定目录的大小 </li><li>grep MemTotal /proc/meminfo  查看内存总量 </li><li>grep MemFree /proc/meminfo  查看空闲内存量 </li><li>uptime  查看系统运行时间、用户数、负载 </li><li>cat /proc/loadavg  查看系统负载磁盘和分区 </li><li>mount | column -t  查看挂接的分区状态 </li><li>fdisk -l  查看所有分区 </li><li>swapon -s  查看所有交换分区 </li><li>hdparm -i /dev/hda  查看磁盘参数(仅适用于IDE设备) </li><li>dmesg | grep IDE  查看启动时IDE设备检测状况网络 </li><li>ifconfig  查看所有网络接口的属性 </li><li>iptables -L  查看防火墙设置 </li><li>route -n  查看路由表 </li><li>netstat -lntp  查看所有监听端口 </li><li>netstat -antp  查看所有已经建立的连接 </li><li>netstat -s  查看网络统计信息进程 </li><li>ps -ef  查看所有进程 </li><li>top  实时显示进程状态用户 </li><li>w  查看活动用户 </li><li>id &lt;用户名&gt;  查看指定用户信息 </li><li>last  查看用户登录日志 </li><li>cut -d: -f1 /etc/passwd  查看系统所有用户 </li><li>cut -d: -f1 /etc/group  查看系统所有组 </li><li>crontab -l  查看当前用户的计划任务服务 </li><li>chkconfig –list  列出所有系统服务 </li><li>chkconfig –list | grep on  列出所有启动的系统服务程序 </li><li>rpm -qa  查看所有安装的软件包<h4 id="普通用户修改密码"><a href="#普通用户修改密码" class="headerlink" title="普通用户修改密码"></a>普通用户修改密码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br><span class="line">​`</span><br></pre></td></tr></table></figure></li></ul><p>```</p>]]></content>
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bioinformatics </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>安装picard、FastViromeExplorer使用</title>
      <link href="/2018/05/11/Linux/%E5%AE%89%E8%A3%85picard%E3%80%81FastViromeExplorer%E4%BD%BF%E7%94%A8/"/>
      <url>/2018/05/11/Linux/%E5%AE%89%E8%A3%85picard%E3%80%81FastViromeExplorer%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<h4 id="安装picard报错-安装参考"><a href="#安装picard报错-安装参考" class="headerlink" title="安装picard报错 安装参考"></a>安装picard报错 <a href="http://www.cnblogs.com/zhcncn/p/4030078.html" target="_blank" rel="noopener">安装参考</a></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/broadinstitute/picard.git</span><br></pre></td></tr></table></figure><p><strong>报错如下</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Initialized empty Git repository in /home/tingm/software/picard/.git/</span><br><span class="line">error:  while accessing https://github.com/broadinstitute/picard.git/info/refs</span><br><span class="line">fatal: HTTP request failed</span><br></pre></td></tr></table></figure></p><h4 id="安装2-9-5版本git"><a href="#安装2-9-5版本git" class="headerlink" title="安装2.9.5版本git"></a>安装2.9.5版本git</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.9.5.tar.gz</span><br><span class="line">tar zxvf git-2.9.5.tar.gz</span><br><span class="line">cd git-2.9.5/</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">whereis git 旧版本git</span><br><span class="line">vim ~、.bash_profile 添加路径</span><br></pre></td></tr></table></figure><p><strong>仍旧报错</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Cloning into &apos;picard&apos;...</span><br><span class="line">fatal: unable to access &apos;https://github.com/broadinstitute/picard.git/&apos;: SSL connect error</span><br></pre></td></tr></table></figure></p><h4 id="设置git、添加SSH-keys、git-clone已存在GitHub上的Repository"><a href="#设置git、添加SSH-keys、git-clone已存在GitHub上的Repository" class="headerlink" title="设置git、添加SSH keys、git clone已存在GitHub上的Repository"></a>设置git、添加SSH keys、git clone已存在GitHub上的Repository</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;Your Name&quot;</span><br><span class="line">git config --global user.email &quot;youremail@domain.com&quot;</span><br><span class="line">ssh-keygen -t rsa -C &quot;youremail@163.com&quot;</span><br><span class="line">vim ~/.ssh/id_rsa.pub</span><br><span class="line">ssh -T git@github.com</span><br><span class="line">git clone git@github.com:michaelliao/gitskills.git</span><br></pre></td></tr></table></figure><h4 id="更换下载路径-picard-issues-659"><a href="#更换下载路径-picard-issues-659" class="headerlink" title="更换下载路径 picard/issues/659"></a><strong>更换下载路径</strong> <a href="https://github.com/broadinstitute/picard/issues/659" target="_blank" rel="noopener">picard/issues/659</a></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:broadinstitute/picard.git</span><br><span class="line">cd picard/</span><br><span class="line">./gradlew shadowJar</span><br></pre></td></tr></table></figure><h4 id="FastViromeExplorer使用"><a href="#FastViromeExplorer使用" class="headerlink" title="FastViromeExplorer使用"></a>FastViromeExplorer使用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp bin FastViromeExplorer -1 /home/tingm/test/test1.fq -2 /home/tingm/test/test2.fq -i /home/tingm/software/FastViromeExplorer/eukaryotic-virus-kallisto-index-k31.idx -o /home/tingm/test/test-output</span><br></pre></td></tr></table></figure><p><strong>问题：如何更改路径，使得不在FastViromeExplorer文件夹下也可运行</strong></p><h4 id="picard-RevertSam"><a href="#picard-RevertSam" class="headerlink" title="picard RevertSam"></a>picard RevertSam</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar /home/tingm/software/picard/build/libs/picard.jar RevertSam I=/home/tingm/rna_editing/hbv/results_hisat/SRR6080227_grch38.mapped.bam O=test.bam</span><br></pre></td></tr></table></figure><p>bedtools bamtofastq -i test.bam -fq test.end1.fq -fq2 test.end2.fq</p>]]></content>
      
      
        <tags>
            
            <tag> bioinformatics </tag>
            
            <tag> Linux </tag>
            
            <tag> picard </tag>
            
            <tag> FastViromeExplorer </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux路径问题</title>
      <link href="/2018/05/11/Linux/linux%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/"/>
      <url>/2018/05/11/Linux/linux%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h3 id="问题：下载1-5版本samtools后仍调用1-19版本"><a href="#问题：下载1-5版本samtools后仍调用1-19版本" class="headerlink" title="问题：下载1.5版本samtools后仍调用1.19版本"></a>问题：下载1.5版本samtools后仍调用1.19版本</h3><h4 id="添加1-5版本路径后仍调用旧版本"><a href="#添加1-5版本路径后仍调用旧版本" class="headerlink" title="添加1.5版本路径后仍调用旧版本"></a>添加1.5版本路径后仍调用旧版本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line">PATH=$PATH:/home/tingm/software/samtools-1.5/</span><br></pre></td></tr></table></figure><h4 id="查看调用1-19版本的绝对路径"><a href="#查看调用1-19版本的绝对路径" class="headerlink" title="查看调用1.19版本的绝对路径"></a>查看调用1.19版本的绝对路径</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">which samtools</span><br></pre></td></tr></table></figure><h4 id="bash命令优先级"><a href="#bash命令优先级" class="headerlink" title="bash命令优先级"></a>bash命令优先级</h4><p>别名(alias)——复合命令——函数——内部命令(help)——缓存命令(hash -r)——外部命令(echo $PATH)<br>type:确定命令是否为内部命令或外部命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type samtools</span><br></pre></td></tr></table></figure></p><p>外部命令samtools is /home/software/bin/samtools，可能外部命令中存在多个samtools路径，先调用了前面的samtools</p><h4 id="查看PATH"><a href="#查看PATH" class="headerlink" title="查看PATH"></a>查看PATH</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export</span><br><span class="line">echo $PATH</span><br></pre></td></tr></table></figure><h4 id="export添加路径-只针对当前shell"><a href="#export添加路径-只针对当前shell" class="headerlink" title="export添加路径 只针对当前shell"></a>export添加路径 只针对当前shell</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=$PATH:新添加的路径</span><br></pre></td></tr></table></figure><h4 id="vim-bash-profile添加路径-永久有效"><a href="#vim-bash-profile添加路径-永久有效" class="headerlink" title="vim ~/.bash_profile添加路径 永久有效"></a>vim ~/.bash_profile添加路径 永久有效</h4><p>查找命令顺序是按环境变量顺序进行，第一次找到查询命令即调用执行。想执行的samtools命令path中有旧版调用，所以<strong>需把新版samtools路径/写在$PATH前面</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/home/tingm/software/samtools-1.5/:$PATH</span><br></pre></td></tr></table></figure></p><p>python路径可类比更改为python3<br>java7路径改为java8</p><blockquote><p>参考<br><a href="http://www.cnblogs.com/hongzg1982/articles/2101792.html" target="_blank" rel="noopener">linux关于bashrc与profile的区别</a><br><a href="https://blog.caock.net/zh/linux%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E5%AE%89%E8%A3%85%E8%B7%AF%E5%BE%84%E5%8F%8A%E6%BA%90%E7%AE%A1%E7%90%86%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%8D%87%E7%BA%A7/" target="_blank" rel="noopener">Linux可执行文件安装路径 环境变量</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bioinformatics </tag>
            
            <tag> Linux </tag>
            
            <tag> samtools </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>L9.模型优化与融合</title>
      <link href="/2018/05/10/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/L9.%E6%A8%A1%E5%9E%8B%E4%BC%98%E5%8C%96%E4%B8%8E%E8%9E%8D%E5%90%88/"/>
      <url>/2018/05/10/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/L9.%E6%A8%A1%E5%9E%8B%E4%BC%98%E5%8C%96%E4%B8%8E%E8%9E%8D%E5%90%88/</url>
      <content type="html"><![CDATA[<h4 id="模型融合"><a href="#模型融合" class="headerlink" title="模型融合"></a>模型融合</h4><p>投票器模型融合、Bagging、RandomForest</p><p><strong>Mark:继续机器学习部分学习，完成作业Test3作业，加深理解，整理笔记</strong></p>]]></content>
      
      <categories>
          
          <category> 数据科学实训营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>L8.机器学习进阶</title>
      <link href="/2018/05/09/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/L8.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%BF%9B%E9%98%B6/"/>
      <url>/2018/05/09/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/L8.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%BF%9B%E9%98%B6/</url>
      <content type="html"><![CDATA[<h4 id="初步了解"><a href="#初步了解" class="headerlink" title="初步了解"></a>初步了解</h4><p>head() info() describe() shape</p><h4 id="缺失值处理"><a href="#缺失值处理" class="headerlink" title="缺失值处理"></a>缺失值处理</h4><p>pd.DataFrame.fillna    sklearn Imputer</p><h4 id="数值型"><a href="#数值型" class="headerlink" title="数值型"></a>数值型</h4><p>幅度变换 apply+numpy    sklearn.preprocessing scaler<br>统计 max min quantile<br>四则运算<br>高次特征与交叉特征 preprocessing.PolynomialFeatures<br>离散化/分箱/分桶 pandas cut    pandas qcut </p><blockquote><p>cut将根据值本身来选择箱子均匀间隔，qcut是根据这些值的频率来选择箱子的均匀间隔</p></blockquote><p>OneHot encoding/独热向量编码 pandas get_dummies    OneHotEncoder()</p><h4 id="时间型"><a href="#时间型" class="headerlink" title="时间型"></a>时间型</h4><p>日期处理 pandas to_datetime<br>取出关键时间信息 dt.month dt.dayofweek dt.dayofyear</p><h4 id="文本型"><a href="#文本型" class="headerlink" title="文本型"></a>文本型</h4><p>词袋模型 CountVectorizer<br>TF-IDF TfidfVectorizer</p><h4 id="特征选择"><a href="#特征选择" class="headerlink" title="特征选择"></a>特征选择</h4><p>过滤式/Filter SelectKBes<br>包裹型/wrapper RFE<br>嵌入式/Embedded SelectFromModel</p><h4 id="网格搜索和交叉验证"><a href="#网格搜索和交叉验证" class="headerlink" title="网格搜索和交叉验证"></a>网格搜索和交叉验证</h4><blockquote><p>网格搜索法算法就是通过交叉验证的方法去寻找最优的模型参数</p></blockquote><p><a href="https://www.cnblogs.com/jasonfreak/p/5448385.html" target="_blank" rel="noopener">使用sklearn做单机特征工程</a><br><a href="http://www.cnblogs.com/sddai/p/6440797.html" target="_blank" rel="noopener">网格搜索（参数选择）</a><br><a href="https://www.davex.pw/2017/09/17/Cross-Validation/" target="_blank" rel="noopener">交叉验证与网格搜索算法</a></p>]]></content>
      
      <categories>
          
          <category> 数据科学实训营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Test1</title>
      <link href="/2018/05/09/%E7%BB%83%E4%B9%A0/Test1/"/>
      <url>/2018/05/09/%E7%BB%83%E4%B9%A0/Test1/</url>
      <content type="html"><![CDATA[<h4 id="有如下json文件，取出http开头dcm结尾的下载链接（python）"><a href="#有如下json文件，取出http开头dcm结尾的下载链接（python）" class="headerlink" title="有如下json文件，取出http开头dcm结尾的下载链接（python）"></a>有如下json文件，取出http开头dcm结尾的下载链接（python）</h4><p><a href="https://pan.baidu.com/s/1nmv5N0XiU8Pr5_aDYHFi1w" target="_blank" rel="noopener">json文件</a><br>网页搜索json在线解析查看规律<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import json</span><br><span class="line">import io</span><br><span class="line"></span><br><span class="line">def resolve(file_name):</span><br><span class="line">with io.open(file_name, &apos;r&apos;, encoding=&apos;windows-1252&apos;) as file:</span><br><span class="line">for line in file:</span><br><span class="line">Data = json.loads(line)</span><br><span class="line">return Data</span><br><span class="line"></span><br><span class="line">def write_file(file_name,Data):</span><br><span class="line">serieslist = Data[&apos;data&apos;][0][&apos;SeriesList&apos;]</span><br><span class="line">with open(file_name,&quot;a&quot;) as f:</span><br><span class="line">for series in serieslist:</span><br><span class="line">imagelist = series[&apos;ImageList&apos;]</span><br><span class="line">for image in imagelist:</span><br><span class="line">f.write(image[&apos;ObjectKey&apos;]+&apos;\n&apos;)</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line">c = resolve(&quot;c.json&quot;)</span><br><span class="line">write_file(&quot;c_https.txt&quot;,c)</span><br><span class="line">b = resolve(&quot;b.json&quot;)</span><br><span class="line">write_file(&quot;b_https.txt&quot;,b)</span><br></pre></td></tr></table></figure></p><p>shell<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat c.json | tr &apos;&quot;&apos; &apos;\n&apos; | grep &apos;http:&apos; &gt; c_https.txt</span><br><span class="line">cat b.json | tr &apos;&quot;&apos; &apos;\n&apos; | grep &apos;http:&apos; &gt; b_https.txt</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> Test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>实战7-QQ答疑</title>
      <link href="/2018/05/03/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/%E5%AE%9E%E6%88%987-QQ%E7%AD%94%E7%96%91/"/>
      <url>/2018/05/03/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/%E5%AE%9E%E6%88%987-QQ%E7%AD%94%E7%96%91/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">from sklearn import datasets</span><br><span class="line">import numpy as np</span><br><span class="line">import pydotplus</span><br><span class="line">from IPython.display import Image</span><br><span class="line">from IPython.display import display</span><br><span class="line"></span><br><span class="line">if Version(sklearn_version) &gt;= &apos;0.18&apos;:</span><br><span class="line">    try:</span><br><span class="line">        import pydotplus</span><br><span class="line">        dot_data = export_graphviz(</span><br><span class="line">        tree,</span><br><span class="line">        out_file=None,</span><br><span class="line">        feature_names=[&apos;petal length&apos;,&apos;petal length&apos;],</span><br><span class="line">        class_names=[&apos;setosa&apos;,&apos;versicolor&apos;,&apos;virginica&apos;],</span><br><span class="line">        filled=True,</span><br><span class="line">        rounded=True)</span><br><span class="line">        </span><br><span class="line">        graph = pydotplus.graph_from_dot_data(dot_data)</span><br><span class="line">        display(Image(graph.create_png()))</span><br><span class="line">    except ImportError:</span><br><span class="line">        print(&apos;pydotplus is not installed.&apos;)</span><br></pre></td></tr></table></figure><h4 id="NameError-name-‘Version’-is-not-defined"><a href="#NameError-name-‘Version’-is-not-defined" class="headerlink" title="NameError: name ‘Version’ is not defined"></a>NameError: name ‘Version’ is not defined</h4><p><a href="https://stackoverflow.com/questions/28501072/how-to-check-which-version-of-nltk-scikit-learn-installed" target="_blank" rel="noopener">how to check which version of nltk, scikit learn installed?</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import sklearn</span><br><span class="line">if sklearn.__version__ &gt;= &apos;0.18&apos;:</span><br></pre></td></tr></table></figure></p><h4 id="InvocationException-GraphViz’s-executables-not-found"><a href="#InvocationException-GraphViz’s-executables-not-found" class="headerlink" title="InvocationException: GraphViz’s executables not found"></a>InvocationException: GraphViz’s executables not found</h4><p><a href="https://stackoverflow.com/questions/18438997/why-is-pydot-unable-to-find-graphvizs-executables-in-windows-8" target="_blank" rel="noopener">Why is pydot unable to find GraphViz’s executables in Windows 8?</a><br><a href="https://www.cnblogs.com/onemorepoint/p/8310996.html" target="_blank" rel="noopener">windows下Graphviz安装及入门教程</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">import os       </span><br><span class="line">os.environ[&quot;PATH&quot;] += os.pathsep + &apos;C:/Program Files (x86)/Graphviz2.38/bin/&apos;</span><br></pre></td></tr></table></figure></p><p><a href="http://www.cnblogs.com/pinard/p/6056319.html" target="_blank" rel="noopener">scikit-learn决策树结果的可视化</a></p><p>在本地notebook上运行可行，在课程平台上InvocationException: GraphViz’s executables not found问题无法解决，没办法操作安装Graphviz</p><p><strong><em><a href="www.xiniuedu.com">稀牛学院</a>数据科学实训营 助教土豆老师QQ答疑*</em></strong></p>]]></content>
      
      <categories>
          
          <category> 数据科学实训营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>L7.机器学习初识</title>
      <link href="/2018/04/29/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/L7.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%88%9D%E8%AF%86/"/>
      <url>/2018/04/29/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/L7.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%88%9D%E8%AF%86/</url>
      <content type="html"><![CDATA[<p><a href="http://www.cnblogs.com/leoo2sk/archive/2010/09/17/naive-bayesian-classifier.htm" target="_blank" rel="noopener">分类算法之朴素贝叶斯分类Naive Bayesian classification</a><br><a href="https://blog.csdn.net/v_july_v/article/details/7624837" target="_blank" rel="noopener">支持向量机通俗导论（理解SVM的三层境界)</a><br><a href="https://www.cnblogs.com/xinchen1111/p/8804858.html" target="_blank" rel="noopener">真正理解拉格朗日乘子法和 KKT 条件</a><br><a href="https://blog.csdn.net/luoshixian099/article/details/51073885" target="_blank" rel="noopener">SVM解二分类,多分类,及后验概率输出</a></p><p>记录几个CS229机器学习课程笔记博客<br><a href="https://blog.csdn.net/sinat_37965706" target="_blank" rel="noopener">Jiahe的博客</a><br><a href="https://blog.csdn.net/column/details/ml-ng-record.html" target="_blank" rel="noopener">张雨石的博客</a></p>]]></content>
      
      <categories>
          
          <category> 数据科学实训营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Test2.可视化</title>
      <link href="/2018/04/27/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/Test2.%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
      <url>/2018/04/27/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/Test2.%E5%8F%AF%E8%A7%86%E5%8C%96/</url>
      <content type="html"><![CDATA[<blockquote><p>参考资料<br><a href="https://blog.csdn.net/czl389/article/details/76944504" target="_blank" rel="noopener">Python matplotlib 练习题</a><br><a href="https://blog.csdn.net/czl389/article/details/77074876" target="_blank" rel="noopener">Python可视化seaborn练习题</a><br><a href="https://www.2cto.com/kf/201803/725871.html" target="_blank" rel="noopener">Python数据分析之seaborn常用方法</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> 数据科学实训营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>L6.seaborn可视化 要点记录</title>
      <link href="/2018/04/26/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/L6.seaborn%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
      <url>/2018/04/26/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/L6.seaborn%E5%8F%AF%E8%A7%86%E5%8C%96/</url>
      <content type="html"><![CDATA[<h4 id="np-random-seed-5"><a href="#np-random-seed-5" class="headerlink" title="np.random.seed(5)"></a>np.random.seed(5)</h4><blockquote><p>One.给随机数对象一个seed值(即test)，用于产生随机序列。<br>Two.对同一个种子值，之后产生的随机数序列一样。<br>Three.通常是把时间秒数等变化值作为种子值，达到每次运行产生的随机系列都不一样。<br>Four.seed() 省略参数，意味着使用当前系统时间生成随机数。<br>Five.设置的seed()值仅一次有效。</p></blockquote><h4 id="np-linspace-0-14-100"><a href="#np-linspace-0-14-100" class="headerlink" title="np.linspace(0, 14, 100)"></a>np.linspace(0, 14, 100)</h4><blockquote><p>linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None)<br>linspace(样本起始值，样本终止值，样本个数，为真则stop对应值包含在样本中，为真则返回样本及步长，样本数据类型)</p></blockquote><h4 id="整体参数设置"><a href="#整体参数设置" class="headerlink" title="整体参数设置"></a>整体参数设置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sns.set_style(&quot;ticks&quot;) #风格</span><br><span class="line">sns.set_context(&quot;paper&quot;) #尺度</span><br><span class="line">sns.color_palette(&quot;hls&quot;, 10)#颜色</span><br></pre></td></tr></table></figure><h4 id="图形绘制要点"><a href="#图形绘制要点" class="headerlink" title="图形绘制要点"></a>图形绘制要点</h4><h5 id="回归"><a href="#回归" class="headerlink" title="回归"></a>回归</h5><p>sns.lmplot(x=”size”, y=”tip”, data=tips, x_estimator=np.mean)#离散取值上用均值和置信区间代替散点</p><blockquote><p>拟合曲线：lmplot(x, y, data, ci, x_estimator, robust, logistic, order)<br>残差曲线：residplot()<br>子图绘制：lmplot(hue, row, col)<br>尺寸控制：lmplot(col_wrap, size, aspect)</p></blockquote><h5 id="分布"><a href="#分布" class="headerlink" title="分布"></a>分布</h5><blockquote><p>distplot(bins, rug)<br>kdeplot(bw, fit)<br>joinplot(kind)<br>pairplot</p></blockquote><h5 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h5><blockquote><p>swarmplot(data), stripplot(data)<br>boxplot(data), voilinplot(data, scale, split, inner)<br>barplot(data, hue), pointplot(data, hue)<br>factorplot(col, kind)</p><p><a href="https://seaborn.pydata.org/examples/index.html" target="_blank" rel="noopener">seaborn</a></p></blockquote><p><strong><em>以上来自<a href="www.xiniuedu.com">稀牛学院</a>数据科学实训营 常老师关于seaborn的讲解</em></strong></p>]]></content>
      
      <categories>
          
          <category> 数据科学实训营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Chapter 4 &amp; 5</title>
      <link href="/2018/04/25/Beginning%20Perl%20(free)%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/perl_learning.3/"/>
      <url>/2018/04/25/Beginning%20Perl%20(free)%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/perl_learning.3/</url>
      <content type="html"><![CDATA[<h3 id="if-amp-unless"><a href="#if-amp-unless" class="headerlink" title="if &amp; unless"></a>if &amp; unless</h3><h4 id="if"><a href="#if" class="headerlink" title="if(){}"></a>if(){}</h4><h5 id="Logical-operators-revisited"><a href="#Logical-operators-revisited" class="headerlink" title="Logical operators revisited"></a>Logical operators revisited</h5><p>false: “ “, 0, “0”, (), undefined value, everything else is true<br>exists $hash{$scalar}</p><h5 id="Comparing-Numbers"><a href="#Comparing-Numbers" class="headerlink" title="Comparing Numbers"></a>Comparing Numbers</h5><p>$a &gt; $b, &lt;, ==, !=</p><h5 id="Comparing-Strings"><a href="#Comparing-Strings" class="headerlink" title="Comparing Strings"></a>Comparing Strings</h5><p>$a gt $b, le, eq, ne</p><h5 id="Logical-Conjunctions"><a href="#Logical-Conjunctions" class="headerlink" title="Logical Conjunctions"></a>Logical Conjunctions</h5><p>and or not</p><h5 id="Multiple-Choice"><a href="#Multiple-Choice" class="headerlink" title="Multiple Choice"></a>Multiple Choice</h5><p>if elsif else</p><h4 id="Unless"><a href="#Unless" class="headerlink" title="Unless(){}"></a>Unless(){}</h4><p>If this doesn’t exist, then this happens; Unless this exists, this happens</p><h3 id="Loops"><a href="#Loops" class="headerlink" title="Loops"></a>Loops</h3><h4 id="for-amp-foreach"><a href="#for-amp-foreach" class="headerlink" title="for &amp; foreach"></a>for &amp; foreach</h4><h5 id="注意my"><a href="#注意my" class="headerlink" title="注意my"></a>注意my</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">my @array = (1, 3, 5, 7, 9);</span><br><span class="line">my $i;</span><br><span class="line">for $i (@array) &#123;</span><br><span class="line">        print &quot;This element: $i\n&quot;;</span><br><span class="line">&#125;</span><br><span class="line">foreach $i (@array) &#123;</span><br><span class="line">        print &quot;This element: $i\n&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">my @array = (1, 3, 5, 7, 9);</span><br><span class="line">foreach my $i (@array) &#123;</span><br><span class="line">        print &quot;This element: $i\n&quot;;</span><br><span class="line">&#125;</span><br><span class="line">my $j = &quot;End&quot;;</span><br><span class="line">foreach $j (@array)&#123;</span><br><span class="line">        print &quot;This element: $j\n&quot;;</span><br><span class="line">&#125;</span><br><span class="line">print &quot;$j\n&quot;;</span><br></pre></td></tr></table></figure><h5 id="注意"><a href="#注意" class="headerlink" title="注意$_"></a>注意$_</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">my %hash = (car =&gt; &apos;voiture&apos;, coach =&gt; &apos;cat&apos;);</span><br><span class="line">for (keys %hash)&#123;</span><br><span class="line">        print &quot;English: $_\n&quot;;</span><br><span class="line">        print &quot;French: $hash&#123;$_&#125;\n\n&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Change-the-iterator-make-a-copy"><a href="#Change-the-iterator-make-a-copy" class="headerlink" title="Change the iterator, make a copy"></a>Change the iterator, make a copy</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">foreach (1, 2, 3) &#123;</span><br><span class="line">        my $i = $_; #</span><br><span class="line">        $i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="ARGV"><a href="#ARGV" class="headerlink" title="@ARGV"></a>@ARGV</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">my $total = 0;</span><br><span class="line">$total += $_ for @ARGV;</span><br><span class="line">print &quot;The total is $total\n&quot;;</span><br></pre></td></tr></table></figure><h4 id="While"><a href="#While" class="headerlink" title="While"></a>While</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">while (&lt;STDIN&gt;) &#123;</span><br><span class="line">        chomp;</span><br><span class="line">        die &quot;!enod llA\n&quot; unless $_;</span><br><span class="line">        my $sdrawkcab = reverse $_;</span><br><span class="line">        print &quot;$sdrawkcab\n&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">my $countdown = 5;</span><br><span class="line">print &quot;Counting down: $countdown\n&quot; while $countdown-- &gt;0;</span><br></pre></td></tr></table></figure><h4 id="until"><a href="#until" class="headerlink" title="until"></a>until</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">my $countdown = 5;</span><br><span class="line">until ($countdown-- == 0) &#123;</span><br><span class="line">        print &quot;Counting down: $countdown\n&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Controlling-loop-flow"><a href="#Controlling-loop-flow" class="headerlink" title="Controlling loop flow"></a>Controlling loop flow</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">my $stopnow = 0; #flag</span><br><span class="line">until ($stopnow) &#123;</span><br><span class="line">print &quot;!enod llA\n&quot;;</span><br><span class="line">        $_ = &lt;STDIN&gt;;</span><br><span class="line">        chomp;</span><br><span class="line">if ($_) &#123;</span><br><span class="line">        my $sdrawkcab = reverse $_;</span><br><span class="line">        print &quot;$sdrawkcab\n&quot;;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">        $stopnow = 1;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">print &quot;!enod llA\n&quot;;</span><br></pre></td></tr></table></figure><h4 id="Breaking-Out-amp-Going-onto-the-next"><a href="#Breaking-Out-amp-Going-onto-the-next" class="headerlink" title="Breaking Out &amp; Going onto the next"></a>Breaking Out &amp; Going onto the next</h4><p>last &amp; next</p><h4 id="正则Example"><a href="#正则Example" class="headerlink" title="正则Example"></a>正则Example</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">$_ = &quot;Nobody wants to hurt you... &apos;cept, I do hurt people sometimes, Case.&quot;;</span><br><span class="line">if ($_ =~ /people/) &#123;</span><br><span class="line">    print &quot;Hooray! Found the word &apos;people&apos;\n&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h4><p>在PERL5中可用字符对\Q和\E来转义，类似\</p><blockquote><p>lists&amp;hashs学习资料<br><a href="https://docs.google.com/viewer?url=http%3A%2F%2Fblob.perl.org%2Fbooks%2Fbeginning-perl%2F3145_Chap04.pdf" target="_blank" rel="noopener">Beginning Perl (free)——Chapter 4: Loops and Decisions</a><br><a href="http://www.cnblogs.com/catch/archive/2013/05/26/3099448.html" target="_blank" rel="noopener">perl 入门介绍(2)</a><br>正则学习资料<br><a href="https://docs.google.com/viewer?url=http%3A%2F%2Fblob.perl.org%2Fbooks%2Fbeginning-perl%2F3145_Chap05.pdf" target="_blank" rel="noopener">Beginning Perl (free)——Chapter 5: Regular Expressions</a><br><a href="http://www.cnblogs.com/catch/archive/2013/05/25/3098585.html" target="_blank" rel="noopener">正则表达式的基本用法</a><br><a href="http://www.runoob.com/perl/perl-regular-expressions.html" target="_blank" rel="noopener">Perl 正则表达式</a><br><a href="http://www.runoob.com/perl/perl-special-variables.html" target="_blank" rel="noopener">Perl 特殊变量</a><br><a href="https://qntm.org/files/perl/perl.html" target="_blank" rel="noopener">Learn Perl in about 2 hours 30 minutes</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> Beginning Perl (free)学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> perl </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Chapter 3</title>
      <link href="/2018/04/24/Beginning%20Perl%20(free)%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/perl_learning.2/"/>
      <url>/2018/04/24/Beginning%20Perl%20(free)%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/perl_learning.2/</url>
      <content type="html"><![CDATA[<h3 id="Lists"><a href="#Lists" class="headerlink" title="Lists"></a>Lists</h3><blockquote><p>if you’re ever printing long strings, consider splitting it up into a list of smaller strings on separate lines as we’ve done above.</p></blockquote><h4 id="More-Complex-Lists"><a href="#More-Complex-Lists" class="headerlink" title="More Complex Lists"></a>More Complex Lists</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">print (&apos;one&apos;,&apos;two&apos;,&apos;three&apos;,&apos;four&apos;);</span><br></pre></td></tr></table></figure><h5 id="Accessing-List-Values"><a href="#Accessing-List-Values" class="headerlink" title="Accessing List Values"></a>Accessing List Values</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">print ((&apos;salt&apos;, &apos;vinegar&apos;, &apos;mustard&apos;, &apos;pepper&apos;)[2]);</span><br><span class="line">print &quot;\n&quot;;</span><br><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">my $month = 3;</span><br><span class="line">print qw(</span><br><span class="line">January February March</span><br><span class="line">April May June</span><br><span class="line">July August September</span><br><span class="line">October November December</span><br><span class="line">)[$month];</span><br></pre></td></tr></table></figure><h5 id="List-Slices"><a href="#List-Slices" class="headerlink" title="List Slices"></a>List Slices</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">print((19, 68, 47, 60, 53, 51, 58, 55, 47)[4, 5, 6]);</span><br><span class="line">print &quot;\n&quot;;</span><br><span class="line">print((19, 68, 47, 60, 53, 51, 58, 55, 47)[(4, 5, 6)]);</span><br></pre></td></tr></table></figure><h4 id="Ranges"><a href="#Ranges" class="headerlink" title="Ranges"></a>Ranges</h4><blockquote><p>can’t mix letters and numbers within a range<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@var_1 = (1 .. 6);</span><br><span class="line">@var_2 = reverse(&apos;n&apos; .. &apos;z&apos;);</span><br><span class="line">(qw(Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec)[-2..1])</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="Arrays"><a href="#Arrays" class="headerlink" title="Arrays"></a>Arrays</h4><blockquote><p>store a list in an array just like we store a scalar literal into a scalar variable:@array = (1,2,3);</p></blockquote><h5 id="Assigned-an-array-to-a-scalar-variable"><a href="#Assigned-an-array-to-a-scalar-variable" class="headerlink" title="Assigned an array to a scalar variable"></a>Assigned an array to a scalar variable</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">my @array1;</span><br><span class="line">my $scalar1;</span><br><span class="line">@array1 = qw(Monday Tuesday Wednesday Thursday Friday Saturday Sunday);</span><br><span class="line">$scalar1 = @array1;</span><br><span class="line">print &quot;Array 1 is @array1\nScalar 1 is $scalar1\n&quot;;</span><br><span class="line">my @array2;</span><br><span class="line">my $scalar2;</span><br><span class="line">@array2 = qw(Winter Spring Summer Autumn);</span><br><span class="line">$scalar2 = @array2;</span><br><span class="line">print &quot;Array 2 is @array2\nScalar 2 is $scalar2\n&quot;;</span><br></pre></td></tr></table></figure><h5 id="Scalar-vs-List-Context"><a href="#Scalar-vs-List-Context" class="headerlink" title="Scalar vs List Context"></a>Scalar vs List Context</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">my @array1 = (10, 20, 30);</span><br><span class="line">my $scalar;</span><br><span class="line">my @array2;</span><br><span class="line">@array2 = @array1;</span><br><span class="line">$scalar = @array1;</span><br><span class="line">print @array2,&quot;\n&quot;;</span><br><span class="line">print &quot;@array2\n&quot;;</span><br><span class="line">print $scalar,&quot;\n&quot;;</span><br><span class="line">print scalar @array1;</span><br><span class="line">print &quot;\n&quot;;</span><br></pre></td></tr></table></figure><h5 id="Adding-to-an-Array"><a href="#Adding-to-an-Array" class="headerlink" title="Adding to an Array"></a>Adding to an Array</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">my @array1 = (1, 2, 3);</span><br><span class="line">my @array2;</span><br><span class="line">@array2 = (@array1, 4, 5, 6);</span><br></pre></td></tr></table></figure><h5 id="Accessing-an-Array"><a href="#Accessing-an-Array" class="headerlink" title="Accessing an Array"></a>Accessing an Array</h5><p>Scalar value @array[1] better written as $array[1]<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">my @array = (1, 3, 5, 7, 9);</span><br><span class="line">print @array[1];</span><br><span class="line">print $array[1];</span><br><span class="line">print @array[2..3];</span><br></pre></td></tr></table></figure></p><h5 id="Running-through-Arrays"><a href="#Running-through-Arrays" class="headerlink" title="Running through Arrays"></a>Running through Arrays</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">my @array = qw(American Asia Europe Africa);</span><br><span class="line">my $element;</span><br><span class="line">for $element (@array) &#123;</span><br><span class="line">        print $element, &quot;\n&quot;</span><br><span class="line">&#125;</span><br><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">my @array = (10, 20, 30, 40);</span><br><span class="line">print &quot;Before: @array\n&quot;;</span><br><span class="line">for (@array) &#123; $_ *= 2&#125;</span><br><span class="line">print &quot;After: @array\n&quot;;</span><br></pre></td></tr></table></figure><blockquote><p>$#questions is the index of the highest element in the @question array<br>注意scalar @array和$#array的区分</p></blockquote><h5 id="Pop-and-Push-amp-Shift-and-Unshift-amp-Sort"><a href="#Pop-and-Push-amp-Shift-and-Unshift-amp-Sort" class="headerlink" title="Pop and Push &amp; Shift and Unshift &amp; Sort"></a>Pop and Push &amp; Shift and Unshift &amp; Sort</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@array = (@array, $scalar);</span><br><span class="line">$scalar = pop @array;</span><br><span class="line">push @array,$scalar;</span><br><span class="line">unshift(@array,$scalar);</span><br><span class="line">shift @array;</span><br></pre></td></tr></table></figure><blockquote><p>if sort numbers there is a problem<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">my @unsorted = (1, 2, 11, 24, 3, 36, 40, 4);</span><br><span class="line">my @string = sort &#123; $a cmp $b&#125; @unsorted;</span><br><span class="line">my @number = sort &#123; $a &lt;=&gt; $b&#125; @unsorted;</span><br><span class="line">print &quot;@string\n&quot;;</span><br><span class="line">print &quot;@number\n&quot;;</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="Hashes"><a href="#Hashes" class="headerlink" title="Hashes"></a>Hashes</h3><h4 id="Creating-a-hash"><a href="#Creating-a-hash" class="headerlink" title="Creating a hash"></a>Creating a hash</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%hash = (&quot;a&quot;,&quot;xiaom&quot;,&quot;b&quot;,&quot;xiaohua&quot;);</span><br><span class="line">%hash = (&quot;a&quot;=&gt;&quot;xiaom&quot;,&quot;b&quot;=&gt;&quot;xiaohua&quot;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">my @array;</span><br><span class="line">my %hash;</span><br><span class="line">@array = qw(Gary Dallas Lucy Exeter);</span><br><span class="line">%hash = @array;</span><br><span class="line">print @array,&quot;\n&quot;;</span><br><span class="line">print %hash,&quot;\n&quot;;</span><br><span class="line">@array = %hash;</span><br><span class="line">print @array,&quot;\n&quot;;</span><br></pre></td></tr></table></figure><h4 id="Adding-Changing-and-Taking-Values-Away"><a href="#Adding-Changing-and-Taking-Values-Away" class="headerlink" title="Adding, Changing, and Taking Values Away"></a>Adding, Changing, and Taking Values Away</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$hash&#123;Eva&#125; = &quot;Denver&quot;;</span><br><span class="line">delete $hash&#123;Eva&#125;;</span><br></pre></td></tr></table></figure><h4 id="Accessing-multiple-values"><a href="#Accessing-multiple-values" class="headerlink" title="Accessing multiple values"></a>Accessing multiple values</h4><p>keys %hash<br>values %hash</p><blockquote><p>学习资料<br><a href="https://docs.google.com/viewer?url=http%3A%2F%2Fblob.perl.org%2Fbooks%2Fbeginning-perl%2F3145_Chap03.pdf" target="_blank" rel="noopener">Beginning Perl——Chapter 3: Lists and Hashes</a><br><a href="http://www.runoob.com/perl/perl-arrays.html" target="_blank" rel="noopener">Perl 数组</a><br><a href="http://www.runoob.com/perl/perl-hashes.html" target="_blank" rel="noopener">Perl 哈希</a><br><a href="https://blog.csdn.net/zhangjikuan/article/details/52199059#perl%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8" target="_blank" rel="noopener">Perl入门</a><br><a href="http://www.cnblogs.com/catch/archive/2013/05/25/3096963.html" target="_blank" rel="noopener">Perl 入门介绍——一些常用的数据类型</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> Beginning Perl (free)学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> perl </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Intro And Chapter 1-2</title>
      <link href="/2018/04/24/Beginning%20Perl%20(free)%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/perl_learning.1/"/>
      <url>/2018/04/24/Beginning%20Perl%20(free)%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/perl_learning.1/</url>
      <content type="html"><![CDATA[<p><strong>为学习解决FASTA的一些操作问题开始学习perl</strong></p><h2 id="Intro-perl版本-v5-10-1"><a href="#Intro-perl版本-v5-10-1" class="headerlink" title="Intro(perl版本 v5.10.1)"></a>Intro(perl版本 v5.10.1)</h2><h3 id="how-to-get-help"><a href="#how-to-get-help" class="headerlink" title="how to get help"></a>how to get help</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">perldoc -h </span><br><span class="line">#Display this help message</span><br><span class="line">man perldoc</span><br><span class="line">#see information of function</span><br><span class="line">perldoc -f print</span><br><span class="line">#search frequently questions</span><br><span class="line">perldoc -q print</span><br><span class="line">#modules: files</span><br><span class="line">perldoc Text::wrap</span><br></pre></td></tr></table></figure><h2 id="Chapter-1"><a href="#Chapter-1" class="headerlink" title="Chapter 1"></a>Chapter 1</h2><h3 id="First-perl-program"><a href="#First-perl-program" class="headerlink" title="First perl program"></a>First perl program</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl -w</span><br><span class="line">print &quot;Hello, world.\n&quot;;</span><br><span class="line">&gt;perl hello1.plx</span><br></pre></td></tr></table></figure><h3 id="For-Perl-5-6-x-and-higher-w-gt-use-warnings"><a href="#For-Perl-5-6-x-and-higher-w-gt-use-warnings" class="headerlink" title="For Perl 5.6.x and higher -w -&gt; use warnings;"></a>For Perl 5.6.x and higher -w -&gt; use warnings;</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl </span><br><span class="line">use warnings;</span><br><span class="line">print &quot;Hello, world.\n&quot;;</span><br><span class="line">&gt;perl hello2.plx</span><br><span class="line">print &quot;Here &quot;,&quot;we &quot;,&quot;print &quot;,&quot;several &quot;,&quot;strings.\n&quot;;</span><br><span class="line">print(&quot;Here &quot;,&quot;we &quot;,&quot;print &quot;,&quot;several &quot;,&quot;strings.\n&quot;);</span><br></pre></td></tr></table></figure><h3 id="交互式"><a href="#交互式" class="headerlink" title="交互式"></a>交互式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl -e &apos;print &quot;Hello World\n&quot;&apos;</span><br></pre></td></tr></table></figure><h2 id="Chapter-2"><a href="#Chapter-2" class="headerlink" title="Chapter 2"></a>Chapter 2</h2><h3 id="Types-of-data"><a href="#Types-of-data" class="headerlink" title="Types of data"></a>Types of data</h3><h4 id="Numbers-integers-and-floating-point-numbers"><a href="#Numbers-integers-and-floating-point-numbers" class="headerlink" title="Numbers: integers and floating-point numbers"></a>Numbers: integers and floating-point numbers</h4><h5 id="For-very-large-integers-like-25-000-000"><a href="#For-very-large-integers-like-25-000-000" class="headerlink" title="For very large integers like 25,000,000"></a>For very large integers like 25,000,000</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">print 25_000_000,&quot; &quot;,-4,&quot;\n&quot;;</span><br></pre></td></tr></table></figure><h5 id="进制"><a href="#进制" class="headerlink" title="进制"></a>进制</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#!usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">$var0 = 0b11111111; # 二进制</span><br><span class="line">$var1 = 0377;    # 八进制</span><br><span class="line">$var2 = 0xFF;   # 十六进制</span><br><span class="line">print $var0,&quot; &quot;,$var1,&quot; &quot;,$var2,&quot;\n&quot;;</span><br></pre></td></tr></table></figure><h5 id="For-floating-point-numbers-what-we-put-in-is-only-good-to-14-decimal-places"><a href="#For-floating-point-numbers-what-we-put-in-is-only-good-to-14-decimal-places" class="headerlink" title="For floating-point numbers: what we put in is only good to 14 decimal places"></a>For floating-point numbers: what we put in is only good to 14 decimal places</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">print 3.141592653589793238462643383279,&quot; &quot;,-4,&quot;\n&quot;;</span><br></pre></td></tr></table></figure><h4 id="Strings"><a href="#Strings" class="headerlink" title="Strings"></a>Strings</h4><h5 id="One-“”和’’的区别"><a href="#One-“”和’’的区别" class="headerlink" title="One. “”和’’的区别"></a>One. “”和’’的区别</h5><p>The double-quoted string will have its escape sequences processed, and the single-quoted string will not. </p><h5 id="Two-注意特例"><a href="#Two-注意特例" class="headerlink" title="Two. 注意特例"></a>Two. 注意特例</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">print &apos;ex\\ er\\&apos; , &apos; ci\&apos; se\&apos;&apos; , &quot;\n&quot;;</span><br></pre></td></tr></table></figure><h5 id="Aternative-delimiters-qq"><a href="#Aternative-delimiters-qq" class="headerlink" title="Aternative delimiters: qq"></a>Aternative delimiters: qq</h5><p>内容需要内嵌引号（单引号或双引号）时，不需要加转义符<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">print qq/&apos;&quot;Hi,&quot;said Jack&apos;\n/;</span><br><span class="line">print qq|&apos;&quot;Hi,&quot;said Jack&apos;\n|;</span><br><span class="line">print qq#&apos;&quot;Hi,&quot;said Jack&apos;\n#;</span><br><span class="line">print qq(&apos;&quot;Hi,&quot;said Jack&apos;\n);</span><br><span class="line">print qq&lt;&apos;&quot;Hi,&quot;said Jack&apos;\n&gt;;</span><br></pre></td></tr></table></figure></p><h4 id="Here-documents"><a href="#Here-documents" class="headerlink" title="Here-documents"></a>Here-documents</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">$a = 10;</span><br><span class="line">$var = &lt;&lt;&quot;EOF&quot;;</span><br><span class="line">使用双引号</span><br><span class="line">a = $a</span><br><span class="line">EOF</span><br><span class="line">print &quot;$var\n&quot;;</span><br><span class="line"> </span><br><span class="line">$var = &lt;&lt;&apos;EOF&apos;;</span><br><span class="line">使用单引号</span><br><span class="line">a = $a</span><br><span class="line">EOF</span><br><span class="line">print &quot;$var\n&quot;;</span><br></pre></td></tr></table></figure><h4 id="Converting-between-nums-and-strings"><a href="#Converting-between-nums-and-strings" class="headerlink" title="Converting between nums and strings"></a>Converting between nums and strings</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">print &quot;0x30\n&quot;;</span><br><span class="line">print &quot;030\n&quot;;</span><br><span class="line">print hex(&quot;0x30&quot;),&quot;\n&quot;;</span><br><span class="line">print oct(&quot;030&quot;),&quot;\n&quot;;</span><br></pre></td></tr></table></figure><h3 id="Operators"><a href="#Operators" class="headerlink" title="Operators"></a>Operators</h3><h4 id="Bitwise-operator"><a href="#Bitwise-operator" class="headerlink" title="Bitwise operator"></a>Bitwise operator</h4><p>&amp; ‘and’    | ‘or’    ^ ‘exclusive or’    ~ ‘not’<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl -e &apos;print ~85,&quot;\n&quot;&apos;</span><br></pre></td></tr></table></figure></p><blockquote><p>get a much bigger number, it’s because the computer represents numbers internally with 64 bits<br>instead of 32, and Perl has been configured to take advantage of this.</p></blockquote><h4 id="Truth-or-Falsehood"><a href="#Truth-or-Falsehood" class="headerlink" title="Truth or Falsehood"></a>Truth or Falsehood</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">perl -e &apos;print 2==2,&quot;\n&quot;&apos; #1</span><br><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">print 6 &lt;=&gt; 9,&quot;\n&quot;; #-1</span><br><span class="line">print 6 &lt;=&gt; 6,&quot;\n&quot;; #0</span><br><span class="line">print 9 &lt;=&gt; 6,&quot;\n&quot;; #1</span><br></pre></td></tr></table></figure><h4 id="Boolean-Operators"><a href="#Boolean-Operators" class="headerlink" title="Boolean Operators"></a>Boolean Operators</h4><blockquote><p>&amp;&amp; ‘and’    || ‘or’    ! ‘not’<br>Perl uses a technique called lazy evaluation.</p></blockquote><h4 id="String-Operators"><a href="#String-Operators" class="headerlink" title="String Operators"></a>String Operators</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">print&quot;Four sevens are &quot;. 4*7 .&quot;\n&quot;; #number and string</span><br><span class="line">print &quot;GO! &quot;x3, &quot;\n&quot;; #x repetition</span><br></pre></td></tr></table></figure><h5 id="Converting-Strings-to-Numbers"><a href="#Converting-Strings-to-Numbers" class="headerlink" title="Converting Strings to Numbers"></a>Converting Strings to Numbers</h5><p>+自动将左右转换为数字，.自动将左右转换为字符串<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">#use warnings;</span><br><span class="line">print&quot;12 monkeys&quot; + 0, &quot;\n&quot;;</span><br><span class="line">print &quot;Eleven to fly&quot; + 0, &quot;\n&quot;;</span><br><span class="line">print &quot;UB40&quot; + 0, &quot;\n&quot;;</span><br><span class="line">print &quot;-20 10&quot; + 0, &quot;\n&quot;;</span><br><span class="line">print &quot;0x30&quot; + 0, &quot;\n&quot;;</span><br><span class="line">print &quot;030&quot; + 0,&quot;\n&quot;;</span><br></pre></td></tr></table></figure></p><h5 id="Converting-Numbers-to-Strings"><a href="#Converting-Numbers-to-Strings" class="headerlink" title="Converting Numbers to Strings"></a>Converting Numbers to Strings</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">$foo = v102.111.111;</span><br><span class="line">$martin = v77.97.114.116.105.110;</span><br><span class="line">print &quot;foo = $foo\n&quot;;</span><br><span class="line">print &quot;martin = $martin\n&quot;;</span><br></pre></td></tr></table></figure><h5 id="String-Comparison"><a href="#String-Comparison" class="headerlink" title="String Comparison"></a>String Comparison</h5><blockquote><p>One. ord() function, which tells us where in the (ASCII) order it comes.<br>Two. less than, lt. greater than, gt. equal to, . not equal, ne. ge and le for ‘greater than or equal to’ and ‘less than and equal to’. The three-way-comparison becomes cmp.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">#use warnings;</span><br><span class="line">print ord(&quot;chicken&quot;),&quot; &quot;,ord(&quot;egg&quot;),&quot; &quot;,&quot;chicken&quot; cmp &quot;egg&quot;,&quot;\n&quot;;</span><br><span class="line">print ord(&quot;dog&quot;),&quot; &quot;,ord(&quot;cat&quot;),&quot; &quot;,&quot;dog&quot; gt &quot;cat&quot;,&quot;\n&quot;;</span><br><span class="line">print ord(&quot;^&quot;),&quot; &quot;,ord(&quot;+&quot;),&quot; &quot;,&quot;^&quot; lt &quot;+&quot;,&quot;\n&quot;;</span><br><span class="line">print ord(&quot;four&quot;),&quot; &quot;,ord(&quot;six&quot;),&quot; &quot;,&quot;four&quot; eq &quot;six&quot;,&quot;\n&quot;;</span><br><span class="line">print ord(&quot;four&quot;),&quot; &quot;,ord(&quot;six&quot;),&quot; &quot;,&quot;four&quot; == &quot;six&quot;,&quot;\n&quot;; #convert to 0</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="Variables"><a href="#Variables" class="headerlink" title="Variables"></a>Variables</h3><h4 id="Scalars"><a href="#Scalars" class="headerlink" title="Scalars"></a>Scalars</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">$a = 6 * 9;</span><br><span class="line">print &quot;Six nines are &quot;, $a, &quot;\n&quot;;</span><br><span class="line">$a = $a + 3;</span><br><span class="line">print &quot;Plus three is &quot;, $a, &quot;\n&quot;;</span><br><span class="line">$a = $a / 3;</span><br><span class="line">print &quot;All over three is &quot;, $a, &quot;\n&quot;;</span><br><span class="line">$a = $a + 1;</span><br><span class="line">print &quot;Add one is &quot;, $a, &quot;\n&quot;;</span><br></pre></td></tr></table></figure><h5 id="and-–"><a href="#and-–" class="headerlink" title="++ and –"></a>++ and –</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">$a=4;</span><br><span class="line">$b=10;</span><br><span class="line">print &quot;Our variables are &quot;, $a, &quot; and &quot;, $b, &quot;\n&quot;;</span><br><span class="line">$b=$a++;</span><br><span class="line">print &quot;After incrementing, we have &quot;, $a, &quot; and &quot;, $b, &quot;\n&quot;;</span><br><span class="line">$b=++$a*2;</span><br><span class="line">print &quot;Now, we have &quot;, $a, &quot; and &quot;, $b, &quot;\n&quot;;</span><br><span class="line">$a=--$b+4;</span><br><span class="line">print &quot;Finally, we have &quot;, $a, &quot; and &quot;, $b, &quot;\n&quot;;</span><br></pre></td></tr></table></figure><h5 id="可用于字符串"><a href="#可用于字符串" class="headerlink" title="++可用于字符串"></a>++可用于字符串</h5><blockquote><p>One. 结尾字符为’z’、 ‘Z’、 ‘9’时进位<br>Two. If there are no more digits to the left, either an ‘a’ or an ‘A’ is created<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">$a = &quot;A9&quot;; print ++$a, &quot;\n&quot;;</span><br><span class="line">$a = &quot;BA9&quot;; print ++$a, &quot;\n&quot;;</span><br><span class="line">$a = &quot;Zz&quot;; print ++$a, &quot;\n&quot;;</span><br><span class="line">$a = &quot;z9&quot;; print ++$a, &quot;\n&quot;;</span><br><span class="line">$a = &quot;9z&quot;; print ++$a, &quot;\n&quot;; #???</span><br><span class="line">$a = &quot;a9z&quot;; print ++$a, &quot;\n&quot;;</span><br></pre></td></tr></table></figure></p></blockquote><h5 id="Mutiple-Assignments"><a href="#Mutiple-Assignments" class="headerlink" title="Mutiple Assignments"></a>Mutiple Assignments</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">$b = 4 + ($a = 1); #注意括号</span><br><span class="line">print $b,&quot; &quot;,$a,&quot;\n&quot;;</span><br></pre></td></tr></table></figure><h4 id="Scoping"><a href="#Scoping" class="headerlink" title="Scoping"></a>Scoping</h4><blockquote><p>To tell perl that a variable is lexical, we say ‘my $variable;’</p></blockquote><h4 id="Variable-Interpolation"><a href="#Variable-Interpolation" class="headerlink" title="Variable Interpolation"></a>Variable Interpolation</h4><blockquote><p>One. Interpolation happens for scalar variables and arrays but not for hashes<br>Two. Note that this doesn’t happen with single-quoted strings<br>Three. It happens every time we construct a string<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">my $times = 8;</span><br><span class="line">print &quot;This is the $&#123;times&#125;th time.\n&quot;;</span><br></pre></td></tr></table></figure></p></blockquote><h5 id="Currency-Converter"><a href="#Currency-Converter" class="headerlink" title="Currency Converter"></a>Currency Converter</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">print &quot;Currency converter\n\nPlease enter the exchange rate: &quot;;</span><br><span class="line">my $yen = &lt;STDIN&gt;;</span><br><span class="line">print &quot;49518 Yen is &quot;, (49_518/$yen), &quot; pounds\n&quot;;</span><br><span class="line">print &quot;360 Yen is &quot;, ( 360/$yen), &quot; pounds\n&quot;;</span><br><span class="line">print &quot;30510 Yen is &quot;, (30_510/$yen), &quot; pounds\n&quot;;</span><br></pre></td></tr></table></figure><blockquote><p>学习资料<br><a href="https://docs.google.com/viewer?url=http%3A%2F%2Fblob.perl.org%2Fbooks%2Fbeginning-perl%2F3145_Intro.pdf" target="_blank" rel="noopener">Beginning Perl–Introduction</a><br><a href="https://docs.google.com/viewer?url=http%3A%2F%2Fblob.perl.org%2Fbooks%2Fbeginning-perl%2F3145_Chap01.pdf" target="_blank" rel="noopener">Beginning Perl–Chapter 1: First Steps In Perl</a><br><a href="https://docs.google.com/viewer?url=http%3A%2F%2Fblob.perl.org%2Fbooks%2Fbeginning-perl%2F3145_Chap02.pdf" target="_blank" rel="noopener">Beginning Perl–Chapter 2: Working with Simple Values</a><br><a href="https://blog.csdn.net/zhangjikuan/article/details/52199059#perl%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8" target="_blank" rel="noopener">Perl语言入门</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> Beginning Perl (free)学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> perl </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>MeDIP-seq,ChIP-seq,RNA-seq结合起来分析</title>
      <link href="/2018/04/23/seq%E5%AE%9E%E6%88%98/MeDIP-seq-ChIP-seq-RNA-seq%E7%BB%93%E5%90%88%E8%B5%B7%E6%9D%A5%E5%88%86%E6%9E%90/"/>
      <url>/2018/04/23/seq%E5%AE%9E%E6%88%98/MeDIP-seq-ChIP-seq-RNA-seq%E7%BB%93%E5%90%88%E8%B5%B7%E6%9D%A5%E5%88%86%E6%9E%90/</url>
      <content type="html"><![CDATA[<p>有空做<br><a href="http://www.biotrainee.com/thread-883-1-1.html" target="_blank" rel="noopener">MeDIP-seq,ChIP-seq,RNA-seq结合起来分析</a></p>]]></content>
      
      <categories>
          
          <category> seq实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bioinformatics </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>bioinformatics软件下载及简单使用</title>
      <link href="/2018/04/23/%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD/"/>
      <url>/2018/04/23/%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD/</url>
      <content type="html"><![CDATA[<h5 id="Aspera"><a href="#Aspera" class="headerlink" title="Aspera"></a>Aspera</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd practise</span><br><span class="line">mkdir aspera</span><br><span class="line">cd aspera</span><br><span class="line">wget http://download.asperasoft.com/download/sw/connect/3.6.2/aspera-connect-3.6.2.117442-linux-64.tar.gz</span><br><span class="line">tar zxf aspera-connect-3.6.2.117442-linux-64.tar.gz</span><br><span class="line">sh aspera-connect-3.6.2.117442-linux-64.sh</span><br><span class="line">echo &apos;PATH=$PATH:/home/tingm/.aspera/connect/bin&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><h5 id="using-ascp-download-data"><a href="#using-ascp-download-data" class="headerlink" title="using ascp download data"></a>using ascp download data</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ascp -T -l 200M -i ~/.aspera/connect/etc/asperaweb_id_dsa.openssh anonftp@ftp-private.ncbi.nlm.nih.gov:/sra/sra-instant/reads/ByRun/sra/ERR/ERR105/ERR105009/ERR105009.sra ./</span><br><span class="line">ascp -T -l 200M -i ~/.aspera/connect/etc/asperaweb_id_dsa.openssh --host=fasp.sra.ebi.ac.uk --user=era-fasp --mode=recv /vol1/fastq/ERR105/ERR105009/ERR105009_1.fastq.gz ./</span><br><span class="line">ascp -T -l 200M -i ~/.aspera/connect/etc/asperaweb_id_dsa.openssh era-fasp@fasp.sra.ebi.ac.uk:/vol1/fastq/ERR105/ERR105009/ERR105009_1.fastq.gz ./</span><br></pre></td></tr></table></figure><h5 id="SRA-Toolkit-SRA-to-Fastq"><a href="#SRA-Toolkit-SRA-to-Fastq" class="headerlink" title="SRA Toolkit:SRA to Fastq"></a>SRA Toolkit:SRA to Fastq</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd practise</span><br><span class="line">mkdir biosoft</span><br><span class="line">cd biosoft</span><br><span class="line">wget http://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/2.8.1-3/sratoolkit.2.8.1-3-centos_linux64.tar.gz</span><br><span class="line">tar zxf sratoolkit.2.8.1-3-centos_linux64.tar.gz </span><br><span class="line">echo &apos;PATH=$PATH:/home/tingm/practise/biosoft/sratoolkit.2.8.1-3-centos_linux64/bin&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><h5 id="sratoolkit-download-data-sra-to-fastq-pair-end"><a href="#sratoolkit-download-data-sra-to-fastq-pair-end" class="headerlink" title="sratoolkit download data / sra to fastq(pair end)"></a>sratoolkit download data / sra to fastq(pair end)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">prefetch SRR7722890 </span><br><span class="line">fastq-dump --split-files SRR447685/SRR447685.sra</span><br></pre></td></tr></table></figure><h5 id="NGSQCToolkit"><a href="#NGSQCToolkit" class="headerlink" title="NGSQCToolkit"></a>NGSQCToolkit</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wget https://bitbucket.org/libgd/gd-libgd/downloads/libgd-2.1.1.tar.xz</span><br><span class="line">tar Jxf libgd-2.1.1.tar.xz</span><br><span class="line">cd libgd-2.1.1</span><br><span class="line">./bootstrap.sh</span><br><span class="line">./configure --prefix=/home/tingm/usr</span><br><span class="line">make -j 4</span><br><span class="line">sudo make install</span><br><span class="line">gdlib-config</span><br></pre></td></tr></table></figure><h5 id="FastQC-www-view-FastQC-未成功"><a href="#FastQC-www-view-FastQC-未成功" class="headerlink" title="FastQC  www view FastQC 未成功"></a>FastQC  <strong><em>www view FastQC 未成功</em></strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 1777 /home/tingm/practise/ /home/tingm/practise/biosoft/</span><br><span class="line">wget http://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.5.zip</span><br><span class="line">unzip fastqc_v0.11.5.zip -d /home/tingm/practise/biosoft/ </span><br><span class="line">chmod 755 /home/tingm/practise/biosoft/FastQC/fastqc</span><br><span class="line">echo &apos;PATH=$PATH:/home/tingm/practise/biosoft/FastQC&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br><span class="line">fastqc --help</span><br><span class="line">#########www view FastQC 未成功</span><br><span class="line">su</span><br><span class="line">setup</span><br><span class="line">/etc/init.d/httpd status</span><br><span class="line">/etc/init.d/httpd start</span><br><span class="line">vim /etc/sysconfig/iptatbles </span><br><span class="line">-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT</span><br><span class="line">/etc/init.d/iptables restart</span><br><span class="line">vim /etc/httpd/conf/httpd.conf </span><br><span class="line">Alias /public &quot;/home/public/&quot;</span><br><span class="line">&lt;Directory &quot;/home/public/&quot;&gt;</span><br><span class="line"> Options Indexes MultiViews FollowSymLinks</span><br><span class="line"> AllowOverride None</span><br><span class="line"> Order allow,deny</span><br><span class="line"> Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">/etc/init.d/httpd restart</span><br><span class="line">mkdir /home/public</span><br><span class="line">chmod 1777 /home/public</span><br><span class="line">usermod -aG userGroupName apache</span><br><span class="line">chmod 755 /home/user</span><br></pre></td></tr></table></figure><h5 id="Trimmonmatic"><a href="#Trimmonmatic" class="headerlink" title="Trimmonmatic"></a>Trimmonmatic</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.36.zip</span><br><span class="line">unzip Trimmomatic-0.36.zip</span><br><span class="line">java -jar trimmomatic-0.36.jar</span><br></pre></td></tr></table></figure><h5 id="samtools"><a href="#samtools" class="headerlink" title="samtools"></a>samtools</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/samtools/samtools/releases/download/1.3.1/samtools-1.3.1.tar.bz2 -o samtools-1.3.1.tar.bz</span><br><span class="line">tar jxf samtools-1.3.1.tar.bz2 -C /home/tingm/practise/biosoft/</span><br><span class="line">cd /home/tingm/practise/biosoft/samtools-1.3.1/</span><br><span class="line">make</span><br><span class="line">echo &apos;PATH=$PATH:/home/tingm/practise/biosoft/samtools-1.3.1/&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><h5 id="bcftools"><a href="#bcftools" class="headerlink" title="bcftools"></a>bcftools</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/samtools/bcftools/releases/download/1.3.1/bcftools-1.3.1.tar.bz2 -o bcftools-1.3.1.tar.bz</span><br><span class="line">tar jxf bcftools-1.3.1.tar.bz2 -C /home/tingm/practise/biosoft/</span><br><span class="line">cd /home/tingm/practise/biosoft/bcftools-1.3.1/</span><br><span class="line">make</span><br><span class="line">echo &apos;PATH=$PATH:/home/tingm/practise/biosoft/bcftools-1.3.1/&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><h5 id="hisat2"><a href="#hisat2" class="headerlink" title="hisat2"></a>hisat2</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/downloads/hisat2-2.0.5-Linux_x86_64.zip</span><br><span class="line">unzip /home/tingm/practise/biosoft/hisat2-2.0.5-Linux_x86_64.zip -d /home/tingm/practise/biosoft</span><br><span class="line">echo &apos;PATH=$PATH:/home/tingm/practise/biosoft/hisat2-2.0.5/&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashr</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> bioinformatics </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>L5.matplotlib可视化</title>
      <link href="/2018/04/22/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/L5-matplotlib%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
      <url>/2018/04/22/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/L5-matplotlib%E5%8F%AF%E8%A7%86%E5%8C%96/</url>
      <content type="html"><![CDATA[<h5 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h5><blockquote><p>关联分析数值比较：散点图、曲线图<br>分布分析：灰度图、密度图<br>分类分析：柱状图、箱式图</p></blockquote><p><a href="https://matplotlib.org/gallery.html" target="_blank" rel="noopener">matplotlib</a><br><a href="http://www.cnblogs.com/nju2014/p/5620776.html" target="_blank" rel="noopener">Matplotlib详解图像各个部分</a><br><a href="http://www.cnblogs.com/zhizhan/p/5615947.html" target="_blank" rel="noopener">Python–matplotlib绘图可视化知识点整理</a></p>]]></content>
      
      <categories>
          
          <category> 数据科学实训营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>实战4.QQ答疑</title>
      <link href="/2018/04/15/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/%E5%AE%9E%E6%88%984.QQ%E7%AD%94%E7%96%91/"/>
      <url>/2018/04/15/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/%E5%AE%9E%E6%88%984.QQ%E7%AD%94%E7%96%91/</url>
      <content type="html"><![CDATA[<h5 id="Q1-有如下5列n行表格，其中后三列元素每列均相同，想去除重复行并统计重复行出现的次数得到新表格"><a href="#Q1-有如下5列n行表格，其中后三列元素每列均相同，想去除重复行并统计重复行出现的次数得到新表格" class="headerlink" title="Q1.有如下5列n行表格，其中后三列元素每列均相同，想去除重复行并统计重复行出现的次数得到新表格"></a>Q1.有如下5列n行表格，其中后三列元素每列均相同，想去除重复行并统计重复行出现的次数得到新表格</h5><p>原表格</p><table><thead><tr><th>Name</th><th>Sex</th><th>1</th><th>2</th><th>3</th></tr></thead><tbody><tr><td>A</td><td>F</td><td>6</td><td>G</td><td>F</td></tr><tr><td>B</td><td>M</td><td>6</td><td>G</td><td>F</td></tr><tr><td>B</td><td>M</td><td>6</td><td>G</td><td>F</td></tr><tr><td>C</td><td>F</td><td>6</td><td>G</td><td>F</td></tr><tr><td>C</td><td>F</td><td>6</td><td>G</td><td>F</td></tr><tr><td>C</td><td>F</td><td>6</td><td>G</td><td>F</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td></tr></tbody></table><p>新表格</p><table><thead><tr><th>Name</th><th>Sex</th><th>1</th><th>2</th><th>3</th><th>Count</th></tr></thead><tbody><tr><td>A</td><td>F</td><td>6</td><td>G</td><td>F</td><td>1</td></tr><tr><td>B</td><td>M</td><td>6</td><td>G</td><td>F</td><td>2</td></tr><tr><td>C</td><td>F</td><td>6</td><td>G</td><td>F</td><td>3</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td></tr></tbody></table><p>1.drop.duplicate()能得到去除重复行的新表格，不知是否能同时计算出重复行数目？</p><table><thead><tr><th>Name</th><th>Sex</th><th>1</th><th>2</th><th>3</th></tr></thead><tbody><tr><td>A</td><td>F</td><td>6</td><td>G</td><td>F</td></tr><tr><td>B</td><td>M</td><td>6</td><td>G</td><td>F</td></tr><tr><td>C</td><td>F</td><td>6</td><td>G</td><td>F</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td></tr></tbody></table><p>2.用groupby([‘Name’,’Sex’]).size()计算出了不同Name和Sex对应的次数，然后加上了后三行。不知是否有其他简便可行的方法推荐？<br><strong>分开写两个函数</strong></p><h5 id="Q2-合并Q1中格式的多个表格，比如1000个，有没有什么方法推荐？"><a href="#Q2-合并Q1中格式的多个表格，比如1000个，有没有什么方法推荐？" class="headerlink" title="Q2.合并Q1中格式的多个表格，比如1000个，有没有什么方法推荐？"></a>Q2.合并Q1中格式的多个表格，比如1000个，有没有什么方法推荐？</h5><p>我用的循环读入单个表格然后写入新文件<br><strong>merge函数</strong></p><h5 id="Q3-关于可视化，是否能画4个circles以上的维恩图，R中是有对应包的，不确定python是否也有"><a href="#Q3-关于可视化，是否能画4个circles以上的维恩图，R中是有对应包的，不确定python是否也有" class="headerlink" title="Q3.关于可视化，是否能画4个circles以上的维恩图，R中是有对应包的，不确定python是否也有?"></a>Q3.关于可视化，是否能画4个circles以上的维恩图，R中是有对应包的，不确定python是否也有?</h5><p><strong>seaborn</strong></p><p><strong><em>以上来自<a href="www.xiniuedu.com">稀牛学院</a>数据科学实训营 助教田老师及学员们的QQ答疑</em></strong></p>]]></content>
      
      <categories>
          
          <category> 数据科学实训营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>L4.链家网房价数据分析 要点记录</title>
      <link href="/2018/04/15/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/L4-%E9%93%BE%E5%AE%B6%E7%BD%91%E6%88%BF%E4%BB%B7%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
      <url>/2018/04/15/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/L4-%E9%93%BE%E5%AE%B6%E7%BD%91%E6%88%BF%E4%BB%B7%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#改列名</span><br><span class="line">lj_data.columns = [&apos;district&apos;, &apos;address&apos;...]</span><br><span class="line">#最便宜和最贵</span><br><span class="line">lj_data[lj_data[&apos;price&apos;]==lj_data[&apos;price&apos;].min()] #min()</span><br><span class="line">lj_data.sort_values(by=&apos;price&apos;).head(1) #by和ascending</span><br><span class="line">#to_frame和reset_index</span><br><span class="line">lj_data[&apos;view_num&apos;].value_counts().to_frame().reset_index()</span><br><span class="line">#loc和apply</span><br><span class="line">lj_data.loc[:,&apos;area&apos;] = lj_data[&apos;area&apos;].apply(lambda x:x[:-2]).apply(lambda x:float(x))</span><br><span class="line">#groupby</span><br><span class="line">pop_dire = lj_data.groupby(&apos;direction&apos;)[[&apos;view_num&apos;]].sum().reset_index()</span><br><span class="line">#agg</span><br><span class="line">tmp = lj_data.groupby(&apos;house_type&apos;).agg(&#123;&apos;view_num&apos;:&apos;sum&apos;&#125;).reset_index()</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数据科学实训营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Test1.pandas part</title>
      <link href="/2018/04/12/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/Test1_pandas/"/>
      <url>/2018/04/12/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/Test1_pandas/</url>
      <content type="html"><![CDATA[<h4 id="Test1-pandas部分"><a href="#Test1-pandas部分" class="headerlink" title="Test1 pandas部分"></a>Test1 pandas部分</h4><h3 id="步骤1-载入需要的库"><a href="#步骤1-载入需要的库" class="headerlink" title="步骤1. 载入需要的库"></a>步骤1. 载入需要的库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import pandas as pd</span><br><span class="line">import numpy as np</span><br></pre></td></tr></table></figure><h3 id="步骤2-导入数据"><a href="#步骤2-导入数据" class="headerlink" title="步骤2. 导入数据"></a>步骤2. 导入数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chipo = pd.read_csv(&apos;https://raw.githubusercontent.com/justmarkham/DAT8/master/data/chipotle.tsv&apos;, sep=&apos;\t&apos;)</span><br><span class="line">chipo.head(5)</span><br></pre></td></tr></table></figure><h3 id="问题1-被点最多的食物是哪个？"><a href="#问题1-被点最多的食物是哪个？" class="headerlink" title="问题1. 被点最多的食物是哪个？"></a>问题1. 被点最多的食物是哪个？</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chipo[[<span class="string">'item_name'</span>,<span class="string">'quantity'</span>]].groupby(chipo[<span class="string">'item_name'</span>]).sum().sort_values(by=[<span class="string">'quantity'</span>],ascending=<span class="keyword">False</span>)</span><br></pre></td></tr></table></figure><h3 id="问题2-有记录的这段时间总收入是？"><a href="#问题2-有记录的这段时间总收入是？" class="headerlink" title="问题2. 有记录的这段时间总收入是？"></a>问题2. 有记录的这段时间总收入是？</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chipo[<span class="string">'new_price'</span>] = chipo[<span class="string">'item_price'</span>].str.split(<span class="string">'$'</span>).str[<span class="number">1</span>].astype(np.float64) <span class="comment">#取出价格 float</span></span><br><span class="line">chipo[<span class="string">'expense'</span>] = chipo[<span class="string">'quantity'</span>]*chipo[<span class="string">'new_price'</span>]</span><br><span class="line">chipo[<span class="string">'expense'</span>].sum() <span class="comment">#总收入美元</span></span><br></pre></td></tr></table></figure><h3 id="问题3-有多少东西价格超过-10-00"><a href="#问题3-有多少东西价格超过-10-00" class="headerlink" title="问题3. 有多少东西价格超过 $10.00?"></a>问题3. 有多少东西价格超过 $10.00?</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df = chipo[[<span class="string">'item_name'</span>,<span class="string">'new_price'</span>]][chipo[<span class="string">'new_price'</span>] &gt; <span class="number">10</span>].groupby(<span class="string">'item_name'</span>)</span><br><span class="line">len(df[<span class="string">'item_name'</span>].unique())</span><br></pre></td></tr></table></figure><h3 id="问题4-顾客点多于一罐Canned-Soda的次数是？"><a href="#问题4-顾客点多于一罐Canned-Soda的次数是？" class="headerlink" title="问题4. 顾客点多于一罐Canned Soda的次数是？"></a>问题4. 顾客点多于一罐Canned Soda的次数是？</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df = chipo[(chipo[<span class="string">'item_name'</span>] == <span class="string">'Canned Soda'</span>) &amp; (chipo[<span class="string">'quantity'</span>] &gt;<span class="number">1</span>)]</span><br><span class="line">df.shape <span class="comment"># 20</span></span><br></pre></td></tr></table></figure><h3 id="回答问题5-6请从导入数据，给该数据分配一个变量users"><a href="#回答问题5-6请从导入数据，给该数据分配一个变量users" class="headerlink" title="回答问题5 ~ 6请从导入数据，给该数据分配一个变量users"></a>回答问题5 ~ 6请从导入数据，给该数据分配一个变量users</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">users = pd.read_csv(<span class="string">'https://raw.githubusercontent.com/justmarkham/DAT8/master/data/u.user'</span>, sep=<span class="string">'|'</span>)</span><br><span class="line">users.head(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><h3 id="问题5-每个职业男性和女性的平均年龄分别是？"><a href="#问题5-每个职业男性和女性的平均年龄分别是？" class="headerlink" title="问题5.  每个职业男性和女性的平均年龄分别是？"></a>问题5.  每个职业男性和女性的平均年龄分别是？</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">users.groupby([<span class="string">'occupation'</span>,<span class="string">'gender'</span>])[[<span class="string">'age'</span>]].mean()</span><br></pre></td></tr></table></figure><h3 id="问题6-每个职业中男性的比例是？"><a href="#问题6-每个职业中男性的比例是？" class="headerlink" title="问题6.  每个职业中男性的比例是？"></a>问题6.  每个职业中男性的比例是？</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df = users[[<span class="string">'gender'</span>,<span class="string">'occupation'</span>]][users[<span class="string">'gender'</span>]==<span class="string">'F'</span>]</span><br><span class="line">df[<span class="string">'occupation'</span>].value_counts(normalize=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><h3 id="回答问题7-8导入数据，给该数据分配一个变量df"><a href="#回答问题7-8导入数据，给该数据分配一个变量df" class="headerlink" title="回答问题7 ~ 8导入数据，给该数据分配一个变量df"></a>回答问题7 ~ 8导入数据，给该数据分配一个变量df</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data = pd.read_html(<span class="string">'https://github.com/guipsamora/pandas_exercises/blob/master/04_Apply/Students_Alcohol_Consumption/student-mat.csv'</span>,header=<span class="number">0</span>)[<span class="number">0</span>]</span><br><span class="line">df = data.iloc[:,<span class="number">1</span>:]</span><br><span class="line">df.columns = data.columns.delete(<span class="number">-1</span>)</span><br></pre></td></tr></table></figure><h3 id="问题7-请把Mjob和Fjob两列中数据都变成全部大写字母，查看df，如果df中这两列数据确实变成大写，说明操作成功"><a href="#问题7-请把Mjob和Fjob两列中数据都变成全部大写字母，查看df，如果df中这两列数据确实变成大写，说明操作成功" class="headerlink" title="问题7. 请把Mjob和Fjob两列中数据都变成全部大写字母，查看df，如果df中这两列数据确实变成大写，说明操作成功"></a>问题7. 请把Mjob和Fjob两列中数据都变成全部大写字母，查看df，如果df中这两列数据确实变成大写，说明操作成功</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df[[<span class="string">'Mjob'</span>,<span class="string">'Fjob'</span>]] = df[[<span class="string">'Mjob'</span>,<span class="string">'Fjob'</span>]].applymap(<span class="keyword">lambda</span> x:x.upper())</span><br><span class="line">df.head()</span><br></pre></td></tr></table></figure><h3 id="问题8-把df中所有数值都乘以10"><a href="#问题8-把df中所有数值都乘以10" class="headerlink" title="问题8. 把df中所有数值都乘以10"></a>问题8. 把df中所有数值都乘以10</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int_names = df.dtypes[df.dtypes == <span class="string">'int64'</span>].index</span><br><span class="line">df[int_names] = df[int_names]*<span class="number">10</span></span><br><span class="line">df.head()</span><br></pre></td></tr></table></figure><h3 id="回答问题9-13导入数据给该数据分配一个变量"><a href="#回答问题9-13导入数据给该数据分配一个变量" class="headerlink" title="回答问题9 ~ 13导入数据给该数据分配一个变量"></a>回答问题9 ~ 13导入数据给该数据分配一个变量</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">wind = pd.read_csv(<span class="string">'wind.data'</span>,delim_whitespace=<span class="keyword">True</span>)</span><br><span class="line">wind.tail()</span><br></pre></td></tr></table></figure><h3 id="问题9-data中2061年有误，应为1961年。请改正。"><a href="#问题9-data中2061年有误，应为1961年。请改正。" class="headerlink" title="问题9. data中2061年有误，应为1961年。请改正。"></a>问题9. data中2061年有误，应为1961年。请改正。</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wind[<span class="string">'New_Yr'</span>] = wind[<span class="string">'Yr'</span>].apply(<span class="keyword">lambda</span> x :<span class="string">'19'</span>+str(x))</span><br><span class="line">wind.tail()</span><br></pre></td></tr></table></figure><h3 id="问题10-将正确的日期设为index。要求：index的dtype为datetime64-ns"><a href="#问题10-将正确的日期设为index。要求：index的dtype为datetime64-ns" class="headerlink" title="问题10. 将正确的日期设为index。要求：index的dtype为datetime64[ns]"></a>问题10. 将正确的日期设为index。要求：index的dtype为datetime64[ns]</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wind[<span class="string">'date'</span>] = wind[[<span class="string">'New_Yr'</span>, <span class="string">'Mo'</span>, <span class="string">'Dy'</span>]].apply(<span class="keyword">lambda</span> x: <span class="string">'-'</span>.join(str(value) <span class="keyword">for</span> value <span class="keyword">in</span> x), axis=<span class="number">1</span>)</span><br><span class="line">wind[<span class="string">'date'</span>].tail()</span><br><span class="line">wind[<span class="string">'new_date'</span>]= pd.to_datetime(wind[<span class="string">'date'</span>])</span><br><span class="line">wind.tail()</span><br><span class="line">wind.set_index(wind[<span class="string">'new_date'</span>], inplace=<span class="keyword">True</span>)</span><br><span class="line">wind = wind.iloc[:,:<span class="number">-2</span>]</span><br><span class="line">wind.head()</span><br></pre></td></tr></table></figure><h3 id="问题11-请分别统计每个地点总共缺失了多少数据。"><a href="#问题11-请分别统计每个地点总共缺失了多少数据。" class="headerlink" title="问题11. 请分别统计每个地点总共缺失了多少数据。"></a>问题11. 请分别统计每个地点总共缺失了多少数据。</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">all_pos = wind.columns[<span class="number">3</span>:<span class="number">-1</span>]</span><br><span class="line">total_null = [wind[wind[all_pos[i]].isnull()].shape[<span class="number">0</span>] <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(all_pos))]</span><br><span class="line">total_null</span><br></pre></td></tr></table></figure><h3 id="问题12-请创建两个dataframe，一个统计每个地点所有日期风速的最小值、最大值、均值、标准差；第二个统计每日所有地点的风速的最小值、最大值、均值、标准差。"><a href="#问题12-请创建两个dataframe，一个统计每个地点所有日期风速的最小值、最大值、均值、标准差；第二个统计每日所有地点的风速的最小值、最大值、均值、标准差。" class="headerlink" title="问题12. 请创建两个dataframe，一个统计每个地点所有日期风速的最小值、最大值、均值、标准差；第二个统计每日所有地点的风速的最小值、最大值、均值、标准差。"></a>问题12. 请创建两个dataframe，一个统计每个地点所有日期风速的最小值、最大值、均值、标准差；第二个统计每日所有地点的风速的最小值、最大值、均值、标准差。</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">df1 = pd.DataFrame()</span><br><span class="line">df1[<span class="string">'sum'</span>] = wind.iloc[:,<span class="number">3</span>:<span class="number">-1</span>].apply(<span class="keyword">lambda</span> x:x.sum(), axis=<span class="number">0</span>)</span><br><span class="line">df1[<span class="string">'mean'</span>] = wind.iloc[:,<span class="number">3</span>:<span class="number">-1</span>].apply(<span class="keyword">lambda</span> x:x.mean(), axis=<span class="number">0</span>)</span><br><span class="line">df1[<span class="string">'std'</span>] = wind.iloc[:,<span class="number">3</span>:<span class="number">-1</span>].apply(<span class="keyword">lambda</span> x:x.std(), axis=<span class="number">0</span>)</span><br><span class="line">df1[<span class="string">'median'</span>] = wind.iloc[:,<span class="number">3</span>:<span class="number">-1</span>].apply(<span class="keyword">lambda</span> x:x.median(), axis=<span class="number">0</span>)</span><br><span class="line">df1</span><br><span class="line"></span><br><span class="line">df2 = pd.DataFrame()</span><br><span class="line">df2[<span class="string">'sum'</span>] = wind.iloc[:,<span class="number">3</span>:<span class="number">-1</span>].apply(<span class="keyword">lambda</span> x:x.sum(), axis=<span class="number">1</span>)</span><br><span class="line">df2[<span class="string">'mean'</span>] = wind.iloc[:,<span class="number">3</span>:<span class="number">-1</span>].apply(<span class="keyword">lambda</span> x:x.mean(), axis=<span class="number">1</span>)</span><br><span class="line">df2[<span class="string">'std'</span>] = wind.iloc[:,<span class="number">3</span>:<span class="number">-1</span>].apply(<span class="keyword">lambda</span> x:x.std(), axis=<span class="number">1</span>)</span><br><span class="line">df2[<span class="string">'median'</span>] = wind.iloc[:,<span class="number">3</span>:<span class="number">-1</span>].apply(<span class="keyword">lambda</span> x:x.median(), axis=<span class="number">1</span>)</span><br><span class="line">df2.head()</span><br></pre></td></tr></table></figure><h3 id="问题13-将数据下采样，每地每年只保留一个样本数据-待解决"><a href="#问题13-将数据下采样，每地每年只保留一个样本数据-待解决" class="headerlink" title="问题13. 将数据下采样，每地每年只保留一个样本数据 待解决"></a><strong><em>问题13. 将数据下采样，每地每年只保留一个样本数据</em></strong> 待解决</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wind[<span class="string">'date'</span>] = wind.index</span><br><span class="line">wind_year = wind.iloc[:,<span class="number">3</span>:].resample(<span class="string">'1A'</span>).asfreq() <span class="comment">#每年每地</span></span><br><span class="line">wind_year.head()</span><br></pre></td></tr></table></figure><h3 id="回答问题14-17导入数据，给该数据分配一个变量iris"><a href="#回答问题14-17导入数据，给该数据分配一个变量iris" class="headerlink" title="回答问题14~17导入数据，给该数据分配一个变量iris."></a>回答问题14~17导入数据，给该数据分配一个变量iris.</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iris = pd.read_csv(<span class="string">'https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data'</span>,header=<span class="keyword">None</span>)</span><br></pre></td></tr></table></figure><h3 id="问题14-该数据中缺失了列名，请按照下面给出的名称添加。"><a href="#问题14-该数据中缺失了列名，请按照下面给出的名称添加。" class="headerlink" title="问题14. 该数据中缺失了列名，请按照下面给出的名称添加。"></a>问题14. 该数据中缺失了列名，请按照下面给出的名称添加。</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iris.columns=[<span class="string">'sepal_length'</span>,<span class="string">'sepal_width'</span>,<span class="string">'petal_length'</span>,<span class="string">'petal_width'</span>,<span class="string">'class'</span>]</span><br></pre></td></tr></table></figure><h3 id="问题15-1）将10-29行-‘petal-length’列数据设为Nan；2）再将其设为1-0-【请分步操作，保留第1）步结果】"><a href="#问题15-1）将10-29行-‘petal-length’列数据设为Nan；2）再将其设为1-0-【请分步操作，保留第1）步结果】" class="headerlink" title="问题15. 1）将10 ~ 29行 ‘petal_length’列数据设为Nan；2）再将其设为1.0 【请分步操作，保留第1）步结果】"></a>问题15. 1）将10 ~ 29行 ‘petal_length’列数据设为Nan；2）再将其设为1.0 【请分步操作，保留第1）步结果】</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iris.loc[<span class="number">10</span>:<span class="number">29</span>,<span class="string">'petal_length'</span>] = np.nan</span><br><span class="line">iris.loc[<span class="number">10</span>:<span class="number">29</span>]</span><br><span class="line">iris = iris.fillna(<span class="number">1.0</span>)</span><br><span class="line">iris.loc[<span class="number">10</span>:<span class="number">29</span>]</span><br></pre></td></tr></table></figure><h3 id="问题16-删掉class列"><a href="#问题16-删掉class列" class="headerlink" title="问题16. 删掉class列"></a>问题16. 删掉class列</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iris.drop(<span class="string">'class'</span>,axis=<span class="number">1</span>, inplace=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><h3 id="问题17-1）将前3行所有数值设为Nan；2）删掉有缺失值的行【请分步操作，保留第1）步结果】"><a href="#问题17-1）将前3行所有数值设为Nan；2）删掉有缺失值的行【请分步操作，保留第1）步结果】" class="headerlink" title="问题17. 1）将前3行所有数值设为Nan；2）删掉有缺失值的行【请分步操作，保留第1）步结果】"></a>问题17. 1）将前3行所有数值设为Nan；2）删掉有缺失值的行【请分步操作，保留第1）步结果】</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iris.iloc[:<span class="number">3</span>] = np.nan</span><br><span class="line">iris.shape</span><br><span class="line">iris.dropna(axis=<span class="number">0</span>,inplace=<span class="keyword">True</span>)</span><br><span class="line">iris.shape</span><br></pre></td></tr></table></figure><h3 id="回答问题18-20导入数据‘06-US-Baby-Names-right-csv’，给该数据分配一个变量baby-names"><a href="#回答问题18-20导入数据‘06-US-Baby-Names-right-csv’，给该数据分配一个变量baby-names" class="headerlink" title="回答问题18 ~ 20导入数据‘06_US_Baby_Names_right.csv’，给该数据分配一个变量baby_names."></a>回答问题18 ~ 20导入数据‘06_US_Baby_Names_right.csv’，给该数据分配一个变量baby_names.</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">baby_names = pd.read_csv(<span class="string">'06_US_Baby_Names_right.csv'</span>,index_col=<span class="number">0</span>,sep=<span class="string">','</span>)</span><br></pre></td></tr></table></figure><h3 id="问题18-男性名字多还是女性名字多"><a href="#问题18-男性名字多还是女性名字多" class="headerlink" title="问题18. 男性名字多还是女性名字多?"></a>问题18. 男性名字多还是女性名字多?</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">baby_names.groupby(<span class="string">'Gender'</span>).size() <span class="comment">#F</span></span><br></pre></td></tr></table></figure><h3 id="问题19-最常见的名字是？"><a href="#问题19-最常见的名字是？" class="headerlink" title="问题19. 最常见的名字是？"></a>问题19. 最常见的名字是？</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">baby_names[<span class="string">'Name'</span>].value_counts() <span class="comment">#Riley</span></span><br></pre></td></tr></table></figure><h3 id="问题20-最少见的名字出现了多少次？有多少个名字是最少见的？"><a href="#问题20-最少见的名字出现了多少次？有多少个名字是最少见的？" class="headerlink" title="问题20. 最少见的名字出现了多少次？有多少个名字是最少见的？"></a>问题20. 最少见的名字出现了多少次？有多少个名字是最少见的？</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df = baby_names[<span class="string">'Name'</span>].value_counts(ascending=<span class="keyword">True</span>).to_frame() <span class="comment">#1</span></span><br><span class="line">df[df[<span class="string">'Name'</span>] == <span class="number">1</span>].count() <span class="comment">#3682</span></span><br></pre></td></tr></table></figure><p><strong>部分答案还需校正更改</strong></p><p><strong><em>题目以上来自<a href="www.xiniuedu.com">稀牛学院</a>数据科学实训营 </em></strong></p>]]></content>
      
      <categories>
          
          <category> 数据科学实训营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>实战3.QQ答疑</title>
      <link href="/2018/04/11/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/%E5%AE%9E%E6%88%983-QQ%E7%AD%94%E7%96%91/"/>
      <url>/2018/04/11/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/%E5%AE%9E%E6%88%983-QQ%E7%AD%94%E7%96%91/</url>
      <content type="html"><![CDATA[<h5 id="python-amp-pypandas"><a href="#python-amp-pypandas" class="headerlink" title="python &amp; pypandas"></a>python &amp; pypandas</h5><p>Q:用print命令在打印的str后面加一个space应该用什么命令<br>A: print(str + ‘ ‘)<br>Q:感觉transform和apply的功能好类似，这两个函数有什么区别<br>A:<a href="https://blog.csdn.net/fanfanyuzhui/article/details/78503608" target="_blank" rel="noopener">pandas apply vs agg vs transform</a><br>Q:dataframe当中，df.loc与df.ix区别<br>A:ix / loc 可以通过行号和行标签进行索引，而iloc只能通过行号索引。loc 和 ix 大部分时候行为都差不多, 但是当假如某个行的索引标签就是一个 INT 比如 1 的时候,  loc 优先将 df.loc[1] 理解为行标签为 1 的索引, 而 df.ix[1] 优先将其理解为 行号为 1 的索引(就是第二行)为了避免不小心犯错误, 建议:1.当用行号索引的时候, 尽量用 iloc 来进行索引; 2. 而用标签索引的时候用 loc , 3. ix 就别用了<br><a href="https://www.zhihu.com/question/47362048/answer/255165391" target="_blank" rel="noopener">区别</a><br><a href="https://blog.csdn.net/xw_classmate/article/details/51333646" target="_blank" rel="noopener">ix vs loc vs iloc区别</a><br>A:一般我们直接指定对应的 columns 来赋值:<br>df[‘Mjob’] = df.Mjob.applymap(lambda x: x.upper() )<br>df[‘Fjob’] = df.Fjob.applymap(lambda x: x.upper() )<br>一列作为Series 应该用map</p><h5 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h5><p>Q：学习方法<br>A：<a href="https://iphysresearch.github.io/2018/01/MyWay2017/" target="_blank" rel="noopener">https://iphysresearch.github.io/2018/01/MyWay2017/</a></p><h5 id="就业"><a href="#就业" class="headerlink" title="就业"></a>就业</h5><p>Q：转行找数据分析工作，要达到怎样的程度<br>A：不能说要达到怎样的程度，应该说要做过什么东西。竞赛获奖的经历，github 项目经验，参加case项目，写技术博文，自己建项目做数据建模分析，抓住机会积累项目经验~</p><p><strong>亟待升级的粗制滥造博客，mark下，五一有空优化下</strong></p><p><strong><em>以上来自<a href="www.xiniuedu.com">稀牛学院</a>数据科学实训营 助教土豆老师及学员们的QQ答疑</em></strong></p>]]></content>
      
      <categories>
          
          <category> 数据科学实训营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>L3.Pandas复杂统计与机器学习特征工程</title>
      <link href="/2018/04/10/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/L3-Pandas%E5%A4%8D%E6%9D%82%E7%BB%9F%E8%AE%A1%E4%B8%8E%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/"/>
      <url>/2018/04/10/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/L3-Pandas%E5%A4%8D%E6%9D%82%E7%BB%9F%E8%AE%A1%E4%B8%8E%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h5 id="分组groupby-聚合agg"><a href="#分组groupby-聚合agg" class="headerlink" title="分组groupby() 聚合agg()"></a>分组groupby() 聚合agg()</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">group_by_name = salaries.groupby(&apos;Name&apos;) #分组</span><br><span class="line">#分组后统计操作</span><br><span class="line">group_by_name.sum() #求和</span><br><span class="line">group_by_name.mean() #均值</span><br><span class="line">salaries.groupby(&apos;Name&apos;).median() #中位数</span><br><span class="line">salaries.groupby(&apos;Name&apos;).size() #频次</span><br><span class="line">salaries.groupby(&apos;Name&apos;,sort=False).sum() #默认先读到哪个</span><br><span class="line">salaries.groupby(&apos;Name&apos;,sort=True).sum()  #按照Name排序</span><br><span class="line">salaries.groupby(&apos;Name&apos;).describe() #分组查看统计信息</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#继续挑选后统计计算</span><br><span class="line">group_by_name[[&apos;Bonus&apos;,&apos;Salary&apos;]].sum() </span><br><span class="line">salaries.groupby(&apos;Name&apos;).agg([&apos;sum&apos;,&apos;mean&apos;,&apos;std&apos;,&apos;median&apos;]) #分组基础上聚合</span><br><span class="line">salaries.groupby(&apos;Name&apos;)[[&apos;Bonus&apos;,&apos;Salary&apos;]].agg([&apos;sum&apos;,&apos;mean&apos;,&apos;std&apos;,&apos;median&apos;]) #根据名字分组选bouns和salary进行后续统计</span><br><span class="line">salaries.groupby(&apos;Name&apos;)[[&apos;Bonus&apos;,&apos;Salary&apos;]].agg([np.sum,np.mean,np.std,np.median]) #np</span><br><span class="line">salaries.groupby(&apos;Name&apos;)[[&apos;Bonus&apos;]].agg([np.sum,np.mean,np.std,np.median]) #[[&apos;Bonus&apos;]] dataframe</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#实例</span><br><span class="line">nvda = pd.read_csv(&apos;data/NVDA.csv&apos;, index_col=0,parse_dates=[&apos;Date&apos;])</span><br><span class="line">nvda.loc[:,&apos;year&apos;] = nvda.index.year #加入year这一列</span><br><span class="line">nvda[&apos;year&apos;].unique() #某一列有多少不同的取值 对series操作</span><br><span class="line">nvda[&apos;year&apos;].value_counts() #不同取值和出现次数 对series操作</span><br><span class="line">tmp = nvda[&apos;year&apos;].value_counts().to_frame() </span><br><span class="line">tmp = tmp.reset_index()</span><br><span class="line">tmp.columns = [&apos;year&apos;,&apos;count&apos;]</span><br><span class="line">tmp.head()</span><br><span class="line">tmp.sort_values(by=&apos;year&apos;).head()</span><br><span class="line">nvda.groupby(&apos;year&apos;).agg([&apos;mean&apos;,&apos;std&apos;]) #分组统计</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#transform 变换</span><br><span class="line">def my_transform(x):</span><br><span class="line">    return (x - x.mean())/x.std()</span><br><span class="line">tmp_arr = np.array(range(10))</span><br><span class="line">my_transform(tmp_arr)</span><br><span class="line">transformed = nvda.groupby(&apos;year&apos;).transform(my_transform)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salaries.loc[:,&apos;new_name&apos;] = salaries[&apos;Name&apos;].apply(lambda x: &apos;HanXiao&apos; if x ==&apos;Han&apos; else x) #apply和匿名函数</span><br></pre></td></tr></table></figure><h5 id="拼接concat-append"><a href="#拼接concat-append" class="headerlink" title="拼接concat append"></a>拼接concat append</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">results = pd.concat([df1,df2,df3])  #列</span><br><span class="line">test1 = pd.concat([df1,df2,df3], axis=1)#行对齐去拼接</span><br><span class="line">test2 = pd.concat([df1,df2,df3], axis=0)#列对齐拼接</span><br><span class="line">df1.append(df1)#append 追加</span><br></pre></td></tr></table></figure><h5 id="合并merge-join"><a href="#合并merge-join" class="headerlink" title="合并merge join"></a>合并merge join</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pd.merge(results,new_df,on=[&apos;new_apts&apos;],how=&apos;inner&apos;) #left right注意区分</span><br><span class="line">.join #基于索引</span><br></pre></td></tr></table></figure><p><strong><em>以上整理自<a href="www.xiniuedu.com">稀牛学院</a>数据科学实训营 寒小阳老师关于pandas的讲解</em></strong></p>]]></content>
      
      <categories>
          
          <category> 数据科学实训营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Test1.python part</title>
      <link href="/2018/04/10/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/Test1-python-part/"/>
      <url>/2018/04/10/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/Test1-python-part/</url>
      <content type="html"><![CDATA[<h4 id="Test1-python部分"><a href="#Test1-python部分" class="headerlink" title="Test1 python部分"></a>Test1 python部分</h4><h5 id="python基础"><a href="#python基础" class="headerlink" title="python基础"></a>python基础</h5><p>1.任意定义三个数(有整型和浮点型)，通过比较判断，输出其最大者。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">from functools import reduce</span><br><span class="line">lst = [eval(x) for x in input(&quot;Please input three numbers: \n&quot;).split()] #输入三个数</span><br><span class="line">Max = reduce(lambda n1,n2:n1 if n1&gt;n2 else n2,lst) #比较判断数字大小 max()</span><br><span class="line">print(&apos;The largest number is: %s&apos;%Max) #输出最大值</span><br></pre></td></tr></table></figure></p><p>2.将任意一句英文中的每个单词的倒序输出。例如”You are nice”，输出为”uoY era ecin”<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">words = input(&quot;Please input an English sentence: \n&quot;).split() #输入一个英语句子</span><br><span class="line">new_words = &apos; &apos;.join(map(lambda x:x[::-1],words)) #将每个单词倒序</span><br><span class="line">print(&apos;The new English sentence: %s&apos;%new_words) #输出倒序句子</span><br></pre></td></tr></table></figure></p><p>3.统计字符串中每个字母的出现次数（忽略大小写，a 与 A 是同一个字母）并输出成一个字典。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">lst = [x for x in input(&quot;Please input a string: \n&quot;).lower()] #输入字符串转为list</span><br><span class="line">Set = set(lst) #去重</span><br><span class="line">dic = &#123;&#125; #初始化</span><br><span class="line">for item in Set:</span><br><span class="line">    dic.update(&#123;item:lst.count(item)&#125;) #计算元素数目并加入dic</span><br><span class="line">print(dic) #输出</span><br><span class="line">#print([(k,dic[k]) for k in sorted(dic.keys())])</span><br></pre></td></tr></table></figure></p><p>4.用列表生成式1到200之间能被2或3整除的数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nums = [i for i in range(1, 200) if i%2 == 0 or i%3 ==0 ]</span><br><span class="line">print(nums)</span><br></pre></td></tr></table></figure></p><p>5.切片练习，上述列表取出下标为奇数的所有元素，并进行降序排序<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">new_nums = nums[1::2]</span><br><span class="line">new_nums.sort(reverse=True)</span><br><span class="line">print(new_nums)</span><br><span class="line">#new_nums = [nums[i] for i in reversed(range(1, len(nums), 2))]</span><br></pre></td></tr></table></figure></p><p><strong>6.定义一个函数，完成一个小任务：对于给定的银行定期利率(输入)，计算多少年后可以连本带息翻番</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import math</span><br><span class="line">def deposit_double(interest_rate):</span><br><span class="line">    return math.ceil(math.log(2,(1+interest_rate)))</span><br><span class="line">deposit_double(0.015)</span><br></pre></td></tr></table></figure></p><p>7.统计1到100之和<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sum(range(1, 101))</span><br></pre></td></tr></table></figure></p><p>8.现有两个列表：[“小明”,”小红”,”小刚”,”小张”]、[97,78,90,89]。请编写代码，实现将上述列表合并转化成字典：{“小明”:97,”小红”：78,”小刚”：90,”小张”：89}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">names = [&quot;小明&quot;,&quot;小红&quot;,&quot;小刚&quot;,&quot;小张&quot;]</span><br><span class="line">grades = [97,78,90,89]</span><br><span class="line">dic = dict(zip(names,grades))</span><br><span class="line">print(dic)</span><br></pre></td></tr></table></figure></p><p><strong><em>9.现有一个表示学生信息的列表：infolst=[{“小明”:”180cm”},{“小红”:”155cm”},{“小明”:”70kg”},{“小红”:”45kg”},{“小明”:21},{“小红”:20}]，请编写代码实现将上述列表合并成：infolst1=[{“小明”:[“180cm”,”70kg”,21]},{“小红”:[“155cm”,”45kg”,20]}]</em></strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">infolst = [&#123;&quot;小明&quot;:&quot;180cm&quot;&#125;,&#123;&quot;小红&quot;:&quot;155cm&quot;&#125;,&#123;&quot;小明&quot;:&quot;70kg&quot;&#125;,&#123;&quot;小红&quot;:&quot;45kg&quot;&#125;,&#123;&quot;小明&quot;:21&#125;,&#123;&quot;小红&quot;:20&#125;]</span><br><span class="line">infolst1 = &#123;&#125;</span><br><span class="line">#合并</span><br><span class="line">for info in infolst:</span><br><span class="line">    for k, v in info.items():</span><br><span class="line">        infolst1.setdefault(k, []).append(v)</span><br><span class="line">print(infolst1)</span><br></pre></td></tr></table></figure></p><p>10.定义一个函数，能实现将列表逆序输出的功能。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def list_reverse(a):</span><br><span class="line">    return a[::-1]</span><br><span class="line">lst = [eval(x) for x in input(&quot;Please input a list of numbers: \n&quot;).split()] #for example,1 4 8 5 3</span><br><span class="line">rlst = list_reverse(lst)</span><br><span class="line">print(rlst)</span><br></pre></td></tr></table></figure></p><p>11.斐波那契数列又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……在数学上，费波那契数列是以递归的方法来定义：F0 = 0 (n=0)；F1 = 1 (n=1)；Fn = F[n-1]+ F[n-2] (n=&gt;2)请用定义一个函数实现斐波那契数列，并打印出F20的值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">def fibo(i):  </span><br><span class="line">    if i == 0:  </span><br><span class="line">        return 0</span><br><span class="line">    elif i == 1:</span><br><span class="line">        return 1</span><br><span class="line">    else:  </span><br><span class="line">        return fibo(i-1) + fibo(i-2)  </span><br><span class="line">def fib(n):  </span><br><span class="line">    x,y=0,1  </span><br><span class="line">    while(n):  </span><br><span class="line">        x,y,n=y,x+y,n-1  </span><br><span class="line">    return x</span><br><span class="line">print(fibo(20),fib(20))</span><br></pre></td></tr></table></figure></p><p>12.回文数指任意自然数n，若将n的各位数字反向排列所得自然数n1与n相等，则称n为一回文数。例如:12321,235532。请定义一个函数判断某个数是否为回文数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">def is_palindrome(n):  </span><br><span class="line">    str_n = str(n)  </span><br><span class="line">    return str_n == str_n[-1::-1] </span><br><span class="line">print(is_palindrome(12321),is_palindrome(235532),is_palindrome(123))</span><br></pre></td></tr></table></figure></p><p><strong>13.一个数如果恰好等于它的因子之和，这个数就称为“完数”。例如，6的因子为1、2、3，而6=1+2+3，因此6是完数。找出10000之内的所有完数，并输出该完数及对应的因子</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#求因子</span><br><span class="line">def get_factors(num):</span><br><span class="line">    return [tmp for tmp in range(1,num) if num%tmp==0]</span><br><span class="line">#求完数</span><br><span class="line">def get_perfect_numbers(num):</span><br><span class="line">    return [[tmp,get_factors(tmp)] for tmp in range(1,num) if sum(get_factors(tmp))==tmp]</span><br><span class="line">get_perfect_numbers(10000)</span><br></pre></td></tr></table></figure></p><h5 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text = &apos;Python is an interpreted high-level programming language for general-purpose programming. Created by Guido van Rossum and first released in 1991, Python has a design philosophy that emphasizes code readability, notably using significant whitespace. It provides constructs that enable clear programming on both small and large scales.Python features a dynamic type system and automatic memory management. It supports multiple programming paradigms, including object-oriented, imperative, functional and procedural, and has a large and comprehensive standard library.Python interpreters are available for many operating systems. CPython, the reference implementation of Python, is open source software[28] and has a community-based development model, as do nearly all of its variant implementations. CPython is managed by the non-profit Python Software Foundation.&apos;</span><br></pre></td></tr></table></figure><p>14.找出text中python或包含python的所有单词(忽略大小写)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line">print(re.findall(r&apos;[a-zA-Z]*(?i)python[a-zA-Z]*&apos;,text))</span><br></pre></td></tr></table></figure></p><p>15.统计text中python出现的次数(忽略大小写)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">improt re</span><br><span class="line">print(len(re.findall(r&apos;\b(?i)python\b&apos;,text)))</span><br></pre></td></tr></table></figure></p><p>16.将text中所有的Python替换为Py<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line">new_text = re.sub(r&apos;\b(?i)Python\b&apos;,&apos;Py&apos;,text)</span><br><span class="line">print(new_text)</span><br></pre></td></tr></table></figure></p><p>17.编写一个函数检查字符串中是否只包含数字和大小写字母，如果是返回True，如果否返回False<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line">def check_str(str):</span><br><span class="line">if re.search(r&apos;[^a-zA-Z0-9]&apos;,str):</span><br><span class="line">return False</span><br><span class="line">else:</span><br><span class="line">return True</span><br><span class="line">print(check_str(&apos;Good&apos;),check_str(&apos;bam2&apos;),check_str(&apos;1&amp;2to&apos;))</span><br></pre></td></tr></table></figure></p><p>18.编写一个函数将日期形式yyyy-mm-dd转换成日期形式dd-mm-yyyy<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line">def date_trans1(date):</span><br><span class="line">m = re.match(r&apos;(\d&#123;4&#125;)-(\d&#123;1,2&#125;)-(\d&#123;1,2&#125;)&apos;,date)</span><br><span class="line">return m.group(3) + &apos;-&apos; + m.group(2) + &apos;-&apos; + m.group(1) # 用group匹配每一部分</span><br><span class="line">def date_trans2(date):</span><br><span class="line">p = re.compile(r&apos;(\d&#123;4&#125;)-(\d&#123;1,2&#125;)-(\d&#123;1,2&#125;)&apos;)</span><br><span class="line">m = p.sub(r&apos;\3-\2-\1&apos;, date) # 用expand属性或re.sub函数</span><br><span class="line">return m</span><br><span class="line">print(date_trans1(&apos;1949-01-02&apos;),date_trans2(&apos;1949-01-02&apos;))</span><br></pre></td></tr></table></figure></p><p>19.找出text中每句话的第一个单词<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line"># 以句号分割每个句子</span><br><span class="line">sens = re.split(r&apos;\.&apos;,text)</span><br><span class="line"># 用循环取出每句的第一个单词</span><br><span class="line">for line in sens[:-2]:</span><br><span class="line">    print(re.search(r&apos;\w+&apos;,line).group())</span><br></pre></td></tr></table></figure></p><h5 id="文件读写"><a href="#文件读写" class="headerlink" title="文件读写"></a>文件读写</h5><p>20.读取文件number.txt并打印文件内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">for line in open(&quot;number.txt&quot;):</span><br><span class="line">    print(line.strip(&apos;\n&apos;))</span><br></pre></td></tr></table></figure></p><p>21.读取文件夹下的所有文件名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import os  </span><br><span class="line">files = os.listdir(os.getcwd())</span><br><span class="line">print(files)</span><br></pre></td></tr></table></figure></p><p>22.将文件number.txt中的内容写入命名为num.txt的新文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">outF = open(&apos;num.txt&apos;, &apos;w&apos;)</span><br><span class="line">for line in open(&quot;number.txt&quot;):</span><br><span class="line">    outF.write(line)</span><br><span class="line">outF.close()</span><br></pre></td></tr></table></figure></p><p>23.编写函数统计文件内容的行数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">def count_lines(file):</span><br><span class="line">    f = open(file, &quot;r&quot;)</span><br><span class="line">    lines = [line.strip(&apos;\n&apos;) for line in f.readlines()] # readlines() 方法用于读取所有行(直到结束符 EOF)并返回列表</span><br><span class="line">    lens = len(lines) # 函数len()</span><br><span class="line">    f.close()</span><br><span class="line">    return lens</span><br><span class="line">count_lines(&apos;number.txt&apos;)</span><br></pre></td></tr></table></figure></p><p>24.编写函数打印文件的最后5行内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">def print_last5lines(file):</span><br><span class="line">    f = open(file, &quot;r&quot;)</span><br><span class="line">    lines = [line.strip(&apos;\n&apos;) for line in f.readlines()] # readlines() 方法用于读取所有行(直到结束符 EOF)并返回列表</span><br><span class="line">    for i in lines[-5:]:</span><br><span class="line">        print(i) #取出列表的最后5个元素</span><br><span class="line">    f.close()</span><br><span class="line">print_last5lines(&apos;number.txt&apos;)</span><br></pre></td></tr></table></figure></p><p><strong>25.输入一个文件路径名或文件名，查看该文件是否存在。如存在，打开文件并在屏幕上输出该文件内容；如不存在，显示“输入的文件未找到！”并要求重新输入；如文件存在但在读文件过程中发生异常，则显示“文件无法正常读出！”并要求重新输入</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">while True:</span><br><span class="line">    file = input(&quot;请输入文件名&quot;)#用input()提示输入文件名</span><br><span class="line">    try:</span><br><span class="line">        f = open(file,&apos;r&apos;)# 打开文件</span><br><span class="line">    except IOError: #“文件未找到”对应的异常名 :</span><br><span class="line">        print(&quot;输入的文件未找到！请重新输入&quot;)#显示“输入的文件未找到！请重新输入”</span><br><span class="line">    except:</span><br><span class="line">        print(&quot;文件无法正常读出！请重新输入&quot;)#显示“文件无法正常读出！请重新输入”</span><br><span class="line">    else:</span><br><span class="line">        print (f.read())</span><br><span class="line">        break #成功读取并打印文件内容并退出循环</span><br></pre></td></tr></table></figure></p><h5 id="正则和文件读写"><a href="#正则和文件读写" class="headerlink" title="正则和文件读写"></a>正则和文件读写</h5><p>26.找一本英文小说(转为txt格式)，把其中所有的代词(I, you, he, she, it, we, you, they, me, you, him, her, it, us, you, them)都替换成两个星号<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import re,os</span><br><span class="line">f = open(&apos;godfather.txt&apos;,&apos;r&apos;)</span><br><span class="line">alllines = f.readlines()  </span><br><span class="line">f.close() </span><br><span class="line">f = open(&apos;godfather.txt&apos;,&apos;w+&apos;)</span><br><span class="line">p = re.compile(r&apos;(\b(?i)I\b)|(\b(?i)you\b)|(\b(?i)he\b)|(\b(?i)she\b)|(\b(?i)it\b)|(\b(?i)we\b)|(\b(?i)they\b)|(\b(?i)me\b)|(\b(?i)him\b)|(\b(?i)her\b)|(\b(?i)us\b)|(\b(?i)them\b)&apos;)</span><br><span class="line">for eachline in alllines:  </span><br><span class="line">    a = p.sub(&apos;**&apos;,eachline)  </span><br><span class="line">    f.writelines(a)  </span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure></p><p>27.找出文件夹下所有文件名格式为output_YYYY.MM.DD.txt(output_2016.10.21.txt)的文件 。读取文件名中的日期时间信息，并找出这一天是周几。将文件改名为output_YYYY-MM-DD-W.txt (YYYY:四位的年，MM：两位的月份，DD：两位的日，W：一位的周几，并假设周一为一周第一天)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import os,re,datetime</span><br><span class="line">path = &apos;/home/ds/notebooks/Test1/Python/Test&apos; </span><br><span class="line">filelist = os.listdir(path)</span><br><span class="line">p = re.compile(r&apos;^output_(\d&#123;4&#125;)\.(\d&#123;2&#125;)\.(\d&#123;2&#125;)\.txt$&apos;)</span><br><span class="line">for f in filelist: </span><br><span class="line">    m = p.match(f)  </span><br><span class="line">    if m: </span><br><span class="line">        year, month, day = m.groups() </span><br><span class="line">        try:</span><br><span class="line">            dayofweek = datetime.date(int(year), int(month), int(day)).isoweekday()</span><br><span class="line">            new_df = &apos;output_&apos; + year + &apos;-&apos; + month + &apos;-&apos; + day + &apos;-&apos; + str(dayofweek) + &apos;.txt&apos; </span><br><span class="line">            os.rename(os.path.join(path, f),os.path.join(path,new_df)) </span><br><span class="line">        except:</span><br><span class="line">            pass</span><br></pre></td></tr></table></figure></p><p>28.用电脑记录他每天掌握的英文单词。设计程序和相应的数据结构，能记录新学的英文单词和其中文翻译，并能很方便地根据英文来查找中文。实现一个类，能完成功能：1.背单词(添加单词)2.查单词(根据单词进行翻译)3.修改单词含义<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># encoding: utf-8</span><br><span class="line"></span><br><span class="line">class DanCiBen(object):</span><br><span class="line">    def __init__(self,my_dict=&#123;&#125;):</span><br><span class="line">        self.my_dict=my_dict</span><br><span class="line"></span><br><span class="line">    def recite(self,word,meaning):</span><br><span class="line">        self.my_dict[word]=meaning</span><br><span class="line">        print(&quot;新待背单词%s: %s&quot;%(word,meaning))</span><br><span class="line"></span><br><span class="line">    def search(self,word):</span><br><span class="line">        if word in self.my_dict.keys():</span><br><span class="line">            return self.my_dict[word]</span><br><span class="line">        else:</span><br><span class="line">            return &quot;该单词未背诵，请添加入单词本&quot;</span><br><span class="line"></span><br><span class="line">    def modify(self,word,meaning):</span><br><span class="line">        self.my_dict[word]=meaning</span><br><span class="line">        print(&quot;更改单词含义%s: %s&quot;%(word,meaning))</span><br><span class="line">        </span><br><span class="line">dcb=DanCiBen()#类测试</span><br><span class="line">#背单词</span><br><span class="line">dcb.recite(&apos;good&apos;,&apos;好&apos;)</span><br><span class="line">dcb.recite(&apos;day&apos;,&apos;天&apos;)</span><br><span class="line">dcb.recite(&apos;expend&apos;,&quot;扩张&quot;)</span><br><span class="line">#查单词</span><br><span class="line">print(&quot;good:&quot; + dcb.search(&apos;good&apos;))</span><br><span class="line">print(&quot;bad:&quot; + dcb.search(&apos;bad&apos;))</span><br><span class="line">#修改单词含义</span><br><span class="line">dcb.modify(&apos;expend&apos;,&apos;花费&apos;)</span><br></pre></td></tr></table></figure></p><p><a href="https://blog.csdn.net/czl389/article/details/75359423" target="_blank" rel="noopener">部分习题可参考</a><br><a href="http://www.cnblogs.com/kaituorensheng/archive/2012/08/20/2648209.html" target="_blank" rel="noopener">group()用法</a><br><a href="https://blog.csdn.net/lsq2902101015/article/details/51305825" target="_blank" rel="noopener">os.walk()和os.listdir()</a><br><a href="https://blog.csdn.net/shfqbluestone/article/details/50284517" target="_blank" rel="noopener">判断一个路径是否存在判断一个路径是文件还是目录</a><br><a href="https://blog.csdn.net/vola9527/article/details/72858622" target="_blank" rel="noopener">os.rename和os.renames</a></p><p><strong><em>题目以上来自<a href="www.xiniuedu.com">稀牛学院</a>数据科学实训营 </em></strong></p>]]></content>
      
      <categories>
          
          <category> 数据科学实训营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>实战2.python正则讲解</title>
      <link href="/2018/04/04/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/%E5%AE%9E%E6%88%982-python%E6%AD%A3%E5%88%99%E8%AE%B2%E8%A7%A3/"/>
      <url>/2018/04/04/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/%E5%AE%9E%E6%88%982-python%E6%AD%A3%E5%88%99%E8%AE%B2%E8%A7%A3/</url>
      <content type="html"><![CDATA[<h5 id="python正则不熟悉要点记录"><a href="#python正则不熟悉要点记录" class="headerlink" title="python正则不熟悉要点记录"></a>python正则不熟悉要点记录</h5><p>r 表示不转义<br>(\1) 引用前面一个分组<br>\w   匹配任何字母数字字符<br>(?P<name>…) 创建分组并命名<br>(?i)忽略大小写<br>.group()返回匹配结果中一个或多个group  <a href="https://blog.csdn.net/jeryjeryjery/article/details/77196497" target="_blank" rel="noopener">.group和.findall参考</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">re.search(&apos;abc(?!def)&apos;,&apos;abcdef&apos;) #为NONE所以没有.group()</span><br><span class="line">re.findall(r&apos;(?i)sam&apos;, &apos;sam Sam&apos;) #.findall</span><br><span class="line">re.search(r&apos;(?i)sam&apos;, &apos;sam Sam&apos;).group()#注意区分.findall .group</span><br><span class="line">re.match #只检测起始位置</span><br></pre></td></tr></table></figure></name></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 匹配&apos;数字abc&apos;后面是数字或abc的字符串</span><br><span class="line">print (re.search(r&apos;(\d)abc(?(1)\d|abc)&apos;, &apos;1abc1 abcabc&apos;).group())</span><br></pre></td></tr></table></figure><p>(?P=name)引用name的分组，和（?P<name>）一起使用</name></p><p>还需多练习</p><p><strong><em>以上来自<a href="www.xiniuedu.com">稀牛学院</a>数据科学实训营 助教大菜菜老师的正则直播讲解</em></strong></p>]]></content>
      
      <categories>
          
          <category> 数据科学实训营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>爬虫：模拟登陆和动态网站抓取 要点记录</title>
      <link href="/2018/04/03/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/%E7%88%AC%E8%99%AB%EF%BC%9A%E6%A8%A1%E6%8B%9F%E7%99%BB%E9%99%86%E5%92%8C%E5%8A%A8%E6%80%81%E7%BD%91%E7%AB%99%E6%8A%93%E5%8F%96/"/>
      <url>/2018/04/03/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/%E7%88%AC%E8%99%AB%EF%BC%9A%E6%A8%A1%E6%8B%9F%E7%99%BB%E9%99%86%E5%92%8C%E5%8A%A8%E6%80%81%E7%BD%91%E7%AB%99%E6%8A%93%E5%8F%96/</url>
      <content type="html"><![CDATA[<h5 id="豆瓣模拟登录（google浏览器）"><a href="#豆瓣模拟登录（google浏览器）" class="headerlink" title="豆瓣模拟登录（google浏览器）"></a>豆瓣模拟登录（google浏览器）</h5><p><strong>存在问题？</strong> 登录账号和密码、保持登录状态（跨请求地保持某些参数）、图形验证码<br><strong>操作</strong>：在检查项的Network下查看登录信息，点击login，Header下From data内有表单信息</p><blockquote><p>source: None<br>redir: <a href="https://www.douban.com/" target="_blank" rel="noopener">https://www.douban.com/</a> #登陆页面<br>form_email: test2 #用户邮箱<br>form_password: 111111 #密码<br>captcha-solution: potato #验证码，豆瓣有验证码图库，比对图片ID号<br>captcha-id: tljqzo0Gv3aYUpIarqXaDBAg:en #验证码ID XPath去取<br>login: 登录</p></blockquote><p>captcha_img_url = selector.xpath(‘//img[@id=”captcha_image”]//@src’)<br><strong>结果为空，待解决</strong></p><h5 id="scrapy-命令行端执行脚本"><a href="#scrapy-命令行端执行脚本" class="headerlink" title="scrapy 命令行端执行脚本"></a>scrapy 命令行端执行脚本</h5><p><strong>待练习</strong><br>[Scrapy简单入门及实例讲解][<a href="https://www.cnblogs.com/kongzhagen/p/6549053.html" target="_blank" rel="noopener">https://www.cnblogs.com/kongzhagen/p/6549053.html</a>]<br>[Scrapy安装、爬虫入门教程、爬虫实例（豆瓣电影爬虫）][<a href="http://www.cnblogs.com/Shirlies/p/4536880.html" target="_blank" rel="noopener">http://www.cnblogs.com/Shirlies/p/4536880.html</a>]</p>]]></content>
      
      <categories>
          
          <category> 数据科学实训营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>L2 Pandas Series &amp; DataFrame 关键点记录</title>
      <link href="/2018/04/03/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/L2.Pandas-Series-DataFrame/"/>
      <url>/2018/04/03/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/L2.Pandas-Series-DataFrame/</url>
      <content type="html"><![CDATA[<h5 id="Series-一维数组"><a href="#Series-一维数组" class="headerlink" title="Series 一维数组"></a>Series 一维数组</h5><p>构建初始化：可用list构建（dict也可），默认用0-n为Series的index，也可指定<br>位置索引/名称索引：s[[1,2,3]] 内为列表<br>数学运算（广播特性）：list不可（list相加并在一起），基于索引进行计算（list相加并在一起）<br>in判断是否在索引内    .get看值是否有    条件索引取值<br>统计计算：min max mean等    可和numpy结合使用 如np.log()<br>赋值：可和条件索引结合使用<br>数据缺失：notnull() isnull()    expense[expense.isnull()] = expense.mean()</p><h5 id="DataFrame-二维数组"><a href="#DataFrame-二维数组" class="headerlink" title="DataFrame 二维数组"></a>DataFrame 二维数组</h5><p>构建：给列名列元素    columns调整列的顺序    index可重定义    可由Series构建<br>取值：下为取列，注意区分    <strong>.loc取行</strong>(传入list或类似切片用法)　<a href="https://blog.csdn.net/hecongqing/article/details/61927615" target="_blank" rel="noopener">.loc用法参考</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">type(df[&apos;apt&apos;])</span><br><span class="line">pandas.core.series.Series</span><br><span class="line">type(df[[&apos;apt&apos;]])</span><br><span class="line">pandas.core.frame.DataFrame</span><br></pre></td></tr></table></figure></p><p>df.T 转置    df.shape 、df.info()：行列信息    df.describe():均值分位数等信息<br><a href="https://blog.csdn.net/qq_28219759/article/details/49160073" target="_blank" rel="noopener">.isin参考</a><br>缺失值处理：.fillna</p><h5 id="Index-csv文件的读写"><a href="#Index-csv文件的读写" class="headerlink" title="Index csv文件的读写"></a>Index csv文件的读写</h5><p><a href="https://blog.csdn.net/newbiemath/article/details/61432073" target="_blank" rel="noopener">.read_csv参考</a>: index_col parse_dates<br>.to_csv()<br><strong>.index</strong>    index.dayofweek<br>%matplotlib inline 绘图<br>数据选择 | &amp; !</p><p><strong><em>以上整理自<a href="www.xiniuedu.com">稀牛学院</a>数据科学实训营 寒小阳老师关于pandas的讲解</em></strong></p>]]></content>
      
      <categories>
          
          <category> 数据科学实训营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>爬虫：静态网站数据获取</title>
      <link href="/2018/04/02/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/%E7%88%AC%E8%99%AB%EF%BC%9A%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96/"/>
      <url>/2018/04/02/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/%E7%88%AC%E8%99%AB%EF%BC%9A%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96/</url>
      <content type="html"><![CDATA[<h4 id="XPath"><a href="#XPath" class="headerlink" title="XPath"></a>XPath</h4><h5 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h5><blockquote><p>XML 文档中查信息的语言， XML 文档中对元素和属性进行遍历</p></blockquote><h5 id="七类节点node-XML最小单元"><a href="#七类节点node-XML最小单元" class="headerlink" title="七类节点node XML最小单元"></a>七类节点node XML最小单元</h5><blockquote><p>element、attribute、text、namespace、processing-instruction、comment、root</p></blockquote><h5 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h5><p>选取节点：路径表达式<br><a href="http://www.w3school.com.cn/xpath/index.asp" target="_blank" rel="noopener">XPath教程</a></p><blockquote><p>nodename 选取此node所有子节点<br>/ 文档根下节点 // 文档里任何位置的节点<br>. 当前节点  .. 当前节点父节点<br>@选属性<br>[] 谓语 找特定节点或包含特定值节点<br>星号 匹配任何元素节点 @* 匹配任何属性节点  node() 匹配任何类型节点<br>| 选取若干路径<br>绝对路径和相对路径：前者以“/”起始</p></blockquote><h5 id="查看网页XPath路径记录"><a href="#查看网页XPath路径记录" class="headerlink" title="查看网页XPath路径记录"></a>查看网页XPath路径记录</h5><p>右击标题，选检查，elements下查看，右击copy XPath，ctrl+F，ctrl+V，之前粘贴部分被高亮，高亮部分为XPath路径示例，具体语法参照上面<br>//div[@class=”text”]/em/a/text() 取内容<br>div[@class=”text”] 选取所有拥有名为class=”text” 的属性的div 元素<br>a/@href 取属性</p><h4 id="requesets"><a href="#requesets" class="headerlink" title="requesets"></a>requesets</h4><p>One.请求网页，<a href="https://blog.csdn.net/shanzhizi/article/details/50903748" target="_blank" rel="noopener">requesets详解</a><br>Two.获取返回状态200和网页编码格式’GB2312’ -&gt; .content显示内容 -&gt; import etree;XPath抓取标题;用text-&gt;传递参数wd和rn -&gt; 超时时间 -&gt;添加代理 -&gt;请求头内容<br><a href="https://www.biaodianfu.com/python-lxml-xpath.html" target="_blank" rel="noopener">etree和XPath</a></p><p>豆瓣最热电影评论爬取示例、链家爬取案例练习</p><p><strong><em><a href="www.xiniuedu.com">稀牛学院</a>数据科学实训营 助教寒小阳老师爬虫课程 学习整理</em></strong></p>]]></content>
      
      <categories>
          
          <category> 数据科学实训营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>实战1.QQ答疑</title>
      <link href="/2018/04/01/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/%E5%AE%9E%E6%88%981-QQ%E7%AD%94%E7%96%91/"/>
      <url>/2018/04/01/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/%E5%AE%9E%E6%88%981-QQ%E7%AD%94%E7%96%91/</url>
      <content type="html"><![CDATA[<h4 id="实战1-一起来打怪之-python-基础与进阶练习题-QQ答疑"><a href="#实战1-一起来打怪之-python-基础与进阶练习题-QQ答疑" class="headerlink" title="实战1.一起来打怪之 python 基础与进阶练习题 QQ答疑"></a>实战1.一起来打怪之 python 基础与进阶练习题 QQ答疑</h4><h5 id="关于竞赛"><a href="#关于竞赛" class="headerlink" title="关于竞赛"></a>关于竞赛</h5><p>Q：竞赛情况<br>A：竞赛最有名的是Kaggle，国内是阿里天池。获奖情况每个比赛不一样，有的前10，有的前6。一般能到前1%就很不错了。竞赛爬取结果: <a href="https://github.com/iphysresearch/DataSciComp" target="_blank" rel="noopener">土豆的github</a></p><h5 id="如何学习"><a href="#如何学习" class="headerlink" title="如何学习"></a>如何学习</h5><p>Q：边听课边在实验室环境里的notebook上做笔记，两个窗口不能同时开着，只能切换运行<br>A：可同时打开notebook同时做笔记。但是建议注意力放在听课上面，用笔和纸速记。可用markdown做笔记。<br>A：问题出现，先google,bing检索，常见社区Stack Overflow</p><h5 id="运行平台"><a href="#运行平台" class="headerlink" title="运行平台"></a>运行平台</h5><p>Q：jupyter notebook执行ternimal无法显示<br>A：广告拦截软件拦截，关掉广告拦截软件或者换一个浏览器试试。chrome和firefox都能很好的运行稀牛的实验环境。<br>Q：只要能用anaconda里的jupyter打开发的ipynb的文件就说明配置没错吗<br>A：anaconda应该没有什么需要编辑的，只要装上了，就能启动jupyter<br>Q：jupyter里面有类似上下键翻录历史命令/代码的快捷键？<br>A：shift+enter ctrl+enter<br>Q：在terminal里面输入dir，然后下一条命令还要输入dir，winh和linux下都可以用键盘上下翻的键显示，ipython也可以，notebook里面不知道有没有<br>A：木有<br>Q：将notebook里的cell 转换为markdown格式是什么快捷键<br>A：选中单元格+m<br>Q：本地安装了jupyter ，但是terminal里运行jupyter notebook 每次给出本地地址，需要手动复制到浏览器运行，难道不应该是直接弹出浏览器运行吗？ 怎么设置，是要修改环境变量吗？怎么设置？<br>A：打开失败了，检查一下里面浏览器的设置<br>Q：在jupter里写的markdown可以变成文本吗<br>A：可以点左上角，file——&gt;download as，里面有很多选项<br>Q：shell查看文件<br>A：!head</p><h5 id="python基础"><a href="#python基础" class="headerlink" title="python基础"></a>python基础</h5><p>Q：文件读取多语言的文件怎么处理<br>A：建议使用python3，python3对中文支持要好一些，特别爬虫的时候感觉最明显。如果还不行的话建议，在写入文件和读取文件的时候，跟上字符编码。未解决，可能和win10系统相关。<br>Q：input 可以输入字符串列表吗<br>A：input来输入int，raw_input来输入string。可参考：<a href="https://blog.csdn.net/qingquanyingyue/article/details/77964990" target="_blank" rel="noopener">Python输入字符串转列表</a><br>Q：导入了seaborn，为什么画出来的图还是matplotlib默认风格的<br>A：代码用的pylot，sns.set()执行以下，再绘图<br>Q：不定长度参数的函数中 * 号是指针的意思？<br>A：不是，廖学峰的官方网站python3: <a href="https://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001374738449338c8a122a7f2e047899fc162f4a7205ea3000" target="_blank" rel="noopener">参数小结</a></p><h5 id="爬虫"><a href="#爬虫" class="headerlink" title="爬虫"></a>爬虫</h5><p>Q：静态数据获取视频中查看元素之后在filter里填了东西是回车就可以找到了吗 xpath表达式<br>A：取东西一般有两种类型。一种是文本，最后需要接一个text()来取文本。另外一种是取属性。可查看：<a href="http://www.w3school.com.cn/xpath/xpath_syntax.asp" target="_blank" rel="noopener">xpath语法</a><br>Q：浏览器打开检查元素，是直接在filter里填xpath就回高亮就会跳到我要找的文本或属性吗？<br>A：是的，只要写对了，就会高亮。直接使用chrome右键copy xpath得到的，可读性不高，可用性不强。<br>Q：怎样的xpath算是可读性比较强的<br>A：简洁、高效。</p><p><strong><em>以上来自<a href="www.xiniuedu.com">稀牛学院</a>数据科学实训营 助教易龙老师及学员们的QQ答疑</em></strong></p>]]></content>
      
      <categories>
          
          <category> 数据科学实训营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>来自google的专业python指南</title>
      <link href="/2018/04/01/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/L1.%E6%9D%A5%E8%87%AAgoogle%E7%9A%84%E4%B8%93%E4%B8%9Apython%E6%8C%87%E5%8D%97/"/>
      <url>/2018/04/01/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98/L1.%E6%9D%A5%E8%87%AAgoogle%E7%9A%84%E4%B8%93%E4%B8%9Apython%E6%8C%87%E5%8D%97/</url>
      <content type="html"><![CDATA[<p>前言：课程结构相对于前四期进行调整。one.爬虫（数据获取）直播切录播。Two.机器学习及其依赖的数据处理课时加重。Three.大数据技能后移，希望教给大家大数据处理和机器学习大数据建模的技能。</p><h4 id="python使用原因："><a href="#python使用原因：" class="headerlink" title="python使用原因："></a>python使用原因：</h4><p>数据科学领域top2；<br>深度学习、人工智能领域举例：google: tensorflow、facebook: pytorch + caffe2、Amazon: mnxet、caffe、易上手package：Keras, TFlearn, tensorlayer、python接口；<br>机器学习领域举例：scikit-learn numpy/scipy pandas xgboost/lightGBM；<br>大数据领域举例：spark scala、pyspark、hadoop Map-Reduce、hadoop streaming + python 脚本；<br>数据科学家:数据驱动的解决方案，不花大时间在开发，集中在数据分析建模等问题上</p><h4 id="如何寻求帮助"><a href="#如何寻求帮助" class="headerlink" title="如何寻求帮助"></a>如何寻求帮助</h4><p>help() (快捷键win+ctrl+shift+tab)<br>dir()</p><h4 id="python运算"><a href="#python运算" class="headerlink" title="python运算"></a>python运算</h4><p>运算符：+ - * / %</p><h4 id="基本数据类型、变量"><a href="#基本数据类型、变量" class="headerlink" title="基本数据类型、变量"></a>基本数据类型、变量</h4><p>基本数据类型：int float str bool<br>type() 查看数据类型<br>整数和浮点数在计算机内部存储的方式是不同的，整数运算永远是精确的，而浮点数运算则可能会有四舍五入的误差。</p><h4 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h4><p>+=  -= *= /=</p><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = &quot;hello world!&quot;</span><br><span class="line">abc = &quot;123456&quot; </span><br><span class="line">abc.isdigit()  #Tab可补全</span><br><span class="line">&apos;&apos;&apos; &apos;&apos;&apos; 可内部换行</span><br></pre></td></tr></table></figure><p>可参考：<a href="https://blog.csdn.net/woainishifu/article/details/76105667" target="_blank" rel="noopener">三种引号区别</a></p><h4 id="字符串切片-splice"><a href="#字符串切片-splice" class="headerlink" title="字符串切片/splice"></a>字符串切片/splice</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">len(tmp_str) </span><br><span class="line">左起0 右起-1 左闭右开</span><br><span class="line">string.lower() </span><br><span class="line">.upper() </span><br><span class="line">.capitalize() </span><br><span class="line">.startswith(&quot;xiao&quot;) </span><br><span class="line">.endswith(&quot;sh&quot;) </span><br><span class="line">.strip() </span><br><span class="line">.find() #-1未找到  </span><br><span class="line">.split()</span><br></pre></td></tr></table></figure><h4 id="列表-list（存储一连串数据）"><a href="#列表-list（存储一连串数据）" class="headerlink" title="列表/list（存储一连串数据）"></a>列表/list（存储一连串数据）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">names=[&apos;Hanmei&apos;,&apos;Lilei&apos;,&apos;Hanxiao&apos;,&apos;Xi&apos;,&apos;Bob&apos;,&apos;Davie&apos;]</span><br><span class="line">len(names)</span><br><span class="line">mixed = [&apos;Han&apos;,2,3.14,[&apos;Li&apos;,&apos;Hanmei&apos;]]</span><br><span class="line">len(mixed)</span><br><span class="line">mixed[1]</span><br><span class="line">mixed[-2]</span><br><span class="line">mixed[-1][-1]</span><br><span class="line">&apos;\n&apos;.join(names)</span><br><span class="line">names.append(&quot;xiaohong&quot;)#尾部添加</span><br><span class="line">names.remove([&quot;xiaohong&quot;])</span><br><span class="line">names.extend([&apos;xiao&apos;,&apos;xiaoxiao&apos;,&apos;Bao&apos;])</span><br><span class="line">names.reverse()</span><br><span class="line">help(list.pop)</span><br><span class="line">help(list.insert)</span><br></pre></td></tr></table></figure><h4 id="判断循环"><a href="#判断循环" class="headerlink" title="判断循环"></a>判断循环</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">age = 66</span><br><span class="line">if age&gt;80:</span><br><span class="line">print(&apos;very old&apos;)</span><br><span class="line">elif age&gt;30:</span><br><span class="line">print(&apos;old&apos;)</span><br><span class="line">else:</span><br><span class="line">print(&apos;young&apos;)</span><br><span class="line"></span><br><span class="line">for index,stu in enumerate(names):</span><br><span class="line">print(index,stu)</span><br><span class="line"></span><br><span class="line">i = 0</span><br><span class="line">while i&lt;10:</span><br><span class="line"> print(i)</span><br><span class="line"> i +=1</span><br><span class="line"> </span><br><span class="line">注意continue break 区分</span><br><span class="line">enumerate()函数将一个可遍历的数据对象(如list、元组或字符串)组合为一个索引序列，同时列出数据和数据下标，一般用在for循环当中</span><br></pre></td></tr></table></figure><h5 id="列表推导式"><a href="#列表推导式" class="headerlink" title="列表推导式"></a>列表推导式</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[&quot;my name is: &quot; +name for name in names]</span><br><span class="line">[num + 5 for num in num_list]</span><br><span class="line">[num**3 for num in num_list if (num%2==1 and num &lt; 7)]</span><br><span class="line">#与或非and or not</span><br></pre></td></tr></table></figure><h4 id="集合Set"><a href="#集合Set" class="headerlink" title="集合Set"></a>集合Set</h4><p>y = set([‘h’,’a’,’m’])<br>与列表和元组不同，集合是无序的，也无法通过数字进行索引。此外，集合中的元素不能重复</p><h4 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">legs = &#123;&apos;spider&apos;:8,&apos;pig&apos;:4,&apos;ducl&apos;:2&#125;</span><br><span class="line">type(legs)</span><br><span class="line">legs.values()</span><br><span class="line">legs.keys()</span><br><span class="line">&apos;bird&apos; in legs</span><br><span class="line">for animal, leg_num in legs.items():</span><br><span class="line">print(animal,leg_num)</span><br></pre></td></tr></table></figure><h5 id="字典推导式"><a href="#字典推导式" class="headerlink" title="字典推导式"></a>字典推导式</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">my_list = [1,3,5,7,9,2,4]</span><br><span class="line">dic = &#123;&#125;</span><br><span class="line">for num in my_list:</span><br><span class="line">dic[num] = num **3</span><br><span class="line"></span><br><span class="line">&#123;num:num**3 for num in my_list&#125;</span><br></pre></td></tr></table></figure><h5 id="高级排序"><a href="#高级排序" class="headerlink" title="高级排序"></a>高级排序</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">num_list1.sort()#成员函数，对自身做调整，num_list1排序结果为返回值返回</span><br><span class="line">sorted(num_list2) #python中函数，num_list2未更改</span><br><span class="line">sorted(str, reverse=True)#字母反序</span><br><span class="line">sorted(str,key=len)#根据key函数即长度排序，长度一致asic排序</span><br><span class="line">sorted(str,key=str.lower)#小写后排序，key function给函数名，无需括号</span><br></pre></td></tr></table></figure><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def get_first(my_list):</span><br><span class="line">return my_list[0]</span><br><span class="line">get_first([&apos;Han&apos;,&apos;Li&apos;])</span><br><span class="line">classed = [&apos;Han&apos;,&apos;Li&apos;],[&apos;Xiao&apos;,&apos;Ming&apos;],[&apos;Wang&apos;,&apos;Xiao&apos;]</span><br><span class="line">sorted(classed,key=get_first)</span><br><span class="line">#不定长度的参数</span><br><span class="line">def print_all(*args):</span><br><span class="line">print(type(args))</span><br><span class="line">print(args)</span><br></pre></td></tr></table></figure><h4 id="文件读写"><a href="#文件读写" class="headerlink" title="文件读写"></a>文件读写</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">head -2 test.txt #shell</span><br><span class="line">f = open(&quot;test.txt&quot;, &apos;r&apos;)</span><br><span class="line">contents = f.readlines()</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line">for line in open(&apos;test.txt&apos;,&apos;r&apos;,encoding=&apos;UTF-8&apos;):</span><br><span class="line">print(line.strip())</span><br><span class="line">print(&quot;\n&quot;)</span><br></pre></td></tr></table></figure><h5 id="统计文件中的词频"><a href="#统计文件中的词频" class="headerlink" title="统计文件中的词频"></a>统计文件中的词频</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">def my_word_count(in_file,out_file):</span><br><span class="line">word_count = &#123;&#125;</span><br><span class="line">for line in open(in_file,&apos;r&apos;,encoding=&apos;utf-8&apos;):</span><br><span class="line">words = line.strip().split(&quot; &quot;)</span><br><span class="line">for word in words:</span><br><span class="line">if word.lower() in word_count:</span><br><span class="line">word_count[word.lower()] += 1 </span><br><span class="line">else:</span><br><span class="line">word_count[word.lower()] = 1</span><br><span class="line">out = open(out_file,&apos;w&apos;,encoding=&apos;utf-8&apos;)</span><br><span class="line">for word in word_count:</span><br><span class="line">out.write(word+&quot;:&quot;+str(word_count[word])+&quot;\n&quot;)</span><br><span class="line">print(&quot;词频统计完成&quot;)</span><br><span class="line">out.close()</span><br><span class="line"></span><br><span class="line">in_file = &apos;test.txt&apos;</span><br><span class="line">out_file = &apos;out.txt&apos;</span><br><span class="line">my_word_count(in_file,out_file)</span><br><span class="line"># += 间无空格 严格缩进</span><br></pre></td></tr></table></figure><h4 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h4><blockquote><p>\d匹配一个数字<br>\w匹配一个字母或数字<br>\s匹配一个空格（也包括Tab等空白符）<br>.匹配任意字符<br><em>表示任意个字符（包括0个）<br>+表示至少一个字符<br>?表示0个或1个字符<br>{n}表示n个字符<br>{n,m}表示n-m个字符<br>[0-9a-zA-Z_]匹配一个数字、字母或者下划线<br>[0-9a-zA-Z_]+可以匹配至少由一个数字、字母或者下划线组成的字符串，比如’a100’，’0<em>Z’，’Py3000’等等；<br>[a-zA-Z\</em>][0-9a-zA-Z_]</em>可以匹配由字母或下划线开头，后接任意个由一个数字、字母或者下划线组成的字符串，也就是Python合法的变量；<br>[a-zA-Z_][0-9a-zA-Z_]{0, 19}更精确地限制了变量的长度是1-20个字符（前面1个字符+后面最多19个字符）。<br>A|B可以匹配A或B，所以(P|p)ython可以匹配’Python’或者’python’。<br>^表示行的开头，^\d表示必须以数字开头。<br>\d$表示必须以数字结束</p></blockquote><p>参考资料: <a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/00143193331387014ccd1040c814dee8b2164bb4f064cff000" target="_blank" rel="noopener">廖雪峰的Python教程</a></p><h5 id="有意思的拓展链接整理中"><a href="#有意思的拓展链接整理中" class="headerlink" title="有意思的拓展链接整理中"></a>有意思的拓展链接整理中</h5><p><a href="https://mp.weixin.qq.com/s/7Ephzy4NuwuHJwu8M5ur4Q" target="_blank" rel="noopener">八道python练习题</a><br><a href="http://aosabook.org/blog/" target="_blank" rel="noopener">http://aosabook.org/blog/</a></p><p><strong><em>以上来自<a href="www.xiniuedu.com">稀牛学院</a>数据科学实训营 寒小阳老师关于python基础的讲解<br>由于课程版权问题，后续会减去课程具体内容，更换为个人学习体验和拓展学习内容</em></strong></p>]]></content>
      
      <categories>
          
          <category> 数据科学实训营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>一个MeDIP-seq实战</title>
      <link href="/2017/09/05/seq%E5%AE%9E%E6%88%98/%E4%B8%80%E4%B8%AAMeDIP-seq%E5%AE%9E%E6%88%98/"/>
      <url>/2017/09/05/seq%E5%AE%9E%E6%88%98/%E4%B8%80%E4%B8%AAMeDIP-seq%E5%AE%9E%E6%88%98/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">wget ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByStudy/sra/SRP/SRP018/SRP018845/SRR764931/SRR764931.sra</span><br><span class="line">wget ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByStudy/sra/SRP/SRP018/SRP018845/SRR764932/SRR764932.sra</span><br><span class="line">ls *sra |while read id; do fastq-dump --gzip --split-3 -A $id;done</span><br><span class="line">bowtie2 -p 6 -x /home/tingm/refdata/biotree_refdata/bowtie2_index/mm10/mm10 -U SRR764931.sra.fastq.gz | /home/tingm/software/samtools-1.3.1/samtools sort -O bam -o shGFP.bam</span><br><span class="line">bowtie2 -p 6 -x /home/tingm/refdata/biotree_refdata/bowtie2_index/mm10/mm10 -U SRR764932.sra.fastq.gz | /home/tingm/software/samtools-1.3.1/samtools sort -O bam -o shDnmt3L.bam</span><br><span class="line"></span><br><span class="line">/home/tingm/software/samtools-1.3.1/samtools index shDnmt3L.bam</span><br><span class="line">/home/tingm/software/samtools-1.3.1/samtools index shGFP.bam</span><br><span class="line"></span><br><span class="line">macs2 callpeak -t shDnmt3L.bam -m 10 30 -p 1e-5 -f BAM -g mm -n shDnmt3L 2&gt;shDnmt3L.masc2.log</span><br><span class="line">macs2 callpeak -t shGFP.bam -m 10 30 -p 1e-5 -f BAM -g mm -n shGFP 2&gt;shGFP.masc2.log</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">~/.local/bin/bamCoverage -b shDnmt3L.bam -o shDnmt3L.bw #-p 10 --normalizeUsingRPKM</span><br><span class="line">~/.local/bin/bamCoverage -b shGFP.bam -o shGFP.bw #-p 10 --normalizeUsingRPKM</span><br><span class="line"></span><br><span class="line">~/.local/bin/computeMatrix reference-point --referencePoint TSS -b 10000 -a 10000 -R /home/tingm/refdata/biotree_refdata/bowtie2_index/mm10_refSeq.bed -S shDnmt3L.bw --skipZeros -o matrix1_shDnmt3L_TSS.gz</span><br><span class="line">~/.local/bin/plotHeatmap -m matrix1_shDnmt3L_TSS.gz -out shDnmt3L.png</span><br><span class="line"></span><br><span class="line">~/.local/bin/computeMatrix reference-point --referencePoint TSS -b 10000 -a 10000 -R /home/tingm/refdata/biotree_refdata/bowtie2_index/mm10_refSeq.bed -S shGFP.bw --skipZeros -o matrix1_shGFP_TSS.gz</span><br><span class="line">~/.local/bin/plotHeatmap -m matrix1_shGFP_TSS.gz -out shGFP.png</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/2116382-411a344663d438d9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="all files"></p><p><img src="http://upload-images.jianshu.io/upload_images/2116382-6a55ccb7f1d36457.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="shDnmt3L.png"><br>不知道结果对不对</p><blockquote><p>MeDIP-seq 跟ChIP-seq的分析手段是一模一样的，同理hMeDIP-seq，caMeDIP-seq等等，都没有本质上的区别，只是用的抗体不一样而已<br><a href="http://www.bio-info-trainee.com/2352.html" target="_blank" rel="noopener">一个MeDIP-seq实战</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> seq实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bioinformatics </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>一个ChIP-seq实战</title>
      <link href="/2017/09/02/seq%E5%AE%9E%E6%88%98/%E4%B8%80%E4%B8%AAChIP-seq%E5%AE%9E%E6%88%98/"/>
      <url>/2017/09/02/seq%E5%AE%9E%E6%88%98/%E4%B8%80%E4%B8%AAChIP-seq%E5%AE%9E%E6%88%98/</url>
      <content type="html"><![CDATA[<p>###软件准备<br>已有sratoolkit,fastqc,bowtie2,samtools,htseq-count,bedtools,R,Rstudio<br>下载macs2,deeptools</p><blockquote><p><a href="https://bedtools.readthedocs.io/en/latest/content/installation.html" target="_blank" rel="noopener">bedtools官方下载参考</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#download bedtools</span><br><span class="line">wget https://github.com/arq5x/bedtools2/releases/download/v2.25.0/bedtools-2.25.0.tar.gz</span><br><span class="line">tar -zxvf bedtools-2.25.0.tar.gz</span><br><span class="line">cd bedtools2</span><br><span class="line">make</span><br><span class="line">echo &apos;PATH=$PATH:/home/tingm/practise/biosoft/bedtools2/bin&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br><span class="line">su yum install BEDTools #root</span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#download pyBigWig</span><br><span class="line">pip install pyBigWig --user</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://github.com/fidelram/deepTools" target="_blank" rel="noopener">deeptools官方网址</a><br><a href="https://deeptools.readthedocs.io/en/latest/content/example_usage.html" target="_blank" rel="noopener">deeptools官方使用教程</a><br><a href="http://www.bio-info-trainee.com/2136.html" target="_blank" rel="noopener">中文教程</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#download deeptools </span><br><span class="line">conda install deeptools #conda</span><br><span class="line">git clone https://github.com/fidelram/deepTools</span><br><span class="line">cd deepTools</span><br><span class="line">python setup.py install --user</span><br><span class="line">~/.local/bin/deeptools</span><br></pre></td></tr></table></figure></p><p>centos本身python为2.6版本，且无pip 进行以下操作<br>参考 <a href="https://my.oschina.net/vaero/blog/210486" target="_blank" rel="noopener">https://my.oschina.net/vaero/blog/210486</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#download pip 先安装python2.7并设置软连接，指定yum</span><br><span class="line">python</span><br><span class="line">#安装setuptools</span><br><span class="line">wget https://pypi.python.org/packages/26/d1/dc7fe14ce4a3ff3faebf1ac11350de4104ea2d2a80c98393b55c84362b0c/setuptools-32.1.0.tar.gz</span><br><span class="line">tar zxvf setuptools-32.1.0.tar.gz</span><br><span class="line">cd setuptools-32.1.0/</span><br><span class="line">python setup.py build</span><br><span class="line">sudo python setup.py install</span><br><span class="line">#安装pip 参考https://my.oschina.net/vaero/blog/210486</span><br><span class="line">wget --no-check-certificate  https://pypi.python.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz</span><br><span class="line">tar zxvf pip-9.0.1.tar.gz</span><br><span class="line">cd pip-9.0.1</span><br><span class="line">python setup.py install(error)</span><br><span class="line">yum install openssl openssl-devel -y</span><br><span class="line">make  # Python-2.7.6目录</span><br><span class="line">make install</span><br><span class="line">easy_install -i http://pypi.douban.com/simple pip</span><br><span class="line">sudo python setup.py install</span><br><span class="line">pip</span><br></pre></td></tr></table></figure></p><p><a href="http://liulab.dfci.harvard.edu/MACS/" target="_blank" rel="noopener">MACS2官方网址</a><br><a href="https://pypi.python.org/pypi/MACS2/2.1.1.20160309" target="_blank" rel="noopener">https://pypi.python.org/pypi/MACS2/2.1.1.20160309</a><br><a href="http://www.bio-info-trainee.com/680.html" target="_blank" rel="noopener">MACS2中文教程</a><br>centos python 2.6 上未安装成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pip install MACS2 #error</span><br><span class="line">wget https://pypi.python.org/packages/9f/99/a8ac96b357f6b0a6f559fe0f5a81bcae12b98579551620ce07c5183aee2c/MACS2-2.1.1.20160309.tar.gz</span><br><span class="line">tar zxvf MACS2-2.1.1.20160309.tar.gz</span><br><span class="line">cd MACS2-2.1.1.20160309</span><br><span class="line">python setup.py install --user </span><br><span class="line">#error CRITICAL:Numpy must be installed!</span><br><span class="line">pip install numpy # python 2.7存在问题</span><br><span class="line">~/.local/bin/macs2 --help #未安装成功</span><br></pre></td></tr></table></figure></p></blockquote><p>###bed下载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl &apos;https://genome.ucsc.edu/cgi-bin/hgTables?hgsid=603641571_MKLxB78UAcjaI3oj5YiFCA0Ms86o&amp;boolshad.hgta_printCustomTrackHeaders=0&amp;hgta_ctName=tb_refGene&amp;hgta_ctDesc=table+browser+query+on+refGene&amp;hgta_ctVis=pack&amp;hgta_ctUrl=&amp;fbQual=whole&amp;fbUpBases=200&amp;fbExonBases=0&amp;fbIntronBases=0&amp;fbDownBases=200&amp;hgta_doGetBed=get+BED&apos; &gt; mm10_refSeq.bed</span><br></pre></td></tr></table></figure></p><p>###分析过程 bowtie索引下载要注意，重新下载解压后未报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">for x in $(seq 4 9);do ascp -T -l 200M -i ~/.aspera/connect/etc/asperaweb_id_dsa.openssh --host=ftp-private.ncbi.nlm.nih.gov --user=anonftp --mode=recv /sra/sra-instant/reads/ByStudy/sra/SRP/SRP017/SRP017311/SRR62020&quot;$x&quot;/SRR62020&quot;$x&quot;.sra . ;done</span><br><span class="line">for i in `seq 4 9`;do fastq-dump --gzip --split-3 -A SRR62020$&#123;i&#125;.sra;done</span><br><span class="line">mkdir fastqc_out</span><br><span class="line">fastqc -o fastqc_out --extract *.fastq.gz</span><br><span class="line">ls *.fastq.gz |while read id;do (bowtie2 -p 6 -3 5 --local -x /home/tingm/refdata/biotree_refdata/bowtie2_index/mm10/mm10 -U $&#123;id&#125;| /home/tingm/software/samtools-1.3.1/samtools sort -O bam -o $&#123;id%%.*&#125;.bam);done</span><br></pre></td></tr></table></figure></p><p><img src="http://upload-images.jianshu.io/upload_images/2116382-799435398bc98a86.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="sra"></p><p><img src="http://upload-images.jianshu.io/upload_images/2116382-1a1409af497bbe9f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="fastq.gz"></p><p>###peaking calling<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">macs2 callpeak -c IgGold.bam -t suz12.bam -m 10 30 -p 1e-5 -f BAM -g mm -n suz12 2&gt;suz12.masc2.log</span><br><span class="line">macs2 callpeak -c IgGold.bam -t ring1B.bam -m 10 30 -p 1e-5 -f BAM -g mm -n ring1B 2&gt;ring1B.masc2.log</span><br><span class="line">macs2 callpeak -c IgG.bam -t cbx7.bam -m 10 30 -p 1e-5 -f BAM -g mm -n cbx7 2&gt;cbx7.masc2.log</span><br><span class="line">macs2 callpeak -c IgG.bam -t RYBP.bam -m 10 30 -p 1e-5 -f BAM -g mm -n RYBP 2&gt;RYBP.masc2.log</span><br></pre></td></tr></table></figure></p><p><img src="http://upload-images.jianshu.io/upload_images/2116382-653ad38751fdd141.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="bed 比参考资料大很多原因？"></p><p>####bam转换成bw文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ls *.bam | while read id</span><br><span class="line">do</span><br><span class="line">file=$(basename $id )</span><br><span class="line">sample=$&#123;file%%.*&#125;</span><br><span class="line">echo $sample</span><br><span class="line">/home/tingm/software/samtools-1.3.1/samtools index $id $id.bai</span><br><span class="line">~/.local/bin/bamCoverage -b $id -o $sample.bw ## 这里有个参数，-p 10 --normalizeUsingRPKM</span><br><span class="line">~/.local/bin/computeMatrix reference-point --referencePoint TSS -b 10000 -a 10000 -R /home/tingm/refdata/biotree_refdata/bowtie2_index/mm10_refSeq.bed -S $sample.bw --skipZeros -o matrix1_$&#123;sample&#125;_TSS.gz --outFileSortedRegions regions1_$&#123;sample&#125;_genes.bed</span><br><span class="line">~/.local/bin/plotHeatmap -m matrix1_$&#123;sample&#125;_TSS.gz -out $&#123;sample&#125;.png</span><br><span class="line">done</span><br></pre></td></tr></table></figure></p><p><img src="http://upload-images.jianshu.io/upload_images/2116382-d600963c06989821.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="bw"></p><p>####画基因的TSS附近的和genebody附近的profile和heatmap图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">~/.local/bin/computeMatrix reference-point -p 10 --referencePoint TSS -b 2000 -a 2000 -S *bw -R /home/tingm/refdata/biotree_refdata/bowtie2_index/mm10_refSeq.bed --skipZeros -o tmp4.mat.gz</span><br><span class="line">~/.local/bin/plotHeatmap -m tmp4.mat.gz -out tmp4.merge.png</span><br><span class="line">~/.local/bin/plotProfile --dpi 720 -m tmp4.mat.gz -out tmp4.profile.pdf --plotFileFormat pdf --perGroup</span><br><span class="line">~/.local/bin/plotHeatmap --dpi 720 -m tmp4.mat.gz -out tmp4.merge.pdf --plotFileFormat pdf</span><br><span class="line">修改了bed文件地址</span><br><span class="line">~/.local/bin/computeMatrix scale-regions -p 6 -S *bw -R /home/tingm/my_refdata/biotree_refdata/bowtie2_index/mm10_refSeq.bed -b 3000 -a 3000 -m 5000 --skipZeros -o tmp5.mat.gz</span><br><span class="line">~/.local/bin/plotHeatmap -m tmp5.mat.gz -out tmp5.merge.png</span><br><span class="line">~/.local/bin/plotProfile --dpi 720 -m tmp5.mat.gz -out tmp5.profile.pdf --plotFileFormat pdf --perGroup</span><br><span class="line">~/.local/bin/plotHeatmap --dpi 720 -m tmp5.mat.gz -out tmp5.merge.pdf --plotFileFormat pdf</span><br></pre></td></tr></table></figure></p><p><img src="http://upload-images.jianshu.io/upload_images/2116382-31b32871a5651511.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="profile"></p><p><img src="http://upload-images.jianshu.io/upload_images/2116382-197a1c9d806d58ae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="tmp4.merge.png"></p><p><img src="http://upload-images.jianshu.io/upload_images/2116382-cac3a547fc9a9b63.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="profile"></p><p><img src="http://upload-images.jianshu.io/upload_images/2116382-002424d613ddd9a1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="tmp5.merge.png"></p><blockquote><p><a href="https://my.oschina.net/vaero/blog/210486" target="_blank" rel="noopener">CentOS升级Python2.7及安装pip</a><br><a href="https://mp.weixin.qq.com/s/iHnogzM6QSu8tlImE26_Wg" target="_blank" rel="noopener">一文学会ChIP-Seq数据分析（想想也不可能）</a><br><a href="https://mp.weixin.qq.com/s/_A0rHldzEgVk7bgwt457qQ" target="_blank" rel="noopener">ChIP-seq实战分析</a><br><a href="https://mp.weixin.qq.com/s/SK6GVqSTAwZCirMP1GlRHQ" target="_blank" rel="noopener">生物信息学常见1000个软件的安装代码！</a><br><a href="http://www.biotrainee.com/thread-2013-1-1.html" target="_blank" rel="noopener">ChIP-seq基础入门传送门</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> seq实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bioinformatics </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>一个RNA-seq实战</title>
      <link href="/2017/08/28/seq%E5%AE%9E%E6%88%98/%E4%B8%80%E4%B8%AARNA-seq%E5%AE%9E%E6%88%98/"/>
      <url>/2017/08/28/seq%E5%AE%9E%E6%88%98/%E4%B8%80%E4%B8%AARNA-seq%E5%AE%9E%E6%88%98/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#! usr/bin/bash</span><br><span class="line">set -u</span><br><span class="line">set -e</span><br><span class="line">set -o pipefail</span><br><span class="line">hg19_ref=~/fastq/hisat2_index/hg19/genome</span><br><span class="line">for x in `seq 677 680`;do ascp -T -l 200M -i ~/.aspera/connect/etc/asperaweb_id_dsa.openssh --host=ftp-private.ncbi.nlm.nih.gov --user=anonftp --mode=recv /sra/sra-instant/reads/ByStudy/sra/SRP/SRP029/SRP029245/SRR957&quot;$x&quot;/SRR957&quot;$x&quot;.sra .;done</span><br><span class="line">##ls *sra |while read id; do fastq-dump --split-3 $id;done</span><br><span class="line">ls *sra |while read id; do fastq-dump --gzip --split-3 -A $id ;done</span><br><span class="line">## ls *fastq |xargs fastqc -t 10</span><br><span class="line">ls *.fastq.gz|while read id;do(hisat2 -t -p 5 -x $hg19_ref -U $id 2&gt;$&#123;id%%.*&#125;.map.log | /home/tingm/software/samtools-1.3.1/samtools view -Sb  - &gt;$&#123;id%%.*&#125;.bam);done</span><br><span class="line">ls *.bam|while read id;do /home/tingm/software/samtools-1.3.1/samtools sort -n -@ 5 $id -o $&#123;id%%.*&#125;.Nsorted.bam;done</span><br><span class="line">ls *.Nsorted.bam |while read id;do htseq-count -f bam -s no -i gene_name $id ~/fastq/refdata/Genecode/gencode.v26lift37.annotation.gff3 1&gt;$&#123;id%%.*&#125;.geneCounts 2&gt;$&#123;id%%.*&#125;.HTseq.log;done</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/2116382-ef5cc558fa035ea6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="sra"></p><p><img src="http://upload-images.jianshu.io/upload_images/2116382-ae125a7bba77e247.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="gz"></p><p><img src="http://upload-images.jianshu.io/upload_images/2116382-4686ec7c0e85f6d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="map.log"></p><p><img src="http://upload-images.jianshu.io/upload_images/2116382-f6963429b31bd0dd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="bam Nsort.bam"></p><p><img src="http://upload-images.jianshu.io/upload_images/2116382-db82a63d605483a7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="genecounts"></p><p><img src="http://upload-images.jianshu.io/upload_images/2116382-bcf87ea38bdef212.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="genecounts"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">#download deseq</span><br><span class="line">source(&quot;http://bioconductor.org/biocLite.R&quot;)</span><br><span class="line">biocLite(&quot;DESeq&quot;)</span><br><span class="line">#载入R示范数据</span><br><span class="line">biocLite(&quot;pasilla&quot;)</span><br><span class="line">#查看r下载位置</span><br><span class="line">.libPaths()</span><br><span class="line">#转到pasilla下载位置</span><br><span class="line">setwd(&quot;/home/tingm/R/x86_64-pc-linux-gnu-library/3.2/pasilla/&quot;)</span><br><span class="line">#设置路径</span><br><span class="line">datafile =system.file(&quot;extdata/pasilla_gene_counts.tsv&quot;,package=&quot;pasilla&quot;)                                              </span><br><span class="line">#读入数据</span><br><span class="line">pasillaCounttable=read.table(datafile,header=TRUE,row.names=1)  </span><br><span class="line">dim(pasillaCounttable)      </span><br><span class="line">#差异分析</span><br><span class="line">pasillaDesign = data.frame(row.names = colnames(pasillaCounttable),condition = c(&quot;untreated&quot;,&quot;untreated&quot;,&quot;untreated&quot;,&quot;untreated&quot;,&quot;treated&quot;,&quot;treated&quot;,&quot;treated&quot;),libType = c(&quot;single-end&quot;,&quot;single-end&quot;,&quot;paired-end&quot;,&quot;paired-end&quot;,&quot;single-end&quot;,&quot;paired-end&quot;,&quot;paired-end&quot;)) </span><br><span class="line">de = newCountDataSet(pasillaCounttable,pasillaDesign[,1]) </span><br><span class="line">de=estimateSizeFactors(de)</span><br><span class="line">de=estimateDispersions(de)</span><br><span class="line">#res是表达量检测结果</span><br><span class="line">res=nbinomTest(de,&quot;untreated&quot;,&quot;treated&quot;)</span><br><span class="line">uniq=na.omit(res)</span><br><span class="line">#输出差异显著值</span><br><span class="line">sum(na.omit(res$padj&lt;0.05))</span><br><span class="line">#输出表格</span><br><span class="line">write.table(res,file=&quot;file.csv&quot;,sep=&quot;,&quot;)</span><br><span class="line"></span><br><span class="line">#数据分析代码</span><br><span class="line">library(DESeq)</span><br><span class="line">C1=read.table(&quot;control_1.geneCounts&quot;,row.names=1)</span><br><span class="line">C2=read.table(&quot;control_2.geneCounts&quot;,row.names=1)</span><br><span class="line">S1=read.table(&quot;siSUZ12_1.geneCounts&quot;,row.names=1)</span><br><span class="line">S2=read.table(&quot;siSUZ12_2.geneCounts&quot;,row.names=1)</span><br><span class="line">data=cbind(C1,C2,S1,S2)</span><br><span class="line">n=nrow(data)</span><br><span class="line">#删除后四行</span><br><span class="line">data&lt;-data[-c(58523:58527),]</span><br><span class="line">#差异分析</span><br><span class="line">colnames(data)=c(&quot;C1&quot;,&quot;C2&quot;,&quot;S1&quot;,&quot;S2&quot;)</span><br><span class="line">type=rep(c(&quot;C&quot;,&quot;S&quot;),c(2,2))</span><br><span class="line">de=newCountDataSet(data,type)</span><br><span class="line">de=estimateSizeFactors(de)#locfunc = genefilter :: shorth数据集中0太多</span><br><span class="line">de=estimateDispersions(de)</span><br><span class="line">res=nbinomTest(de,&quot;C&quot;,&quot;S&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># DESeq2 </span><br><span class="line">source(&quot;http://bioconductor.org/biocLite.R&quot;)</span><br><span class="line">biocLite(&quot;DESeq2&quot;)</span><br><span class="line">library(DESeq2)</span><br><span class="line">biocLite(&quot;limma&quot;)</span><br><span class="line">library(limma)</span><br><span class="line">library(pasilla)</span><br><span class="line">data(pasillaGenes)</span><br><span class="line">exprSet=counts(pasillaGenes)  ##做好表达矩阵</span><br><span class="line">group_list=pasillaGenes$condition##做好分组因子即可</span><br><span class="line">colData &lt;- data.frame(row.names=colnames(exprSet), group_list=group_list)</span><br><span class="line">dds &lt;- DESeqDataSetFromMatrix(countData = exprSet,</span><br><span class="line">colData = colData,design = ~ group_list)</span><br><span class="line">dds2 &lt;- DESeq(dds)  ##第二步，直接用DESeq函数即可</span><br><span class="line">resultsNames(dds2)</span><br><span class="line">res &lt;-  results(dds2, contrast=c(&quot;group_list&quot;,&quot;treated&quot;,&quot;untreated&quot;))</span><br><span class="line">## 提取你想要的差异分析结果，我们这里是treated组对untreated组进行比较</span><br><span class="line">resOrdered &lt;- res[order(res$padj),]</span><br><span class="line">resOrdered=as.data.frame(resOrdered)</span><br><span class="line"></span><br><span class="line">#实战数据分析</span><br><span class="line">source(&quot;http://bioconductor.org/biocLite.R&quot;)</span><br><span class="line">biocLite(&quot;org.Hs.eg.db&quot;)</span><br><span class="line">library(org.Hs.eg.db)</span><br><span class="line">keytypes(org.Hs.eg.db)</span><br><span class="line">tmp=select(org.Hs.eg.db,keys=res$id,columns=c(&quot;SYMBOL&quot;,&quot;ENTREZID&quot;,&quot;GENENAME&quot;,&quot;ENSEMBL&quot;), keytype=&quot;SYMBOL&quot;)</span><br><span class="line">#合并res和tmp</span><br><span class="line">res=merge(tmp,res,by.x=&quot;SYMBOL&quot;,by.y=&quot;id&quot;,all=TRUE)</span><br><span class="line">#go</span><br><span class="line">tmp=select(org.Hs.eg.db, keys=res$ENSEMBL, columns=&quot;GO&quot;, keytype=&quot;ENSEMBL&quot;)</span><br><span class="line">ensembl_go=unlist(tapply(tmp[,2],as.factor(tmp[,1]),function(x) paste(x,collapse =&quot;|&quot;),simplify =F))</span><br><span class="line">#为res加入go注释，</span><br><span class="line">res$go=ensembl_go[res$ENSEMBL]#为res加入一列go</span><br><span class="line">#写入all——data</span><br><span class="line">all_res=res</span><br><span class="line">write.csv(res,file=&quot;all_data.csv&quot;,row.names =F)</span><br><span class="line">uniq=na.omit(res)#删除无效基因</span><br><span class="line">sort_uniq=uniq[order(uniq$padj),]#按照矫正p值排序</span><br><span class="line">#写入排序后的all_data</span><br><span class="line">write.csv(res,file=&quot;all_data.csv&quot;,row.names =F)</span><br><span class="line">#标记上下调基因</span><br><span class="line">sort_uniq$up_down=ifelse(sort_uniq$baseMeanA&gt;sort_uniq$baseMeanB,&quot;up&quot;,&quot;down&quot;)</span><br><span class="line">#交换上下调基因列位置</span><br><span class="line">final_res=sort_uniq[,c(12,1:11)]</span><br><span class="line">#写出最后数据</span><br><span class="line">write.csv(final_res,file=&quot;final_annotation_gene_bedtools_sort_uniq.csv&quot;,row.names =F)</span><br><span class="line">#然后挑选出padj值小于0.05的数据来做富集</span><br><span class="line">tmp=select(org.Hs.eg.db, keys=sort_uniq[sort_uniq$padj&lt;0.05,1], columns=&quot;ENTREZID&quot;, keytype=&quot;SYMBOL&quot;)</span><br><span class="line">diff_ENTREZID=tmp$ENTREZID</span><br><span class="line">diff_SYMBOL=tmp$SYMBOL</span><br><span class="line">source(&quot;http://bioconductor.org/biocLite.R&quot;)</span><br><span class="line">biocLite(&quot;DOSE&quot;)</span><br><span class="line">biocLite(&quot;clusterProfiler&quot;)</span><br><span class="line">require(DOSE)</span><br><span class="line">require(clusterProfiler)</span><br><span class="line">diff_ENTREZID=na.omit(diff_ENTREZID)</span><br><span class="line">diff_SYMBOL=na.omit(diff_SYMBOL)</span><br><span class="line">ego &lt;-enrichGO(gene=diff_ENTREZID,OrgDb=org.Hs.eg.db,ont=&quot;CC&quot;,pvalueCutoff=0.05)  ##error</span><br><span class="line">ekk &lt;- enrichKEGG(gene=diff_ENTREZID,organism = &apos;hsa&apos;,pvalueCutoff = 0.05)</span><br><span class="line">write.csv(summary(ekk),&quot;KEGG-enrich.csv&quot;,row.names =F)</span><br><span class="line">write.csv(summary(ego),&quot;GO-enrich.csv&quot;,row.names =F)</span><br></pre></td></tr></table></figure><p>###goenrich有错误 后续差异分析如何进行得到的结果？</p><p><img src="http://upload-images.jianshu.io/upload_images/2116382-5b18f8068dc254cb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><blockquote><p>R语言DESeq找差异基因 <a href="http://www.bio-info-trainee.com/741.html" target="_blank" rel="noopener">http://www.bio-info-trainee.com/741.html</a><br>用DESeq进行差异分析的源代码 <a href="http://www.bio-info-trainee.com/867.html" target="_blank" rel="noopener">http://www.bio-info-trainee.com/867.html</a><br>用R语言的DESeq2包来对RNA-seq数据做差异分析 <a href="http://www.bio-info-trainee.com/1533.html#more-1533" target="_blank" rel="noopener">http://www.bio-info-trainee.com/1533.html#more-1533</a><br>Bioconductor annotation packages <a href="https://davetang.org/muse/2013/12/16/bioconductor-annotation-packages/" target="_blank" rel="noopener">https://davetang.org/muse/2013/12/16/bioconductor-annotation-packages/</a><br>clusterProfiler <a href="https://bioconductor.org/packages/release/bioc/vignettes/clusterProfiler/inst/doc/clusterProfiler.html" target="_blank" rel="noopener">https://bioconductor.org/packages/release/bioc/vignettes/clusterProfiler/inst/doc/clusterProfiler.html</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> seq实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bioinformatics </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>转录组入门——8</title>
      <link href="/2017/08/23/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8%E2%80%94%E2%80%948/"/>
      <url>/2017/08/23/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8%E2%80%94%E2%80%948/</url>
      <content type="html"><![CDATA[<blockquote><p>选择p&lt;0.05而且abs(logFC)大于一个与众的基因为显著差异表达基因集，对这个基因集用R包做KEGG/GO超几何分布检验分析。<br>然后把表达矩阵和分组信息分别作出cls和gct文件，导入到GSEA软件分析。<br>基本任务是完成这个分析。</p></blockquote><h5 id="GO-KEGG分析-clusterProfiler"><a href="#GO-KEGG分析-clusterProfiler" class="headerlink" title="GO/KEGG分析 clusterProfiler"></a>GO/KEGG分析 clusterProfiler</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">source(&quot;http://bioconductor.org/biocLite.R&quot;)</span><br><span class="line">biocLite(&quot;DOSE&quot;)</span><br><span class="line">require(DOSE)</span><br><span class="line">require(clusterProfiler)</span><br><span class="line">library(org.Mm.eg.db)</span><br><span class="line"></span><br><span class="line">##去除ID的版本号</span><br><span class="line">diff_gene_ENSEMBL &lt;- unlist(lapply(diff_gene, function(x)&#123;strsplit(x, &quot;\\.&quot;)[[1]][1]&#125;))</span><br><span class="line">##GOid mapping + GO富集</span><br><span class="line">## R版本 在服务器上R 无法使用</span><br><span class="line">ego &lt;- enrichGO(gene = diff_gene_ENSEMBL, OrgDb = org.Mm.eg.db,</span><br><span class="line">                                keytype = &quot;ENSEMBL&quot;, ont = &quot;BP&quot;, pAdjustMethod = &quot;BH&quot;,</span><br><span class="line">                                pvalueCutoff = 0.01, qvalueCutoff = 0.05)</span><br><span class="line">##查看富集结果数据</span><br><span class="line">enrich_go &lt;- as.data.frame(ego)</span><br><span class="line">##作图</span><br><span class="line">barplot(ego, showCategory=10)</span><br><span class="line">dotplot(ego)</span><br><span class="line">enrichMap(ego)</span><br><span class="line">plotGOgraph(ego)</span><br><span class="line"></span><br><span class="line">##ID转化</span><br><span class="line">ids &lt;- bitr(diff_gene_ENSEMBL, fromType = &quot;ENSEMBL&quot;, toType = &quot;ENTREZID&quot;, OrgDb = &quot;org.Mm.eg.db&quot;)</span><br><span class="line">kk &lt;- enrichKEGG(gene = ids[,2], organism = &quot;mmu&quot;, keyType = &quot;kegg&quot;,pvalueCutoff = 0.05, pAdjustMethod = &quot;BH&quot;, qvalueCutoff = 0.1)</span><br><span class="line">##查看富集结果数据</span><br><span class="line">enrich_kegg &lt;- as.data.frame(kk)</span><br><span class="line">##作图</span><br><span class="line">dotplot(kk)</span><br></pre></td></tr></table></figure><h5 id="GSEA"><a href="#GSEA" class="headerlink" title="GSEA"></a>GSEA</h5><blockquote><p>基因集富集分析 (Gene Set Enrichment Analysis, GSEA) 的基本思想是使用预定义的基因集（通常来自功能注释或先前实验的结果），将基因按照在两类样本中的差异表达程度排序，然后检验预先设定的基因集合是否在这个排序表的顶端或者底端富集。基因集合富集分析检测基因集合而不是单个基因的表达变化，因此可以包含这些细微的表达变化，预期得到更为理想的结果。</p></blockquote><h5 id="Gene-Set-Enrichment-Analysis（GSEA）"><a href="#Gene-Set-Enrichment-Analysis（GSEA）" class="headerlink" title="Gene Set Enrichment Analysis（GSEA）"></a>Gene Set Enrichment Analysis（GSEA）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">diff_gene_DESeq2 &lt;- subset(res, padj &lt; 0.05 &amp; (log2FoldChange &gt; 1 | log2FoldChange &lt; -1))</span><br><span class="line">diff_gene_ENSEMBL &lt;- unlist(lapply(rownames(diff_gene_DESeq2), function(x)&#123;strsplit(x, &quot;\\.&quot;)[[1]][1]&#125;))</span><br><span class="line">rownames(diff_gene_DESeq2) &lt;- diff_gene_ENSEMBL</span><br><span class="line">diff_gene_ENTREZID &lt;- select(org.Mm.eg.db,keys = diff_gene_ENSEMBL,columns =&quot;ENTREZID&quot;,keytype = &quot;ENSEMBL&quot;)</span><br><span class="line">diff_gene_DESeq2$ENTREZID &lt;- diff_gene_ENTREZID[,2]</span><br><span class="line"># 获取按照log2FC大小来排序的基因列表</span><br><span class="line">genelist &lt;- diff_gene_DESeq2$log2FoldChange</span><br><span class="line">names(genelist) &lt;- diff_gene_DESeq2$ENTREZID</span><br><span class="line">genelist &lt;- sort(genelist, decreasing = TRUE)</span><br><span class="line"># GSEA分析（具体参数参考：https://mp.weixin.qq.com/s/p-n5jq5Rx2TqDBStS2nzoQ）</span><br><span class="line">gsemf &lt;- gseGO(genelist,OrgDb = org.Mm.eg.db,ont=&quot;MF&quot;)</span><br><span class="line"># 查看大致信息</span><br><span class="line">head(gsemf)</span><br><span class="line"># 画出GSEA图</span><br><span class="line">gseaplot(gsemf, geneSetID=&quot;GO:0000977&quot;)</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/2116382-d045f82c5453691f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="go"></p><blockquote><p><a href="http://www.biotrainee.com/thread-2018-1-1.html" target="_blank" rel="noopener">转录组入门（7-8）从差异基因到富集分析</a><br><a href="https://mp.weixin.qq.com/s/p-n5jq5Rx2TqDBStS2nzoQ" target="_blank" rel="noopener">从零开始学转录组（8）：富集分析</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> 转录组入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bioinformatics </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>转录组入门——7</title>
      <link href="/2017/08/21/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8%E2%80%94%E2%80%947/"/>
      <url>/2017/08/21/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8%E2%80%94%E2%80%947/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">.libPaths(&quot;/home/tingm/R/x86_64-pc-linux-gnu-library/3.2&quot;)</span><br><span class="line">  library(limma)</span><br><span class="line">  library(edgeR)</span><br><span class="line">  library(DESeq2)</span><br><span class="line">    #change</span><br><span class="line">    path&lt;-&quot;/home/tingm/fastq/mus_result_count/&quot;</span><br><span class="line">    #change</span><br><span class="line">      samples&lt;-read.table(&quot;samples.list.txt&quot;,header=F,sep=&quot;\t&quot;)</span><br><span class="line">      samples&lt;-samples[,1]</span><br><span class="line">      #change</span><br><span class="line">      data.raw&lt;-read.table(&quot;Mus_SRR3589959.sgeneCounts&quot;,header=F,sep=&quot;\t&quot;,col.names = c(&quot;gene_id&quot;,&quot;Mus_SRR3589959.sgeneCounts&quot;))</span><br><span class="line">      for(sample in samples)</span><br><span class="line">      &#123;</span><br><span class="line">        print(sample)</span><br><span class="line">        file&lt;-paste(path,sample,sep=&quot;&quot;)</span><br><span class="line">        data.new&lt;-read.table(file,header=F,sep=&quot;\t&quot;,col.names = c(&quot;gene_id&quot;,sample))</span><br><span class="line">        data.raw&lt;-merge(data.new,data.raw,by=&quot;gene_id&quot;)</span><br><span class="line">      &#125;</span><br><span class="line">     data.raw&lt;-data.raw[-1:-5,]</span><br><span class="line">        #change</span><br><span class="line">     names(data.raw) &lt;- c(&quot;gene_id&quot;,&quot;Akap95_2&quot;,&quot;control_2&quot;,&quot;Akap95_1&quot;,&quot;control_1&quot;)</span><br><span class="line">     write.table(data.raw,&quot;count.matix.csv&quot;,row.names=F,quote=F)</span><br></pre></td></tr></table></figure><h5 id="使用DESeq2进行差异基因分析-筛选出基因数目不一样"><a href="#使用DESeq2进行差异基因分析-筛选出基因数目不一样" class="headerlink" title="使用DESeq2进行差异基因分析 筛选出基因数目不一样"></a>使用DESeq2进行差异基因分析 筛选出基因数目不一样</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">##数据预处理</span><br><span class="line">database &lt;- read.table(file = &quot;count.matix.csv&quot;, sep = &quot; &quot;, header = T,row.names = 1)</span><br><span class="line">database &lt;- round(as.matrix(database))</span><br><span class="line">##设置分组信息并构建dds对象</span><br><span class="line">condition &lt;- factor(c(&quot;Akap95&quot;,&quot;control&quot;,&quot;Akap95&quot;,&quot;control&quot;), levels = c(&quot;control&quot;, &quot;Akap95&quot;))</span><br><span class="line">coldata &lt;- data.frame(row.names = colnames(database), condition)</span><br><span class="line">dds &lt;- DESeqDataSetFromMatrix(countData=database, colData=coldata, design=~condition)</span><br><span class="line">dds &lt;- dds[ rowSums(counts(dds)) &gt; 1, ]</span><br><span class="line">##使用DESeq函数估计离散度，然后差异分析获得res对象</span><br><span class="line">dds &lt;- DESeq(dds)</span><br><span class="line">res &lt;- results(dds)</span><br><span class="line">#summary(res)</span><br><span class="line">#最后设定阈值，筛选差异基因，导出数据(全部数据。包括标准化后的count数)</span><br><span class="line">res &lt;- res[order(res$padj),]</span><br><span class="line">diff_gene_DESeq2 &lt;- subset(res, padj &lt; 0.05 &amp; (log2FoldChange &gt; 1 | log2FoldChange &lt; -1))</span><br><span class="line">diff_gene_DESeq2 &lt;- row.names(diff_gene_DESeq2)</span><br><span class="line">resdata &lt;- merge(as.data.frame(res), as.data.frame(counts(dds, normalized=TRUE)),by=&quot;row.names&quot;,sort=FALSE)</span><br><span class="line">write.csv(resdata,file = &quot;control_vs_Akap95.csv&quot;,row.names = F)</span><br></pre></td></tr></table></figure><h5 id="使用edgeR进行差异基因分析"><a href="#使用edgeR进行差异基因分析" class="headerlink" title="使用edgeR进行差异基因分析"></a>使用edgeR进行差异基因分析</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">##跟DESeq2一样，导入数据，预处理（用了cpm函数）</span><br><span class="line">exprSet&lt;- read.table(file = &quot;count.matix.csv&quot;, sep = &quot; &quot;, header = TRUE, row.names = 1, stringsAsFactors = FALSE)</span><br><span class="line">group_list &lt;- factor(c(&quot;Akap95&quot;,&quot;control&quot;,&quot;Akap95&quot;,&quot;control&quot;), levels = c(&quot;control&quot;, &quot;Akap95&quot;))</span><br><span class="line">exprSet &lt;- exprSet[rowSums(cpm(exprSet) &gt; 1) &gt;= 2,]</span><br><span class="line">##设置分组信息，并做TMM标准化</span><br><span class="line">exprSet &lt;- DGEList(counts = exprSet, group = group_list)</span><br><span class="line">exprSet &lt;- calcNormFactors(exprSet)</span><br><span class="line">##使用qCML（quantile-adjusted conditional maximum likelihood）估计离散度（只针对单因素实验设计）</span><br><span class="line">exprSet &lt;- estimateCommonDisp(exprSet)</span><br><span class="line">exprSet &lt;- estimateTagwiseDisp(exprSet)</span><br><span class="line">##寻找差异gene(这里的exactTest函数还是基于qCML并且只针对单因素实验设计)，然后按照阈值进行筛选即可</span><br><span class="line">et &lt;- exactTest(exprSet)</span><br><span class="line">tTag &lt;- topTags(et, n=nrow(exprSet))</span><br><span class="line">diff_gene_edgeR &lt;- subset(tTag$table, FDR &lt; 0.05 &amp; (logFC &gt; 1 | logFC &lt; -1))</span><br><span class="line">diff_gene_edgeR &lt;- row.names(diff_gene_edgeR)</span><br><span class="line">write.csv(tTag$table,file = &quot;control_vs_Akap95_edgeR.csv&quot;)</span><br></pre></td></tr></table></figure><h5 id="使用limma进行差异分析-limma的voom流程"><a href="#使用limma进行差异分析-limma的voom流程" class="headerlink" title="使用limma进行差异分析   limma的voom流程"></a>使用limma进行差异分析   limma的voom流程</h5><p>待续</p><h5 id="不同软件包分析结果比较"><a href="#不同软件包分析结果比较" class="headerlink" title="不同软件包分析结果比较"></a>不同软件包分析结果比较</h5><p>待续</p><blockquote><p><a href="http://www.jianshu.com/p/3bfb21d24b74" target="_blank" rel="noopener">转录组入门（7）：差异基因分析</a><br><a href="https://mp.weixin.qq.com/s/1mda7NpOxShbOxZKSJar7Q" target="_blank" rel="noopener">从零开始学转录组（7）：差异基因表达分析</a><br><a href="http://www.biotrainee.com/thread-2018-1-1.html" target="_blank" rel="noopener">转录组入门（7-8）从差异基因到富集分析</a><br><a href="http://www.agctu.org/question/179" target="_blank" rel="noopener">为什么RNA-seq的read数服从泊松分布？</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> 转录组入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bioinformatics </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>转录组入门——6</title>
      <link href="/2017/08/15/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8%E2%80%94%E2%80%946/"/>
      <url>/2017/08/15/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8%E2%80%94%E2%80%946/</url>
      <content type="html"><![CDATA[<h5 id="实现reads计数的软件教程"><a href="#实现reads计数的软件教程" class="headerlink" title="实现reads计数的软件教程"></a>实现reads计数的软件教程</h5><blockquote><p>map后获得了每条read比对到基因组上的位置，后面需要把基因组的位置对应到基因。这个提供基因位置的注释文件通常以GTF或GFF3格式呈现。基因表达量最直接的分析手段就是计算比对到每个基因的reads有多少条，在转录组测序中，我们通常称这个数字为count<br>对每个基因计数之后得到的count matrix再后续的分析中，要注意标准化的问题。<br>比较同一个样本(within-sample)不同基因之间的表达情况，需要考虑到转录本长度，因为转录本越长，那么检测的片段也会更多。比较不同样本（across sample）同一个基因的表达情况，不必在意转录本长度，但要考虑到测序深度（sequence depth)，测序深度越高，检测到的概率越大。除这两因素外，还需考虑GC%导致的偏差及测序仪器的系统偏差。<br>目前对read count标准化的算法有RPKM（SE）, FPKM（PE），TPM, TMM等。但是，有一些下游分析的软件会要求是输入的count matrix是原始数据，未经标准化，比如说DESeq2，这个时候你需要注意你上一步所用软件会不会进行标准化。<br>计数分为三个水平： gene-level, transcript-level, exon-usage-level<br>标准化方法： FPKM RPKM TMM TPM</p></blockquote><h5 id="Gene-level"><a href="#Gene-level" class="headerlink" title="Gene-level"></a>Gene-level</h5><blockquote><p>HTSeq <a href="https://htseq.readthedocs.io/en/release_0.9.1/" target="_blank" rel="noopener">官方网址</a> <a href="http://www.chenlianfu.com/?p=2438" target="_blank" rel="noopener">中文教程</a><br>featureCounts <a href="http://bioinf.wehi.edu.au/featureCounts/" target="_blank" rel="noopener">官方网址</a> Rsubread <a href="https://bioconductor.org/packages/release/bioc/html/Rsubread.html" target="_blank" rel="noopener">官方网址</a><br>bedtools multicov <a href="https://bedtools.readthedocs.io/en/latest/" target="_blank" rel="noopener">官方网址</a> <a href="http://www.biotrainee.com/thread-153-1-1.html" target="_blank" rel="noopener">中文教程</a><br>Qualimap <a href="http://qualimap.bioinfo.cipf.es/" target="_blank" rel="noopener">官方网址</a> <a href="http://blog.sciencenet.cn/blog-2970729-1070459.html" target="_blank" rel="noopener">中文教程</a><br>GenomicRanges <a href="https://bioconductor.org/packages/release/bioc/html/GenomicRanges.html" target="_blank" rel="noopener">官方网址</a></p></blockquote><h5 id="Transcript-level"><a href="#Transcript-level" class="headerlink" title="Transcript-level"></a>Transcript-level</h5><blockquote><p>cufflink <a href="https://cole-trapnell-lab.github.io/cufflinks/" target="_blank" rel="noopener">官方网址</a> <a href="http://www.chenlianfu.com/?p=623" target="_blank" rel="noopener">中文教程</a><br>stringtie <a href="https://ccb.jhu.edu/software/stringtie/" target="_blank" rel="noopener">官方网址</a> <a href="http://www.bio-info-trainee.com/2073.html" target="_blank" rel="noopener">中文教程</a><br>上述软件都是alignment-based<br>alignment-free软件，如kallisto, silfish, salmon，能够省去比对这一步，直接得到read count，在运行效率上更高。不过最近一篇文献Gaining comprehensive biological insight into the transcriptome by performing a broad-spectrum RNA-seq analysis指出这类方法在估计丰度时存在样本特异性和读长偏差<br>salmon</p></blockquote><h5 id="Exon-usage-level"><a href="#Exon-usage-level" class="headerlink" title="Exon-usage-level"></a>Exon-usage-level</h5><blockquote><p>和基因水平的统计类似。但是值得注意的是为了更好的计数，我们需要提供无重叠的外显子区域的gtf文件Detecting differential usage of exons from RNA-seq data。用于分析差异外显子使用的DEXSeq提供了一个Python脚本（dexseq_prepare_annotation.py）执行这个任务。</p></blockquote><h5 id="基因表达量归一算法"><a href="#基因表达量归一算法" class="headerlink" title="基因表达量归一算法"></a>基因表达量归一算法</h5><p>待续 <a href="https://zhuanlan.zhihu.com/p/26750663" target="_blank" rel="noopener">参考</a></p><h5 id="htseq-count"><a href="#htseq-count" class="headerlink" title="htseq-count"></a>htseq-count</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls Homo*.Nsorted.bam|while read id;do(htseq-count -f bam -i gene_name -s no $id $hg19_gff &gt; $&#123;id%_*&#125;.geneCounts 2&gt; $&#123;id%_*&#125;.HTseq.log);done</span><br><span class="line">ls Mus*.Nsorted.bam|while read id;do(htseq-count -f bam -i gene_name -s no $id $mm10_gff &gt; $&#123;id%_*&#125;.geneCounts 2&gt; $&#123;id%_*&#125;.HTseq.log);done</span><br><span class="line">wc -l Homo*.geneCounts </span><br><span class="line">head -n 4 Homo*.geneCounts</span><br></pre></td></tr></table></figure><blockquote><p>-f bam/sam： 指定输入文件格式，默认SAM<br>-r name/pos: 你需要利用samtool sort对数据根据read name或者位置进行排序，默认是name<br>-s yes/no/reverse: 数据是否来自于strand-specific assay。DNA是双链的，所以需要判断到底来自于哪条链。如果选择了no， 那么每一条read都会跟正义链和反义链进行比较。默认的yes对于双端测序表示第一个read都在同一个链上，第二个read则在另一条链上。<br>-a 最低质量， 剔除低于阈值的read<br>-m 模式 union（默认）, intersection-strict and intersection-nonempty。一般而言就用默认的，作者也是这样认为的。<br>-i id attribute: 在GTF文件的最后一栏里，会有这个基因的多个命名方式（如下）， RNA-Seq数据分析常用的是gene_id， 当然你可以写一个脚本替换成其他命名方式。</p></blockquote><p><img src="http://upload-images.jianshu.io/upload_images/2116382-6aaf8956467c4fb6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="homo.genecounts"></p><h5 id="编写脚本合并所有的样本为表达矩阵"><a href="#编写脚本合并所有的样本为表达矩阵" class="headerlink" title="编写脚本合并所有的样本为表达矩阵"></a>编写脚本合并所有的样本为表达矩阵</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sed -i &apos;$d&apos; *geneCounts</span><br><span class="line">perl -lne &apos;if($ARGV=~/Homo_(.*).geneCounts/)&#123;print &quot;$1\t$_&quot;&#125;&apos; *|grep -v Homo_sapiens&gt;hg.count</span><br><span class="line">perl -lne &apos;if($ARGV=~/Mus_(.*).geneCounts/)&#123;print &quot;$1\t$_&quot;&#125;&apos; *|grep -v Mus &gt;mus.count</span><br><span class="line"></span><br><span class="line">hg &lt;- read.csv(file = &quot;hg.count&quot;,header = F,sep = &quot;\t&quot;)</span><br><span class="line">colnames(hg) &lt;- c(&apos;sample&apos;,&apos;gene&apos;,&apos;count&apos;)</span><br><span class="line">library(reshape2)</span><br><span class="line">hg_reads &lt;- dcast(hg,formula = gene ~ sample)</span><br><span class="line">write.table(hg_reads,file = &quot;hg_join.count&quot;,sep = &quot;\t&quot;,quote = FALSE,row.names = FALSE)</span><br><span class="line"></span><br><span class="line">mus &lt;- read.csv(file = &quot;mus.count&quot;,header = F,sep = &quot;\t&quot;)</span><br><span class="line">colnames(mus) &lt;- c(&apos;sample&apos;,&apos;gene&apos;,&apos;count&apos;)</span><br><span class="line">library(reshape2)</span><br><span class="line">mus_reads &lt;- dcast(mus,formula = gene ~ sample)</span><br><span class="line">write.table(mus_reads,file = &quot;mus_join.count&quot;,sep = &quot;\t&quot;,quote = FALSE,row.names = FALSE)</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/2116382-bf2396936c8bb516.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="homo_table"></p><h5 id="对表达矩阵可进行简单的探索"><a href="#对表达矩阵可进行简单的探索" class="headerlink" title="对表达矩阵可进行简单的探索"></a>对表达矩阵可进行简单的探索</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">summary(hg_reads) </span><br><span class="line">summary(mus_reads) </span><br><span class="line">row.names(hg_reads) &lt;- hg_reads$gene</span><br><span class="line">GAPDH &lt;- hg_reads[rownames(hg_reads)==&quot;GAPDH&quot;,]</span><br><span class="line"></span><br><span class="line">source(&quot;http://bioconductor.org/biocLite.R&quot;)</span><br><span class="line">biocLite(&quot;dplyr&quot;)</span><br><span class="line">library(dplyr)</span><br><span class="line">sample_mean &lt;- group_by(hg,sample)%&gt;% summarize(mean=mean(count))</span><br><span class="line">gene_mean &lt;- group_by(hg,gene)%&gt;% summarize(mean=mean(count)) </span><br><span class="line">tmp &lt;- full_join(hg,gene_mean,by=&apos;gene&apos;)</span><br><span class="line">write.table(tmp,file = &quot;tmp.count&quot;,sep = &quot;\t&quot;,quote = FALSE,row.names = FALSE)</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/2116382-3a0f908f6e1b3a5d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="summary"></p><p><img src="http://upload-images.jianshu.io/upload_images/2116382-79ab4164d01877a0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h5 id="另一种"><a href="#另一种" class="headerlink" title="另一种"></a>另一种</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">options(stringsAsFactors = FALSE)</span><br><span class="line">#导入数据</span><br><span class="line">homo_control &lt;- read.table(&quot;Homo_SRR3589956.geneCounts&quot;,sep=&quot;\t&quot;, col.names = c(&quot;gene_symbol&quot;,&quot;homo_control&quot;))</span><br><span class="line">homo_rep1 &lt;- read.table(&quot;Homo_SRR3589957.geneCounts&quot;,sep=&quot;\t&quot;, col.names = c(&quot;gene_symbol&quot;,&quot;homo_rep1&quot;))</span><br><span class="line">homo_rep2 &lt;- read.table(&quot;Homo_SRR3589958.geneCounts&quot;,sep=&quot;\t&quot;,col.names = c(&quot;gene_symbol&quot;,&quot;rep2&quot;))</span><br><span class="line">mus_control1 &lt;- read.table(&quot;Mus_SRR3589959.geneCounts&quot;, sep=&quot;\t&quot;, col.names = c(&quot;gene_symbol&quot;,&quot;mus_control1&quot;))</span><br><span class="line">mus_control2 &lt;- read.table(&quot;Mus_SRR3589960.geneCounts&quot;, sep=&quot;\t&quot;, col.names = c(&quot;gene_symbol&quot;,&quot;mus_control2&quot;)) </span><br><span class="line">mus_rep1 &lt;- read.table(&quot;Mus_SRR3589961.geneCounts&quot;, sep=&quot;\t&quot;, col.names = c(&quot;gene_symbol&quot;,&quot;mus_rep1&quot;)) </span><br><span class="line">mus_rep2 &lt;- read.table(&quot;Mus_SRR3589962.geneCounts&quot;, sep=&quot;\t&quot;,col.names = c(&quot;gene_symbol&quot;,&quot;mus_rep2&quot;))</span><br><span class="line">#去除后五行</span><br><span class="line">homo_control &lt;- homo_control[-58523:-58527,]</span><br><span class="line">homo_rep1 &lt;- homo_rep1[-58523:-58527,]</span><br><span class="line">homo_rep2 &lt;- homo_rep2[-58523:-58527,]</span><br><span class="line">mus_control1 &lt;- mus_control1[-48322:-48326,]</span><br><span class="line">mus_control2 &lt;- mus_control2[-48322:-48326,]</span><br><span class="line">mus_rep1 &lt;- mus_rep1[-48322:-48326,]</span><br><span class="line">mus_rep2 &lt;- mus_rep2[-48322:-48326,]</span><br><span class="line">#整合</span><br><span class="line">homo_raw_count &lt;- merge(merge(homo_control, homo_rep1, by=&quot;gene_symbol&quot;), homo_rep2, by=&quot;gene_symbol&quot;)</span><br><span class="line">mus_raw_count &lt;- merge(merge(mus_control1, mus_control2, by=&quot;gene_symbol&quot;), merge(mus_rep1,mus_rep2, by=&quot;gene_symbol&quot;))</span><br><span class="line">summary(homo_raw_count)</span><br><span class="line">summary(mus_raw_count)</span><br><span class="line">row.names(homo_raw_count) &lt;- homo_raw_count$gene_symbol</span><br><span class="line">row.names(mus_raw_count) &lt;- mus_raw_count$gene_symbol</span><br><span class="line">gapdh &lt;- homo_raw_count[rownames(homo_raw_count)==&quot;GAPDH&quot;,]</span><br><span class="line">gapdh &lt;- mus_raw_count[rownames(mus_raw_count)==&quot;GAPDH&quot;,]</span><br><span class="line"></span><br><span class="line">#因为我们无法在EBI数据库上直接搜索找到ENSMUSG00000024045.5这样的基因，只能是ENSMUSG00000024045的整数，没有小数点，所以需要进一步替换为整数的形式</span><br><span class="line">#第一步将匹配到的.以及后面的数字连续匹配并替换为空，并赋值给ENSEMBL</span><br><span class="line">#ENSEMBL &lt;- gsub(&quot;\\.\\d*&quot;, &quot;&quot;, raw_count_filt1$gene_id) </span><br><span class="line">#将ENSEMBL重新添加到raw_count_filt1矩阵</span><br><span class="line">#row.names(raw_count_filter) &lt;- ENSEMBL</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/2116382-8ee1f5c36ac2faa3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="gapdh"><br>以上两种都有两个问题：AKAP95未找到 小鼠第一列不是gene name<br>和sort是否为reads name无关，htseq count -i 参数去掉则默认为gene id</p><h5 id="看生物学意义特殊的基因表现如何如GAPDH-β-ACTIN"><a href="#看生物学意义特殊的基因表现如何如GAPDH-β-ACTIN" class="headerlink" title="看生物学意义特殊的基因表现如何如GAPDH,β-ACTIN"></a>看生物学意义特殊的基因表现如何如GAPDH,β-ACTIN</h5><p><img src="http://upload-images.jianshu.io/upload_images/2116382-e29d08dec77d3ec7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="gapdh"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#! usr/bin/bash</span><br><span class="line">set -u</span><br><span class="line">set -e</span><br><span class="line">set -o pipefail</span><br><span class="line">hg19_ref=~/fastq/hisat2_index/hg19/genome</span><br><span class="line">mm10_ref=~/fastq/hisat2_index/mm10/genome</span><br><span class="line">hg19_gff=~/fastq/refdata/Genecode/gencode.v26lift37.annotation.gff3</span><br><span class="line">mm10_gff=~/fastq/refdata/Genecode/gencode.vM10.annotation.gtf</span><br><span class="line">ls Homo*.sorted.bam|while read id;do(htseq-count -f bam -r pos -s no $id $hg19_gff &gt; $&#123;id%%.*&#125;.sgeneCounts 2&gt; $&#123;id%%.*&#125;.sHTseq.log);done</span><br><span class="line">ls Mus*.sorted.bam|while read id;do(htseq-count -f bam -r pos -s no $id $mm10_gff &gt; $&#123;id%%.*&#125;.sgeneCounts 2&gt; $&#123;id%%.*&#125;.sHTseq.log);done</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">options(stringsAsFactors = FALSE)</span><br><span class="line">homo_control &lt;- read.table(&quot;Homo_SRR3589956.sgeneCounts&quot;,sep=&quot;\t&quot;, col.names = c(&quot;gene_id&quot;,&quot;homo_control&quot;))</span><br><span class="line">homo_rep1 &lt;- read.table(&quot;Homo_SRR3589957.sgeneCounts&quot;,sep=&quot;\t&quot;, col.names = c(&quot;gene_id&quot;,&quot;homo_rep1&quot;))</span><br><span class="line">homo_rep2 &lt;- read.table(&quot;Homo_SRR3589958.sgeneCounts&quot;,sep=&quot;\t&quot;,col.names = c(&quot;gene_id&quot;,&quot;rep2&quot;))</span><br><span class="line">mus_control1 &lt;- read.table(&quot;Mus_SRR3589959.sgeneCounts&quot;, sep=&quot;\t&quot;, col.names = c(&quot;gene_id&quot;,&quot;mus_control1&quot;))</span><br><span class="line">mus_control2 &lt;- read.table(&quot;Mus_SRR3589960.sgeneCounts&quot;, sep=&quot;\t&quot;, col.names = c(&quot;gene_id&quot;,&quot;mus_control2&quot;)) </span><br><span class="line">mus_rep1 &lt;- read.table(&quot;Mus_SRR3589961.sgeneCounts&quot;, sep=&quot;\t&quot;, col.names = c(&quot;gene_id&quot;,&quot;mus_rep1&quot;)) </span><br><span class="line">mus_rep2 &lt;- read.table(&quot;Mus_SRR3589962.sgeneCounts&quot;, sep=&quot;\t&quot;,col.names = c(&quot;gene_id&quot;,&quot;mus_rep2&quot;))</span><br><span class="line">homo_control &lt;- homo_control[-60472:-60476,]</span><br><span class="line">homo_rep1 &lt;- homo_rep1[-60472:-60476,]</span><br><span class="line">homo_rep2 &lt;- homo_rep2[-60472:-60476,]</span><br><span class="line">mus_control1 &lt;- mus_control1[-48441:-48445,]</span><br><span class="line">mus_control2 &lt;- mus_control2[-48441:-48445,]</span><br><span class="line">mus_rep1 &lt;- mus_rep1[-48441:-48445,]</span><br><span class="line">mus_rep2 &lt;- mus_rep2[-48441:-48445,]</span><br><span class="line">homo_raw_count &lt;- merge(merge(homo_control, homo_rep1, by=&quot;gene_id&quot;), homo_rep2, by=&quot;gene_id&quot;)</span><br><span class="line">mus_raw_count &lt;- merge(merge(mus_control1, mus_control2, by=&quot;gene_id&quot;), merge(mus_rep1,mus_rep2, by=&quot;gene_id&quot;))</span><br><span class="line">ENSEMBL &lt;- gsub(&quot;\\.\\d*_\\d*&quot;, &quot;&quot;, homo_raw_count$gene_id)</span><br><span class="line">row.names(homo_raw_count) &lt;- ENSEMBL # error</span><br><span class="line">ENSEMBL &lt;- gsub(&quot;\\.\\d*&quot;, &quot;&quot;, mus_raw_count$gene_id) </span><br><span class="line">row.names(mus_raw_count) &lt;- ENSEMBL</span><br><span class="line">summary(homo_raw_count)</span><br><span class="line">summary(mus_raw_count)</span><br><span class="line">#在UniProt数据库找到AKAP95的id</span><br><span class="line">MUS_AKAP95 &lt;- mus_raw_count[rownames(mus_raw_count)==&quot;ENSMUSG00000024045&quot;,] #reads很大</span><br></pre></td></tr></table></figure><p>最开始未加 -r pos 有问题 reads数目不同，后续计数没有大问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">count.matrix&lt;-function()</span><br><span class="line">&#123;</span><br><span class="line">  .libPaths(&quot;/home/tingm/R/x86_64-pc-linux-gnu-library/3.2&quot;)</span><br><span class="line">  library(limma)</span><br><span class="line">  library(edgeR)</span><br><span class="line">    #change</span><br><span class="line">    path&lt;-&quot;/home/tingm/fastq/homo_result_count/&quot;</span><br><span class="line">    #change</span><br><span class="line">      samples&lt;-read.table(&quot;samples.list.txt&quot;,header=F,sep=&quot;\t&quot;)</span><br><span class="line">      samples&lt;-samples[,1]</span><br><span class="line">      #change</span><br><span class="line">      data.raw&lt;-read.table(&quot;Homo_SRR3589956.sgeneCounts&quot;,header=F,sep=&quot;\t&quot;,col.names = c(&quot;gene_id&quot;,&quot;Homo_SRR3589956.sgeneCounts&quot;))</span><br><span class="line">      for(sample in samples)</span><br><span class="line">      &#123;</span><br><span class="line">        print(sample)</span><br><span class="line">        file&lt;-paste(path,sample,sep=&quot;&quot;)</span><br><span class="line">        data.new&lt;-read.table(file,header=F,sep=&quot;\t&quot;,col.names = c(&quot;gene_id&quot;,sample))</span><br><span class="line">        data.raw&lt;-merge(data.new,data.raw,by=&quot;gene_id&quot;)</span><br><span class="line">      &#125;</span><br><span class="line">     data.raw&lt;-data.raw[-1:-5,]</span><br><span class="line">     #ENSEMBL &lt;- gsub(&quot;\\.\\d*_\\d*&quot;, &quot;&quot;, data.raw$gene_id)</span><br><span class="line">     #row.names(data.raw) &lt;- ENSEMBL</span><br><span class="line">     # ENSEMBL &lt;- gsub(&quot;\\.\\d*&quot;, &quot;&quot;, mus_raw_count$gene_id)</span><br><span class="line">     write.table(data.raw,&quot;count.matix.csv&quot;,row.names=F,quote=F)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>参考引用来自以下资料<br><a href="https://mp.weixin.qq.com/s/V32iruEVRKJ_1RubuS_lUQ" target="_blank" rel="noopener">PANDA姐的转录组入门(6)：reads计数</a><br><a href="https://mp.weixin.qq.com/s/RolngZkua6GJboHQMfP52w" target="_blank" rel="noopener">生信媛 转录组入门(6)： reads计数</a><br><a href="http://www.jianshu.com/p/24cf44b610a7" target="_blank" rel="noopener">lxmic转录组入门(6)： reads计数</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> 转录组入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bioinformatics </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>转录组入门——5</title>
      <link href="/2017/08/14/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8%E2%80%94%E2%80%945/"/>
      <url>/2017/08/14/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8%E2%80%94%E2%80%945/</url>
      <content type="html"><![CDATA[<h5 id="比对软件简介"><a href="#比对软件简介" class="headerlink" title="比对软件简介"></a>比对软件简介</h5><blockquote><p><a href="http://www.jianshu.com/p/681e02e7f9af" target="_blank" rel="noopener">比对软件比较</a><br>Bowtie1 <a href="http://bowtie-bio.sourceforge.net/index.shtml" target="_blank" rel="noopener">官方网址</a><br>Bowtie2 <a href="http://bowtie-bio.sourceforge.net/bowtie2/index.shtml" target="_blank" rel="noopener">官方网址</a> <a href="http://blog.leanote.com/post/songtaogui/Bowtie2%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8" target="_blank" rel="noopener">中文教程</a> <a href="http://blog.leanote.com/post/375952584@qq.com/Bowtie2%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8" target="_blank" rel="noopener">中文教程</a><br><a href="https://cncbi.github.io/Bowtie2-Manual-CN/" target="_blank" rel="noopener">中文教程</a> <a href="http://fhqdddddd.blog.163.com/blog/static/18699154201422735644352/" target="_blank" rel="noopener">中文教程</a><br>Bowtie1 Bowtie2 <a href="http://blog.csdn.net/soyabean555999/article/details/62235577" target="_blank" rel="noopener">二者区别</a><br><a href="http://www.cnblogs.com/wq242424/p/7025946.html" target="_blank" rel="noopener">Bowtie 安装</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#下载bowtie2-2.3.2-linux-x86_64.zip解压后有错误 未解决 tbb需要Python2.7</span><br><span class="line">find ./ -name libtbbmalloc_proxy.so.2</span><br><span class="line">echo $LD_LIBRARY_PATH</span><br><span class="line">export LD_LIBRARY_PATH=~/biosoft/tbb2017_20170604oss/lib/:$LD_LIBRARY_PATH</span><br></pre></td></tr></table></figure></p><p><a href="http://blog.sina.com.cn/s/blog_83f77c940102wp28.html" target="_blank" rel="noopener">TBB下载地址</a><br><a href="http://www.linuxidc.com/Linux/2014-01/94717.htm" target="_blank" rel="noopener">Linux LD_LIBRARY_PATH</a><br><a href="https://stackoverflow.com/questions/32592956/apt-get-command-not-found" target="_blank" rel="noopener">apt-get 和 yum install</a><br>Tophat <a href="https://ccb.jhu.edu/software/tophat/manual.shtml" target="_blank" rel="noopener">官方网址</a> <a href="http://www.chenlianfu.com/?p=910" target="_blank" rel="noopener">中文教程</a><br>Hisat2 <a href="https://ccb.jhu.edu/software/hisat2/index.shtml" target="_blank" rel="noopener">官方网址</a> <a href="http://blog.biochen.com/archives/337" target="_blank" rel="noopener">中文教程</a><br>STAR <a href="http://www.bio-info-trainee.com/727.html" target="_blank" rel="noopener">中文教程</a> <a href="http://www.cnblogs.com/daimakun/p/5081638.html" target="_blank" rel="noopener">中文教程</a><br>其他比对软件 <a href="http://www.jianshu.com/p/93f96e7538da" target="_blank" rel="noopener">参考</a></p></blockquote><h5 id="hisat2-下载index"><a href="#hisat2-下载index" class="headerlink" title="hisat2 下载index"></a>hisat2 下载index</h5><blockquote><p><a href="http://www.biotrainee.com/thread-26-1-1.html" target="_blank" rel="noopener">bowtie原理</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/data/hg19.tar.gz</span><br><span class="line">wget ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/data/mm10.tar.gz</span><br><span class="line">tar -zxvf *.tar.gz</span><br></pre></td></tr></table></figure></p></blockquote><h5 id="hiat2-Map，sam转bam，name-sort"><a href="#hiat2-Map，sam转bam，name-sort" class="headerlink" title="hiat2 Map，sam转bam，name-sort"></a>hiat2 Map，sam转bam，name-sort</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#! usr/bin/bash</span><br><span class="line">set -u</span><br><span class="line">set -e</span><br><span class="line">set -o pipefail</span><br><span class="line">hg19_ref=~/fastq/hisat2_index/hg19/genome</span><br><span class="line">mm10_ref=~/fastq/hisat2_index/mm10/genome</span><br><span class="line">hg19_gff=~/fastq/refdata/Genecode/gencode.v26lift37.annotation.gff3</span><br><span class="line">mm10_gff=~/fastq/refdata/Genecode/gencode.vM10.annotation.gtf</span><br><span class="line">data_path=~/fastq</span><br><span class="line">ls Homo*.fastq.gz|while read id;do(hisat2 -t -p 5 -x $hg19_ref -1 $data_path/$&#123;id%_*&#125;_1.fastq.gz -2 $data_path/$&#123;id%_*&#125;_2.fastq.gz 2&gt;$&#123;id%_*&#125;_map.log | /home/tingm/software/samtools-1.3.1/samtools view -Sb  - &gt;$&#123;id%_*&#125;.bam);done</span><br><span class="line">ls Mus*.fastq.gz|while read id;do(hisat2 -t -p 5 -x $mm10_ref -1 $data_path/$&#123;id%_*&#125;_1.fastq.gz -2 $data_path/$&#123;id%_*&#125;_2.fastq.gz 2&gt;$&#123;id%_*&#125;_map.log | /home/tingm/software/samtools-1.3.1/samtools view -Sb  -  &gt;$&#123;id%_*&#125;.bam);done</span><br><span class="line">ls *.bam|while read id;do(/home/tingm/software/samtools-1.3.1/samtools sort -n -@ 5 $id  -o $&#123;id%%.*&#125;.Nsorted.bam);done</span><br><span class="line">#ls Homo*.Nsorted.bam|while read id;do(htseq-count -f bam -i gene_name -s no $id $hg19_gff &gt; $&#123;id%%.*&#125;.geneCounts 2&gt; $&#123;id%%.*&#125;.HTseq.log);done</span><br><span class="line">#ls Mus*.Nsorted.bam|while read id;do(htseq-count -f bam -i gene_name -s no $id $mm10_gff &gt; $&#123;id%%.*&#125;.geneCounts 2&gt; $&#123;id%%.*&#125;.HTseq.log);done</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/2116382-614c3461111f4783.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="bam"></p><p><img src="http://upload-images.jianshu.io/upload_images/2116382-14e7421d4dbb7c5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="name-sorted bam"></p><p><img src="http://upload-images.jianshu.io/upload_images/2116382-ffab566ae8f0b434.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="sorted bam"></p><h5 id="BWA"><a href="#BWA" class="headerlink" title="BWA"></a>BWA</h5><p><a href="https://starsyi.github.io/2016/05/24/BWA-%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/" target="_blank" rel="noopener">中文参考</a></p><h5 id="Samtools"><a href="#Samtools" class="headerlink" title="Samtools"></a>Samtools</h5><p><a href="http://samtools.sourceforge.net/" target="_blank" rel="noopener">官方网址</a><br><a href="http://www.bio-info-trainee.com/518.html" target="_blank" rel="noopener">下载参考</a><br><a href="http://blog.csdn.net/sinat_38163598/article/details/72910115" target="_blank" rel="noopener">中文教程</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/samtools/samtools/releases/download/1.5/samtools-1.5.tar.bz2</span><br><span class="line">tar jxf samtools-1.5.tar.bz2</span><br><span class="line">cd samtools-1.5</span><br><span class="line">make</span><br><span class="line">echo &apos;PATH=$PATH:~/biosoft/samtools-1.5/&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure></p><h5 id="两种排序方式及索引-默认排序是根据染色体位置-n-reads名称进行排序"><a href="#两种排序方式及索引-默认排序是根据染色体位置-n-reads名称进行排序" class="headerlink" title="两种排序方式及索引(默认排序是根据染色体位置 -n reads名称进行排序)"></a>两种排序方式及索引(默认排序是根据染色体位置 -n reads名称进行排序)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ls *.sra.bam|while read id;do(/home/tingm/software/samtools-1.3.1/samtools sort -@ 5 $id -o $&#123;id%%.*&#125;.sorted.bam);done</span><br><span class="line">ls *.sorted.bam|while read id;do(/home/tingm/software/samtools-1.3.1/samtools index $&#123;id%%.*&#125;.sorted.bam;done</span><br><span class="line">#head -1000 Homo_SRR3589956.sra.bam &gt; test.bam</span><br><span class="line">#samtools view test.bam | head</span><br><span class="line">#head -1000 Homo_SRR3589956.Nsorted.bam &gt; test.nsorted.bam</span><br><span class="line">#samtools view test.nsorted.bam | head</span><br><span class="line">#head -1000 Homo_SRR3589956.sorted.bam &gt; test.sorted.bam</span><br><span class="line">#samtools view test.sorted.bam | head</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/2116382-1126ea86c945546c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="bam"></p><p><img src="http://upload-images.jianshu.io/upload_images/2116382-65746a73521c7f0b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="reads name"></p><p><img src="http://upload-images.jianshu.io/upload_images/2116382-f50f20d61159b837.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="chr"></p><h5 id="IGV-载入bam文件及其index-如何查看，理解结果？"><a href="#IGV-载入bam文件及其index-如何查看，理解结果？" class="headerlink" title="IGV 载入bam文件及其index  如何查看，理解结果？"></a>IGV 载入bam文件及其index  如何查看，理解结果？</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">igv.sh</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/2116382-f0e2a6fa977e4068.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="sort.bam"></p><h5 id="质量控制"><a href="#质量控制" class="headerlink" title="质量控制"></a>质量控制</h5><blockquote><p>常用工具有<br>Picard <a href="https://broadinstitute.github.io/picard/" target="_blank" rel="noopener">https://broadinstitute.github.io/picard/</a><br>RSeQC <a href="http://rseqc.sourceforge.net/" target="_blank" rel="noopener">http://rseqc.sourceforge.net/</a><br>Qualimap <a href="http://qualimap.bioinfo.cipf.es/" target="_blank" rel="noopener">http://qualimap.bioinfo.cipf.es/</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Python2.7环境下</span><br><span class="line">pip install RSeQC</span><br><span class="line"># 先对bam文件进行统计分析， 从结果上看是符合70~90的比对率要求</span><br><span class="line">bam_stat.py -i Homo_SRR3589956.sorted.bam</span><br><span class="line"># 基因组覆盖率的QC需要提供bed文件，可以直接RSeQC的网站下载，或者可以用gtf转换</span><br><span class="line">wget https://sourceforge.net/projects/rseqc/files/BED/Human_Homo_sapiens/hg19_RefSeq.bed.gz/download -O hg19_RefSeq.bed.gz</span><br><span class="line">gzip -d hg19_RefSeq.bed.gz</span><br><span class="line">read_distribution.py -i Homo_SRR3589956.sorted.bam -r ~/fastq/refdata/hg19_RefSeq.bed</span><br></pre></td></tr></table></figure></p></blockquote><p><img src="http://upload-images.jianshu.io/upload_images/2116382-43015f11229d4941.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="bam文件进行统计分析"></p><p><img src="http://upload-images.jianshu.io/upload_images/2116382-0ae3b95e94e3037b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="基因组覆盖率的QC"></p><blockquote><p>参考资料<br><a href="https://mp.weixin.qq.com/s/C66OKH08mjWvHOmq-s8V1A" target="_blank" rel="noopener">PANDA姐的转录组入门(5)：序列比对</a><br><a href="http://www.jianshu.com/p/681e02e7f9af" target="_blank" rel="noopener">hoptop 转录组入门（5）： 序列比对</a><br><a href="http://www.jianshu.com/p/93f96e7538da" target="_blank" rel="noopener">lxmic转录组入门（5）： 序列比对</a></p></blockquote><h5 id="Picard"><a href="#Picard" class="headerlink" title="Picard"></a>Picard</h5><p><a href="https://github.com/broadinstitute/picard/releases/tag/2.11.0" target="_blank" rel="noopener">下载参考2</a><br><a href="https://github.com/broadinstitute/picard/releases/tag/1.141" target="_blank" rel="noopener">下载版本较旧 因需java1.8 放弃旧版本</a><br><a href="https://github.com/broadinstitute/picard" target="_blank" rel="noopener">下载参考1 java需1.8</a><br><a href="https://java.com/zh_CN/download/help/linux_x64_install.xml#download" target="_blank" rel="noopener">java8下载</a><br><a href="http://www.cnblogs.com/OA-maque/p/4835040.html" target="_blank" rel="noopener">下载参考</a><br><a href="http://www.bioinfo-scrounger.com/archives/183" target="_blank" rel="noopener">终版下载参考</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/broadinstitute/picard/releases/download/2.11.0/picard.jar</span><br><span class="line">java -jar picard.jar -h</span><br></pre></td></tr></table></figure></p><p><a href="https://cncbi.github.io/Picard-Manual-CN/" target="_blank" rel="noopener">使用参考</a><br><a href="http://blog.sina.com.cn/s/blog_6721167201018jik.html" target="_blank" rel="noopener">使用参考</a></p>]]></content>
      
      <categories>
          
          <category> 转录组入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bioinformatics </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>转录组入门——4</title>
      <link href="/2017/08/11/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8%E2%80%94%E2%80%944/"/>
      <url>/2017/08/11/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8%E2%80%94%E2%80%944/</url>
      <content type="html"><![CDATA[<h4 id="参考基因组-hg19-下载"><a href="#参考基因组-hg19-下载" class="headerlink" title="参考基因组(hg19)下载"></a>参考基因组(hg19)下载</h4><blockquote><p>NCBI     UCSC   ENSEMBL数据库 对应关系<br>GRCh36  hg18     ENSEMBL release_52<br>GRCh37  hg19     ENSEMBL release_59/61/64/68/69/75<br>GRCh38  hg38     ENSEMBL  release_76/77/78/80/81/82</p></blockquote><h5 id="NCBI"><a href="#NCBI" class="headerlink" title="NCBI"></a>NCBI</h5><p><a href="https://ftp.ncbi.nlm.nih.gov/genomes/H_sapiens/ARCHIVE/BUILD.37.3/Assembled_chromosomes/seq/" target="_blank" rel="noopener">https://ftp.ncbi.nlm.nih.gov/genomes/H_sapiens/ARCHIVE/BUILD.37.3/Assembled_chromosomes/seq/</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#! /bin/bash</span><br><span class="line">file=$1</span><br><span class="line">chrs=`awk &apos;&#123;print $1&#125;&apos; $file`</span><br><span class="line">for i in $&#123;chrs[@]&#125;;</span><br><span class="line">do echo $i;</span><br><span class="line">wget https://ftp.ncbi.nlm.nih.gov/genomes/H_sapiens/ARCHIVE/BUILD.37.3/Assembled_chromosomes/seq/hs_ref_GRCh37.p5_$&#123;i&#125;.fa.gz;</span><br><span class="line">done</span><br><span class="line">gunzip *.gz</span><br><span class="line">for i in $&#123;chrs[@]&#125;;</span><br><span class="line">do cat hs_ref_GRCh37.p5_$&#123;i&#125;.fa &gt;&gt; hg19.fasta;</span><br><span class="line">done</span><br><span class="line">rm -fr *.fa</span><br></pre></td></tr></table></figure></p><h5 id="Emsembl-过于大-应该为3G大小？"><a href="#Emsembl-过于大-应该为3G大小？" class="headerlink" title="Emsembl 过于大 应该为3G大小？"></a>Emsembl 过于大 应该为3G大小？</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup wget ftp://ftp.ensembl.org/pub/release-75/fasta/homo_sapiens/dna/Homo_sapiens.GRCh37.75.dna.toplevel.fa.gz &amp;</span><br></pre></td></tr></table></figure><h5 id="UCSC"><a href="#UCSC" class="headerlink" title="UCSC"></a>UCSC</h5><p><a href="https://www.jianshu.com/p/f101c9238fc5" target="_blank" rel="noopener">lxmic 转录组入门（4）：了解参考基因组及基因注释</a><br><img src="http://upload-images.jianshu.io/upload_images/2116382-88c008789cd1dd51.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Figure 1 select Downloads —&gt; select genome data"><br><img src="http://upload-images.jianshu.io/upload_images/2116382-2e1ade36ab2e236d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Figure 2-1 choose hg38"><br><img src="http://upload-images.jianshu.io/upload_images/2116382-d94fcaa75393bf9c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Figure 2-2 download"><br><img src="http://upload-images.jianshu.io/upload_images/2116382-f4d4898048b1b2a5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Figure 3-1 choose hg19"><br><img src="http://upload-images.jianshu.io/upload_images/2116382-9ab848763bf29e4f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Figure 3-2 download"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">nohup wget http://hgdownload.soe.ucsc.edu/goldenPath/hg19/bigZips/chromFa.tar.gz &amp;</span><br><span class="line">jobs</span><br><span class="line">fg %1</span><br><span class="line">bg %1</span><br><span class="line">kill %1</span><br><span class="line">tar -zxvf chromFa.tar.gz</span><br><span class="line">cat *.fa &gt; hg19.fa</span><br><span class="line">rm -rf chr*</span><br></pre></td></tr></table></figure></p><h4 id="参考基因组注释下载"><a href="#参考基因组注释下载" class="headerlink" title="参考基因组注释下载"></a>参考基因组注释下载</h4><h5 id="NCBI-1"><a href="#NCBI-1" class="headerlink" title="NCBI"></a>NCBI</h5><p><img src="http://upload-images.jianshu.io/upload_images/2116382-02d615eeeb235c1b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="进入NCBI的Genome数据库"><br><img src="http://upload-images.jianshu.io/upload_images/2116382-30b4ca74609e930f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Download/FTP"><br><img src="http://upload-images.jianshu.io/upload_images/2116382-75b1fba61ea288b8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="选择物种：人"><br><img src="http://upload-images.jianshu.io/upload_images/2116382-98122c5892131b89.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="进入下载hg38GTF注释文件"><br><img src="http://upload-images.jianshu.io/upload_images/2116382-40eefc8f0afdd683.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="hg38GTF注释文件"><br><img src="http://upload-images.jianshu.io/upload_images/2116382-eedc1feedef01e9a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="其他版本"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nohup wget https://ftp.ncbi.nlm.nih.gov/genomes/H_sapiens/GFF/ref_GRCh38.p7_top_level.gff3.gz &amp;</span><br><span class="line">gzip -d ref_GRCh38.p7_top_level.gff3.gz</span><br></pre></td></tr></table></figure></p><h5 id="Ensembl"><a href="#Ensembl" class="headerlink" title="Ensembl"></a>Ensembl</h5><p><a href="http://www.bio-info-trainee.com/1469.html" target="_blank" rel="noopener">生信菜鸟团 基因组各种版本对应关系</a><br><img src="http://upload-images.jianshu.io/upload_images/2116382-78260f48c383e5d9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Downloads"><br><img src="http://upload-images.jianshu.io/upload_images/2116382-8e63dca8af3c1054.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="select"><br><img src="http://upload-images.jianshu.io/upload_images/2116382-64ee6b0553666966.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="FTP site"><br><img src="http://upload-images.jianshu.io/upload_images/2116382-45b8166f6b848095.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="release-75"><br><img src="http://upload-images.jianshu.io/upload_images/2116382-7b9911c2b8cd58ba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="GTF"><br><img src="http://upload-images.jianshu.io/upload_images/2116382-27b6ef4681c23204.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Homo sapiens"><br><img src="http://upload-images.jianshu.io/upload_images/2116382-6a2c9ddd309802a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="download"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nohup wget ftp://ftp.ensembl.org/pub/release-75/gtf/homo_sapiens/Homo_sapiens.GRCh37.75.gtf.gz &amp;</span><br><span class="line">gzip -d Homo_sapiens.GRCh37.75.gtf.gz</span><br></pre></td></tr></table></figure></p><h5 id="UCSC-1"><a href="#UCSC-1" class="headerlink" title="UCSC"></a>UCSC</h5><p><img src="http://upload-images.jianshu.io/upload_images/2116382-5cf747fa93b9d9b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="choose Table Browser"></p><blockquote><p>Navigate to <a href="http://genome.ucsc.edu/cgi-bin/hgTables" target="_blank" rel="noopener">http://genome.ucsc.edu/cgi-bin/hgTables</a><br>Select the following options:<br>clade: Mammal<br>genome: Human<br>assembly: Feb. 2009 (GRCh37/hg19)<br>group: Genes and Gene Predictions<br>track: UCSC Genes<br>table: knownGene<br>region: Select “genome” for the entire genome.<br>output format: GTF - gene transfer format<br>output file: enter a file name to save your results to a file, or leave blank to display results in the browser<br>Click ‘get output’.</p></blockquote><h5 id="Genecode"><a href="#Genecode" class="headerlink" title="Genecode"></a>Genecode</h5><p><a href="http://www.jianshu.com/p/f101c9238fc5" target="_blank" rel="noopener">转录组入门4-了解参考基因组及基因注释</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_26/GRCh37_mapping/gencode.v26lift37.annotation.gtf.gz</span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_26/GRCh37_mapping/gencode.v26lift37.annotation.gff3.gz</span><br><span class="line">gunzip *.gz </span><br><span class="line">rm -rf *.gz</span><br></pre></td></tr></table></figure></p><h5 id="IGV"><a href="#IGV" class="headerlink" title="IGV"></a>IGV</h5><p><a href="http://www.biotrainee.com/thread-1998-1-1.html" target="_blank" rel="noopener">转录组作业（四）：来自零基础的小白</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">![软件自带基因组-TP53](http://upload-images.jianshu.io/upload_images/2116382-35124fbd81c8bdab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</span><br><span class="line">![hg19.fa 蓝色带没有变化？？](http://upload-images.jianshu.io/upload_images/2116382-75961165acf84dd2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</span><br><span class="line"></span><br><span class="line">***问题：linux服务器未安装上IGV；自行下载的hg19比对结果和软件自带不一致***</span><br></pre></td></tr></table></figure></p><p>sudo apt-get install glib-networking-common<br>```</p><blockquote><p>其他参考资料<br><a href="http://blog.sina.com.cn/s/blog_3d37a5690100wne7.html" target="_blank" rel="noopener">ncbi中的基因组genome全序列下载 </a><br><a href="http://www.bio-info-trainee.com/1985.html" target="_blank" rel="noopener">参考基因组下载及index建立</a><br><a href="http://www.bio-info-trainee.com/1469.html" target="_blank" rel="noopener">基因组各种版本对应关系</a><br><a href="https://www.yaolibio.com/2016/09/01/retrieve-genome-data-from-ucsc/" target="_blank" rel="noopener">从UCSC获取基因组序列及基因注释</a><br><a href="http://www.jianshu.com/p/f101c9238fc5" target="_blank" rel="noopener">转录组入门4-了解参考基因组及基因注释</a><br><a href="http://www.cnblogs.com/Demo1589/p/6950196.html" target="_blank" rel="noopener">关于基因组注释文件GTF的解释</a><br><a href="http://www.jianshu.com/p/48b5a0972301" target="_blank" rel="noopener">GTF/GFF文件的差异及其看相互转换</a><br><a href="http://mp.weixin.qq.com/s/mq--yW_vmm2C2ZpnYiPq-A" target="_blank" rel="noopener">ensembel及NCBI注释文件下载</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> 转录组入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bioinformatics </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>转录组入门——3</title>
      <link href="/2017/08/10/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8%E2%80%94%E2%80%943/"/>
      <url>/2017/08/10/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8%E2%80%94%E2%80%943/</url>
      <content type="html"><![CDATA[<h5 id="SRA-Toolkit-软件"><a href="#SRA-Toolkit-软件" class="headerlink" title="SRA Toolkit 软件"></a>SRA Toolkit 软件</h5><p><a href="https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?view=toolkit_doc" target="_blank" rel="noopener">官方网址</a></p><h5 id="软件下载（CentOS-6-8）"><a href="#软件下载（CentOS-6-8）" class="headerlink" title="软件下载（CentOS 6.8）"></a>软件下载（CentOS 6.8）</h5><p><a href="https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?view=toolkit_doc&amp;f=std#s-2" target="_blank" rel="noopener">官方参考</a><br><a href="http://www.jianshu.com/p/6a4855023330" target="_blank" rel="noopener">中文参考</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#下载软件包</span><br><span class="line">wget ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/2.8.2-1/sratoolkit.2.8.2-1-centos_linux64.tar.gz</span><br><span class="line">#解压</span><br><span class="line">tar -zxf sratoolkit.2.8.2-1-centos_linux64.tar.gz </span><br><span class="line">#解压后文件夹移动到biosoft目录下</span><br><span class="line">mv sratoolkit.2.8.2-1-centos_linux64/ biosoft/</span><br><span class="line">#设置绝对路径</span><br><span class="line">echo &apos;PATH=$PATH:~/biosoft/sratoolkit.2.8.2-1-centos_linux64/bin&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br><span class="line">#测试安装</span><br><span class="line">fastq-dump -h</span><br></pre></td></tr></table></figure></p><h5 id="fastq-dump参数"><a href="#fastq-dump参数" class="headerlink" title="fastq-dump参数"></a>fastq-dump参数</h5><p><a href="https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?view=toolkit_doc&amp;f=fastq-dump" target="_blank" rel="noopener">官方参考</a><br><a href="http://www.biotrainee.com/forum.php?mod=viewthread&amp;tid=1885&amp;fromuid=1685" target="_blank" rel="noopener">中文参考</a><br>–split-3 如果是双端测序数据，则输出两个文件，如果不是则只输出一个文件<br>-O 指定输出路径<br>–gzip 指定输出格式为gzip压缩格式<br>-A –accession 输入sra文件可以是绝对路径</p><h5 id="SRA文件转换为fastq文件-仅关注RNA-Seq数据"><a href="#SRA文件转换为fastq文件-仅关注RNA-Seq数据" class="headerlink" title="SRA文件转换为fastq文件(仅关注RNA-Seq数据)"></a>SRA文件转换为fastq文件(仅关注RNA-Seq数据)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i in `seq 56 62`;do fastq-dump --gzip --split-3 -O ~/fastq/ -A ~/ncbi/public/sra/SRR35899$&#123;i&#125;.sra;done</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/2116382-f592e2a5c22a432f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="gz"></p><h5 id="生信名词理解"><a href="#生信名词理解" class="headerlink" title="生信名词理解"></a>生信名词理解</h5><p>测序reads：高通量测序平台产生的序列标签就称为reads<br>GC含量：<a href="https://zh.wikipedia.org/wiki/GC%E5%90%AB%E9%87%8F" target="_blank" rel="noopener">中文参考</a><br>质量值：每测一个碱基会有相应的质量值，质量值用于衡量测序准确度<a href="http://www.cnblogs.com/daimakun/p/5092312.html" target="_blank" rel="noopener">中文参考</a><a href="https://en.wikipedia.org/wiki/FASTQ_format" target="_blank" rel="noopener">英文参考</a><br>adapter：接头是一段短的序列已知的核酸链，用于连接序列未知的目标测序片段<br>index：索引序列，是一段很短的寡居核酸链，用于在多个样品混合测序时，标记不同的样品，为区分不同样本而构建<a href="http://www.itwendao.com/article/detail/467548.html" target="_blank" rel="noopener">参考</a></p><h5 id="FastQC-软件"><a href="#FastQC-软件" class="headerlink" title="FastQC 软件"></a>FastQC 软件</h5><p><a href="http://www.bioinformatics.babraham.ac.uk/projects/fastqc/" target="_blank" rel="noopener">官方网址</a></p><h5 id="软件下载（CentOS-6-8）-1"><a href="#软件下载（CentOS-6-8）-1" class="headerlink" title="软件下载（CentOS 6.8）"></a>软件下载（CentOS 6.8）</h5><p><a href="http://www.bioinformatics.babraham.ac.uk/projects/fastqc/INSTALL.txt" target="_blank" rel="noopener">官方参考</a><br><a href="http://www.jianshu.com/p/6a4855023330" target="_blank" rel="noopener">中文参考</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br><span class="line">wget http://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.5.zip</span><br><span class="line">unzip fastqc_v0.11.5.zip</span><br><span class="line">mv FastQC/ biosoft/</span><br><span class="line">cd ~/biosoft/FastQC</span><br><span class="line">chmod 755 fastqc</span><br><span class="line">echo &apos;PATH=$PATH:~/biosoft/FastQC/&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br><span class="line">fastqc -h</span><br></pre></td></tr></table></figure></p><h5 id="fastqc"><a href="#fastqc" class="headerlink" title="fastqc"></a>fastqc</h5><p>-o 输出目录，需自己创建目录<br>–extract 是否解压输出文件，默认自动解压缩zip文件<br>-f 指定输入文件的类型，支持fastq|bam|sam三种格式的文件，默认自动识别<br>-t 同时处理的文件数目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastqc -o fastqc_out --extract *.fastq.gz</span><br></pre></td></tr></table></figure></p><h5 id="fastqc质控结果"><a href="#fastqc质控结果" class="headerlink" title="fastqc质控结果"></a>fastqc质控结果</h5><p><a href="http://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/3%20Analysis%20Modules/" target="_blank" rel="noopener">官方参考</a><br><a href="http://www.jianshu.com/p/14fd4de54402" target="_blank" rel="noopener">中文参考</a><br><a href="http://fbb84b26.wiz03.com/share/s/3XK4IC0cm4CL22pU-r1HPcQQ2irG2836uQYm2iZAyh1Zwf3_" target="_blank" rel="noopener">中文参考</a></p><h5 id="批量查看MultiQC"><a href="#批量查看MultiQC" class="headerlink" title="批量查看MultiQC"></a>批量查看MultiQC</h5><p><a href="http://multiqc.info/docs/" target="_blank" rel="noopener">官方网址</a><br><a href="http://fbb84b26.wiz03.com/share/s/3XK4IC0cm4CL22pU-r1HPcQQ1iRTvV2GwkwL2AaxYi2fXHP7" target="_blank" rel="noopener">中文参考</a></p><h5 id="软件下载及使用"><a href="#软件下载及使用" class="headerlink" title="软件下载及使用"></a>软件下载及使用</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda install -c bioconda multiqc</span><br><span class="line">#进入对应文件，扫描zip文件，忽略html文件</span><br><span class="line">multiqc ~/fastq/fastqc_out/*fastqc.zip --ignore *.html</span><br></pre></td></tr></table></figure><h5 id="结果查看-重点关注的部分参考"><a href="#结果查看-重点关注的部分参考" class="headerlink" title="结果查看 重点关注的部分参考"></a>结果查看 重点关注的部分参考</h5><p><a href="https://zhuanlan.zhihu.com/p/27985781" target="_blank" rel="noopener">青山屋主 转录组入门3-测序数据质量检查</a></p>]]></content>
      
      <categories>
          
          <category> 转录组入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bioinformatics </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>转录组入门——2</title>
      <link href="/2017/08/09/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8%E2%80%94%E2%80%942/"/>
      <url>/2017/08/09/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8%E2%80%94%E2%80%942/</url>
      <content type="html"><![CDATA[<h5 id="CentOS-release-6-5-Final"><a href="#CentOS-release-6-5-Final" class="headerlink" title="CentOS release 6.5 (Final)"></a>CentOS release 6.5 (Final)</h5><h5 id="GEO-SRA数据库的数据存放形式参考"><a href="#GEO-SRA数据库的数据存放形式参考" class="headerlink" title="GEO/SRA数据库的数据存放形式参考"></a>GEO/SRA数据库的数据存放形式参考</h5><p><a href="http://www.biotrainee.com/forum.php?mod=viewthread&amp;tid=1884&amp;fromuid=1685" target="_blank" rel="noopener">青山屋主 转录组入门(2)-作业</a><br><a href="http://www.biotrainee.com/forum.php?mod=viewthread&amp;tid=1829&amp;fromuid=1685" target="_blank" rel="noopener">hoptop 转录组入门（二）读文献下数据</a></p><h5 id="软件及参数"><a href="#软件及参数" class="headerlink" title="软件及参数"></a>软件及参数</h5><p>比对：TopHat (v2.0.13) 参考基因组：GRCh37/hg19 GTF文件：GTF version GRCh37.70 去除MQ&gt;30的reads<br>计算平均插入大小和标准差：Picard-tools（v1.126）<br>计算reads count：HTSeq (v0.6.0)<br>差异表达：DESeq (v3.0) 差异外显子：DEXSeq (v3.1)<br>normalize Bigwig files to per million reads：BEDTools (v2.17.0), bedGraphToBigWig tool (v4)<br>统计分析和作图： R (v3.1.1) (<a href="http://www.r-project.org/" target="_blank" rel="noopener">http://www.r-project.org/</a>)<br>GO富集分析：DAVID (<a href="http://david.ncifcrf.gov/" target="_blank" rel="noopener">http://david.ncifcrf.gov/</a>)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># download Aspera</span><br><span class="line">wget http://download.asperasoft.com/download/sw/connect/3.6.2/aspera-connect-3.6.2.117442-linux-64.tar.gz</span><br><span class="line">tar zxf aspera-connect-3.6.2.117442-linux-64.tar.gz</span><br><span class="line">sh aspera-connect-3.6.2.117442-linux-64.sh</span><br><span class="line">echo &apos;PATH=$PATH:/home/tma/.aspera/connect/bin&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br><span class="line">ascp</span><br><span class="line"># download data</span><br><span class="line">for x in $(seq 48 62);do ascp -T -l 200M -i ~/.aspera/connect/etc/asperaweb_id_dsa.openssh --host=ftp-private.ncbi.nlm.nih.gov --user=anonftp --mode=recv /sra/sra-instant/reads/ByStudy/sra/SRP/SRP075/SRP075747/SRR35899&quot;$x&quot;/SRR35899&quot;$x&quot;.sra . ;done</span><br><span class="line"></span><br><span class="line"># sratoolkit prefetch</span><br><span class="line">for x in $(seq 48 62);do prefetch SRR35899&quot;$x&quot;;done</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 转录组入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bioinformatics </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>转录组入门——1</title>
      <link href="/2017/08/09/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8%E2%80%94%E2%80%941/"/>
      <url>/2017/08/09/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%85%A5%E9%97%A8%E2%80%94%E2%80%941/</url>
      <content type="html"><![CDATA[<h5 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h5><p>CentOS 6.8（虚拟机之前就已安装好，所以不是推荐安装的ubuntu）</p><h5 id="软件安装参考"><a href="#软件安装参考" class="headerlink" title="软件安装参考"></a>软件安装参考</h5><p><a href="http://www.biotrainee.com/thread-1742-1-1.html" target="_blank" rel="noopener">Jimmy转录组入门(1)：计算机资源的准备</a><br><a href="http://www.biotrainee.com/thread-1796-1-1.html" target="_blank" rel="noopener">青山屋主转录组入门(1)-作业</a><br><a href="http://www.chenlianfu.com/?p=2438" target="_blank" rel="noopener">HTSeq中文教程</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"># download miniconda2</span><br><span class="line">wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh </span><br><span class="line">bash Miniconda2-latest-Linux-x86_64.sh</span><br><span class="line">source ~/.bashrc</span><br><span class="line"></span><br><span class="line"># sratoolkit</span><br><span class="line">conda install -c jfear sratoolkit=2.8.1</span><br><span class="line">fastq-dump</span><br><span class="line"></span><br><span class="line"># fastqc</span><br><span class="line">conda install -c bioconda fastqc=0.11.5</span><br><span class="line">fastqc</span><br><span class="line"></span><br><span class="line"># hisat2</span><br><span class="line">conda install -c bioconda hisat2</span><br><span class="line">hisat2</span><br><span class="line"></span><br><span class="line"># samtools</span><br><span class="line">conda install -c bioconda samtools=1.5 </span><br><span class="line"># error</span><br><span class="line"># samtools: error while loading shared libraries: libbz2.so.1.0: cannot open shared object file: No such file or directory</span><br><span class="line"># 错误解决参考 https://www.biostars.org/p/266111/</span><br><span class="line">conda install -c conda-forge -c bioconda samtools bzip2</span><br><span class="line">samtools</span><br><span class="line"></span><br><span class="line"># htseq-count</span><br><span class="line">conda install -c bioconda htseq=0.7.2</span><br><span class="line">python</span><br><span class="line">&gt;&gt;&gt;import HTSeq</span><br><span class="line"></span><br><span class="line"># R</span><br><span class="line">sudo yum install epel-release</span><br><span class="line">sudo yum install R</span><br><span class="line">R</span><br><span class="line"></span><br><span class="line"># Rstudio</span><br><span class="line">conda install rstudio</span><br><span class="line">rstudio</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 转录组入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bioinformatics </tag>
            
        </tags>
      
    </entry>
    
  
  
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
  
</search>
