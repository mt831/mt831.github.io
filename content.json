[{"title":"mysql学习记录--Part.2","date":"2018-08-07T14:00:00.000Z","path":"2018/08/07/SQL/sql_2/","text":"PHP基础中文在线学习参考思维导图：http://naotu.baidu.com/file/29c230533a920a5a0b5f74fde69aa541?token=bbc92d5659a4a1fd密码：55hi","tags":[{"name":"php","slug":"php","permalink":"http://yoursite.com/tags/php/"}]},{"title":"mysql学习记录--Part.1","date":"2018-08-06T14:00:00.000Z","path":"2018/08/06/SQL/sql_1/","text":"mysql安装（windows）mysql5.7 链接1.下载zip archive版本并解压2.配置默认文件，配置文件参考3.path添加：D:mysql-5.7.23-winx64\\bin;4.mysql服务安装：以管理员身份运行cmd；输入d:；输入cd mysql-5.7.23-winx64\\bin；输入mysqld install5.生成data目录：mysqld –initialize-insecure –user=mysql data目录生成参考6.启动mysql：bin目录下mysql -u root -p或者net start mysql7.退出：exit 连接mysqlmysql登录： mysql -u root -p版本查询： select @@verison;查看当前用户： select user();查看所有用户：select user,host from mysql.user;查看默认字符集： show character set;MySQL查看当前用户、存储引擎、日志 建库建表参考总结建库： create database bank;建表：1234567mysql&gt; use bank; -&gt; create table accunt( -&gt; acctid int(11) not null primary key auto_increment, -&gt; money int(11) not null); -&gt; insert into accunt values(&apos;1&apos;,&apos;1000&apos;); -&gt; insert into accunt values(&apos;2&apos;,&apos;500&apos;); -&gt; select * from accunt; sql基本命令练习SQL教程show databases;use bank;source D:/mysql-5.7.23-winx64/data/bank/apps.sql;source D:/mysql-5.7.23-winx64/data/bank/websites.sql;source D:/mysql-5.7.23-winx64/data/bank/access_log.sql; 中文乱码show variables like ‘character%’;set names gbk;select from websites;select from apps;select * from access_log; 语法总结思维导图链接：http://naotu.baidu.com/file/b933dfeff4718815f095ef45d77897dd?token=9d9ce9295033cee5密码：IKey","tags":[{"name":"sql","slug":"sql","permalink":"http://yoursite.com/tags/sql/"},{"name":"mysql","slug":"mysql","permalink":"http://yoursite.com/tags/mysql/"}]},{"title":"拉勾网.Part-1","date":"2018-07-23T14:00:00.000Z","path":"2018/07/23/爬虫/拉勾网.Part1/","text":"爬取网站解析1.爬取网址：全国数据分析岗位1https://www.lagou.com/jobs/list_%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90?city=%E5%85%A8%E5%9B%BD&amp;cl=false&amp;fromSearch=true&amp;labelWords=&amp;suginput= 2.岗位信息存储情况F12查看网页源代码；F5简单刷新当前页面；查看headers内容示例： first=true&amp;pn=1&amp;kd=%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%903.分析结果数据存储在对应的json文件，列表页正确的URL如下，未设定城市，pn需修改1https://www.lagou.com/jobs/positionAjax.json?needAddtionalResult=false&amp;first=true&amp;pn=1&amp;kd=%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90 由于拉勾网只展示30页的搜索结果，每页15条职位信息，全部爬下来，最终将获取到450条信息，所以细化城市分别查找，数据量更大1url = &apos;https://www.lagou.com/jobs/positionAjax.json?px=default&amp;city=&#123;&#125;&amp;needAddtionalResult=false&amp;pn=&apos;.format(city) 参考链接请求头(request headers)和响应头(response headers)解析http协议报头详解x-requested-with 请求头 数据采集代码设置随机headers；设置休眠时间（导致爬取速度较慢）；现有代码仍需改进，爬取页码数有限1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677# -*- coding UTF-8 -*-&quot;&quot;&quot;title:抓取拉勾网的全国的数据分析岗位数据time:2018-08-10代码原网址：https://blog.csdn.net/qq_40717846/article/details/78405586&quot;&quot;&quot;import json,requestsimport math,time,randomimport csvimport osdef get_headers(): user_agent_list = [ &apos;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) &apos;, &apos;Chrome/45.0.2454.85 Safari/537.36 115Browser/6.0.3&apos;, &apos;Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50&apos;, &apos;Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50&apos;, &apos;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0)&apos;, &apos;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)&apos;, &apos;Mozilla/5.0 (Windows NT 6.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1&apos;, &apos;Opera/9.80 (Windows NT 6.1; U; en) Presto/2.8.131 Version/11.11&apos;, &apos;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_0) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11&apos;, &apos;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; SE 2.X MetaSr 1.0; SE 2.X MetaSr 1.0; .NET CLR 2.0.50727; SE 2.X MetaSr 1.0)&apos;, &apos;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0&apos;, &apos;Mozilla/5.0 (Windows NT 6.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1&apos;, &apos;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36&apos; ] #随机选择一个 agent = random.choice(user_agent_list) headers = &#123; &quot;Cookie&quot;: &quot;JSESSIONID=ABAAABAAAGFABEF42BEF59E4399E6803A6C5828361037D8; _ga=GA1.2.2021525041.1533343081; user_trace_token=20180804083732-92e4f5d4-977e-11e8-b189-525400f775ce; LGUID=20180804083732-92e4f8db-977e-11e8-b189-525400f775ce; _gid=GA1.2.330084222.1533688355; index_location_city=%E5%85%A8%E5%9B%BD; TG-TRACK-CODE=search_code; Hm_lvt_4233e74dff0ae5bd0a3d81c6ccf756e6=1533819692,1533861545,1533861558,1533861568; LGSID=20180810101909-c3932359-9c43-11e8-a37b-5254005c3644; _gat=1; Hm_lpvt_4233e74dff0ae5bd0a3d81c6ccf756e6=1533869874; LGRID=20180810105743-270542b3-9c49-11e8-a37b-5254005c3644; SEARCH_ID=24a7effd344f4e779fd8c91aa2b93e24&quot;, &quot;Host&quot;: &quot;www.lagou.com&quot;, &quot;Origin&quot;: &quot;https://www.lagou.com&quot;, &quot;Referer&quot;: &quot;https://www.lagou.com/jobs/list_%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90?labelWords=&amp;fromSearch=true&amp;suginput=&quot;, &quot;User-Agent&quot;: agent &#125; return headers# page_headers = &#123;# &quot;Cookie&quot;: &quot;JSESSIONID=ABAAABAAAGFABEF42BEF59E4399E6803A6C5828361037D8; _ga=GA1.2.2021525041.1533343081; user_trace_token=20180804083732-92e4f5d4-977e-11e8-b189-525400f775ce; LGUID=20180804083732-92e4f8db-977e-11e8-b189-525400f775ce; _gid=GA1.2.330084222.1533688355; index_location_city=%E5%85%A8%E5%9B%BD; TG-TRACK-CODE=search_code; Hm_lvt_4233e74dff0ae5bd0a3d81c6ccf756e6=1533819692,1533861545,1533861558,1533861568; LGSID=20180810101909-c3932359-9c43-11e8-a37b-5254005c3644; _gat=1; Hm_lpvt_4233e74dff0ae5bd0a3d81c6ccf756e6=1533869874; LGRID=20180810105743-270542b3-9c49-11e8-a37b-5254005c3644; SEARCH_ID=24a7effd344f4e779fd8c91aa2b93e24&quot;,# &quot;Host&quot;: &quot;www.lagou.com&quot;,# &quot;Origin&quot;: &quot;https://www.lagou.com&quot;,# &quot;Referer&quot;: &quot;https://www.lagou.com/jobs/list_%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90?labelWords=&amp;fromSearch=true&amp;suginput=&quot;,# &quot;User-Agent&quot;: &apos;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0)&apos;# &#125;def get_page_nums(url,pn=1,kd=&quot;数据分析&quot;): page_data = &#123;&apos;first&apos;:&apos;false&apos;,&apos;pn&apos;:pn,&apos;kd&apos;: kd&#125; page_headers = get_headers() html = requests.post(url+str(pn), data=page_data,headers=page_headers) page = json.loads(html.text) totalCount = page.get(&apos;content&apos;).get(&apos;positionResult&apos;).get(&apos;totalCount&apos;) pns = math.ceil(totalCount / 15) return pns,totalCountdef get_page_pagesize(url, pn, kd=&quot;数据分析&quot;): if pn == 1: boo = &apos;true&apos; else: boo = &apos;false&apos; page_data = &#123;&apos;first&apos;:boo,&apos;pn&apos;:pn,&apos;kd&apos;: kd&#125; page_headers = get_headers() html = requests.post(url+str(pn), data=page_data,headers=page_headers) html_text = html.text page = json.loads(html_text) page_size = page.get(&apos;content&apos;).get(&apos;positionResult&apos;).get(&apos;resultSize&apos;) return page,page_sizedef csv_writer_by_dict(csvfile,data): headers = [&apos;companyId&apos;,&apos;createTime&apos;,&apos;companyShortName&apos;,&apos;positionAdvantage&apos;,&apos;salary&apos;,&apos;workYear&apos;,&apos;education&apos;,&apos;city&apos;, &apos;positionName&apos;,&apos;financeStage&apos;,\\ &apos;industryField&apos;,&apos;jobNature&apos;,&apos;companySize&apos;,&apos;companyLabelList&apos;,&apos;district&apos;,&apos;positionLables&apos;,&apos;firstType&apos;,&apos;secondType&apos;,&apos;companyFullName&apos;] rows = data with open(csvfile, &apos;w&apos;, encoding=&apos;utf8&apos;) as f: writer = csv.DictWriter(f, headers) #csv自带DictWriter方法 writer.writeheader() #writeheader自带写入头部方法 writer.writerows(rows) 123456789101112131415161718192021222324if __name__ == &apos;__main__&apos;: cityList = [u&apos;上海&apos;,u&apos;深圳&apos;,u&apos;广州&apos;,u&apos;杭州&apos;,u&apos;成都&apos;,u&apos;南京&apos;,u&apos;武汉&apos;] #选择部分城市进行分析 for city in cityList: data = [] url = &apos;https://www.lagou.com/jobs/positionAjax.json?px=default&amp;city=&#123;&#125;&amp;needAddtionalResult=false&amp;pn=&apos;.format(city) items = [&apos;companyId&apos;,&apos;createTime&apos;,&apos;companyShortName&apos;,&apos;positionAdvantage&apos;,&apos;salary&apos;,&apos;workYear&apos;,&apos;education&apos;,&apos;city&apos;, &apos;positionName&apos;,&apos;financeStage&apos;,\\ &apos;industryField&apos;,&apos;jobNature&apos;,&apos;companySize&apos;,&apos;companyLabelList&apos;,&apos;district&apos;,&apos;positionLables&apos;,&apos;firstType&apos;,&apos;secondType&apos;,&apos;companyFullName&apos;] #想抓取的岗位信息 page_nums = get_page_nums(url)[0] #该城总页码数 totalCount = get_page_nums(url)[1] #该城总岗位数 print(&apos;---开始爬取%s市岗位信息，共计%d页，总岗位数%d---&apos; % (city,page_nums,totalCount)) for pn in range(1,page_nums+1): page_size = get_page_pagesize(url,pn)[1] print(&apos;---爬取%s市岗位信息，第%d页，岗位数%d---&apos; % (city,pn,page_size)) for i in range(page_size): result = get_page_pagesize(url,pn)[0][&apos;content&apos;][&apos;positionResult&apos;][&apos;result&apos;][i] new_res = &#123;key:value for key,value in result.items() if key in items&#125; data.append(new_res) print(&apos;---成功爬取%s市岗位信息，第%d页，岗位数%d---&apos; % (city,pn,page_size)) time.sleep(20) print(&apos;---成功爬取%s市岗位所有信息！---&apos; % city) print(len(data)) file_name = city + &quot;.csv&quot; csv_writer_by_dict(file_name,data) print(&apos;END!&apos;)","tags":[{"name":"爬虫，python","slug":"爬虫，python","permalink":"http://yoursite.com/tags/爬虫，python/"}]},{"title":"nanopolish","date":"2018-06-28T01:59:00.000Z","path":"2018/06/28/project/nanopolish/","text":"nanopolish安装12345wget https://repo.continuum.io/miniconda/Miniconda2-4.5.4-Linux-x86_64.shbash Miniconda2-4.5.4-Linux-x86_64.shyes yes ...source ~/.bashrcconda install -c bioconda nanopolish=0.9.2 报错解决1error while loading shared libraries: libhdf5.so.10: cannot open shared object file: No such file or directory 123locate libhdf5.so.10#根据libhdf5.so.10位置export LD_LIBRARY_PATH=&quot;$LD_LIBRARY_PATH:/home/user_name/miniconda2/lib&quot;","tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"},{"name":"nanopolish","slug":"nanopolish","permalink":"http://yoursite.com/tags/nanopolish/"}]},{"title":"RTG-tools安装","date":"2018-06-20T09:00:00.000Z","path":"2018/06/20/project/RTG-tools安装/","text":"ant安装1234567java -version1.8.0ant -versionError: Could not find or load main class org.apache.tools.ant.launch.Launcherwget https://archive.apache.org/dist/ant/binaries/apache-ant-1.9.2-bin.tar.gztar -zxvf apache-ant-1.9.2-bin.tar.gzexport PATH=/home/tingm/software/apache-ant-1.9.2/bin:$PATH RTG-tools安装 (java 1.8以上,ant 1.9以上)RTG-tools官网RTG-tools安装123456git clone git://github.com/RealTimeGenomics/rtg-tools.gitcd rtg-tools/ant runalltestsant zip-nojrecd dist/unzip rtg-tools-3.9.1-6dde278-nojre.zip","tags":[{"name":"bioinformaticsant","slug":"bioinformaticsant","permalink":"http://yoursite.com/tags/bioinformaticsant/"},{"name":"RTG-tools","slug":"RTG-tools","permalink":"http://yoursite.com/tags/RTG-tools/"}]},{"title":"ann.giremi.sh","date":"2018-06-14T03:11:00.000Z","path":"2018/06/14/project/ann.giremi/","text":"giremi1234567891011121314151617181920212223242526272829303132333435363738394041424344#! /bin/bashfile=$1samples=`awk &apos;&#123;print $1&#125;&apos; $file`path_results=/home/tingm/rna_editing/FL-HCC/results_stargenomeFastaFiles=/home/tingm/my_refdata/Homo_sapiens_assembly38.fastapath_snpEff=/home/tingm/software/snpEffpath_giremi=/home/tingm/software/giremifor sample in $&#123;samples[@]&#125;;do xx=$(date +&quot;%y.%m.%d:%H:%M&quot;) echo $sample Start preparing SNV file in $xx # SnpEff java -Xmx4g -jar $&#123;path_snpEff&#125;/snpEff.jar GRCh38.86 $&#123;path_results&#125;/$&#123;sample&#125;.filt.vcf &gt; $&#123;path_results&#125;/$&#123;sample&#125;.ann.vcf egrep -v &quot;^#&quot; $&#123;path_results&#125;/$&#123;sample&#125;.ann.vcf &gt; $&#123;path_results&#125;/$&#123;sample&#125;.no_header.vcf awk &apos;&#123;print $1&quot;\\t&quot;$2&quot;\\t&quot;$4&quot;\\t&quot;$5&quot;\\t&quot;$8&#125;&apos; $&#123;path_results&#125;/$&#123;sample&#125;.no_header.vcf &gt; $&#123;path_results&#125;/$&#123;sample&#125;.ann.txt rm -rf $&#123;path_results&#125;/$&#123;sample&#125;.ann.vcf rm -rf $&#123;path_results&#125;/$&#123;sample&#125;.no_header.vcf # mark_snp.py mark_snp.py $&#123;path_results&#125;/$&#123;sample&#125;.ann.txt &gt; $&#123;path_results&#125;/$&#123;sample&#125;.SNV.txt rm -rf $&#123;path_results&#125;/$&#123;sample&#125;.ann.txt xx=$(date +&quot;%y.%m.%d:%H:%M&quot;) echo $sample End preparing SNV file in $xxdoneexport LD_LIBRARY_PATH=/home/tingm/bin/lib:$LD_LIBRARY_PATHfor sample in $&#123;samples[@]&#125;;do xx=$(date +&quot;%y.%m.%d:%H:%M&quot;) echo $sample Start calling RNAedits in $xx # giremi $&#123;path_giremi&#125;/giremi -f $genomeFastaFiles -l $&#123;path_results&#125;/$&#123;sample&#125;.SNV.txt -o $&#123;path_results&#125;/$&#123;sample&#125;.edits $&#123;path_results&#125;/$&#123;sample&#125;_split.bam xx=$(date +&quot;%y.%m.%d:%H:%M&quot;) echo $sample End calling RNAedits in $xxdone error1Fatal error: cannot open file &apos;giremi.r&apos;: No such file or directory","tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"},{"name":"SnpEff","slug":"SnpEff","permalink":"http://yoursite.com/tags/SnpEff/"},{"name":"giremi","slug":"giremi","permalink":"http://yoursite.com/tags/giremi/"}]},{"title":"star.gatk.sh","date":"2018-06-14T01:59:00.000Z","path":"2018/06/14/project/star.gatk/","text":"gatk call SNV 为金标准，然而时间较长。GATK目前为4.0版本。目前商业软件Sentieon准确度匹配GATK，且耗时少。samtools mpileup + bcftools，用最大似然，比GATK贝叶斯法快不少。variant分析阶段小结4-使用RNA-seq数据 star.gatk.sh1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798#! /bin/bashfile=$1samples=`awk &apos;&#123;print $1&#125;&apos; $file`path_data=/home/tingm/rna_editing/FL-HCC/raw_datapath_results=/home/tingm/rna_editing/FL-HCC/results_starpath_star=/home/yyjiang/software/STAR-2.5.3a/bin/Linux_x86_64path_gatk=/home/tingm/softwarepath_snpEff=/home/tingm/software/snpEff## download reference fa &amp; gtf file#cd /home/tingm/my_refdata#wget http://labshare.cshl.edu/shares/gingeraslab/www-data/dobin/$&#123;path_star&#125;/$&#123;path_star&#125;genomes/GENCODE/GRCh38_Gencode26/GRCh38.primary_assembly.genome.fa#wget http://labshare.cshl.edu/shares/gingeraslab/www-data/dobin/$&#123;path_star&#125;/$&#123;path_star&#125;genomes/GENCODE/GRCh38_Gencode26/gencode.v26.primary_assembly.annotation.gtf## star build index length=50-1genomeDir=/home/tingm/my_refdata/star_index_49genomeFastaFiles=/home/tingm/my_refdata/Homo_sapiens_assembly38.fastasjdbGTFfile=/home/tingm/my_refdata/gencode.v26.primary_assembly.annotation.gtfdbsnp_vcf=/home/tingm/my_refdata/dbsnp_146.hg38.vcf#mkdir $genomeDir#$&#123;path_star&#125; --runThreadN 6 --runMode genomeGenerate \\# --genomeDir $genomeDir \\# --genomeFastaFiles $genomeFastaFiles \\# --sjdbGTFfile $sjdbGTFfile \\# --sjdbOverhang 49#runDir1=/home/tingm/rna_editing/FL-HCC/results_star/1pass#mkdir -p $runDir1runDir2=/home/tingm/rna_editing/FL-HCC/results_star/2pass#mkdir -p $runDir2#mkdir -p /home/tingm/rna_editing/FL-HCC/results_star/index_2-passfor sample in $&#123;samples[@]&#125;;do xx=$(date +&quot;%y.%m.%d:%H:%M&quot;) echo $sample Start calling SNVs in $xx ## Read mapping (1st pass)# cd $runDir1# $&#123;path_star&#125;/STAR --runThreadN 8 --genomeDir $genomeDir --readFilesCommand zcat --readFilesIn $&#123;path_data&#125;/$&#123;sample&#125;_1.fq.gz $&#123;path_data&#125;/$&#123;sample&#125;_2.fq.gz --outFileNamePrefix ./$&#123;sample&#125; ## Rebuild genome index# $&#123;path_star&#125;/STAR --runThreadN 8 --runMode genomeGenerate --genomeDir /home/tingm/rna_editing/FL-HCC/results_star/index_2-pass --genomeFastaFiles $genomeFastaFiles --sjdbGTFfile $sjdbGTFfile --sjdbFileChrStartEnd $runDir1/$&#123;sample&#125;SJ.out.tab --sjdbOverhang 49 ## Read mapping (2nd pass)# cd $runDir2# $&#123;path_star&#125;/STAR --runThreadN 8 --genomeDir /home/tingm/rna_editing/FL-HCC/results_star/index_2-pass --readFilesCommand zcat --readFilesIn $&#123;path_data&#125;/$&#123;sample&#125;_1.fq.gz $&#123;path_data&#125;/$&#123;sample&#125;_2.fq.gz --outFileNamePrefix ./$&#123;sample&#125;# rm -rf $&#123;runDir1&#125;/*# rm -rf /home/tingm/rna_editing/FL-HCC/results_star/index_2-pass/* ## Adding read group information, sorting, marking duplicates and indexing gatk4.0 cd $path_results gatk --java-options &quot;-Xmx20G&quot; AddOrReplaceReadGroups -I $&#123;runDir2&#125;/$&#123;sample&#125;Aligned.out.sam -O $&#123;path_results&#125;/$&#123;sample&#125;_added_sorted.bam -SO coordinate -ID $&#123;sample&#125; -LB rna -PL illumina -PU HiSeq2500 -SM $&#123;sample&#125; gatk --java-options &quot;-Xmx20G&quot; MarkDuplicates -I $&#123;path_results&#125;/$&#123;sample&#125;_added_sorted.bam -O $&#123;path_results&#125;/$&#123;sample&#125;_dedupped.bam --CREATE_INDEX true --VALIDATION_STRINGENCY SILENT -M $&#123;path_results&#125;/$&#123;sample&#125;_dupstats # samtools faidx .fa # samtools dict .fa ## Split &apos;N&apos; Trim gatk3.7 java -Xmx20G -jar $&#123;path_gatk&#125;/GenomeAnalysisTK.jar -T SplitNCigarReads -R $genomeFastaFiles -I $&#123;path_results&#125;/$&#123;sample&#125;_dedupped.bam -o $&#123;path_results&#125;/$&#123;sample&#125;_split.bam -rf ReassignOneMappingQuality -RMQF 255 -RMQT 60 -U ALLOW_N_CIGAR_READS# rm -rf $&#123;runDir2&#125;/$&#123;sample&#125;Aligned.out.sam rm -rf $&#123;path_results&#125;/$&#123;sample&#125;_added_sorted.bam ## Variant calling gatk3.7 This step takes a long time #java -Xmx20G -jar $&#123;path_gatk&#125;/GenomeAnalysisTK.jar -T HaplotypeCaller -R $genomeFastaFiles -I $&#123;path_results&#125;/$&#123;sample&#125;_split.bam -dontUseSoftClippedBases -stand_call_conf 20.0 -D $&#123;dbsnp_vcf&#125; -o $&#123;path_results&#125;/$&#123;sample&#125;.vcf java -Xmx20G -jar $&#123;path_gatk&#125;/GenomeAnalysisTK.jar -T HaplotypeCaller -R $genomeFastaFiles -I $&#123;path_results&#125;/$&#123;sample&#125;_split.bam -dontUseSoftClippedBases -stand_call_conf 20.0 -o $&#123;path_results&#125;/$&#123;sample&#125;.vcf rm -rf $&#123;path_results&#125;/*.bai ## Variant filtering gatk3.7 java -Xmx20G -jar $&#123;path_gatk&#125;/GenomeAnalysisTK.jar -T VariantFiltration -R $genomeFastaFiles -V $&#123;path_results&#125;/$&#123;sample&#125;.vcf -window 35 -cluster 3 -filterName FS -filter &quot;FS &gt; 30.0&quot; -filterName QD -filter &quot;QD &lt; 2.0&quot; -o $&#123;path_results&#125;/$&#123;sample&#125;.filt.vcf rm -rf $&#123;path_results&#125;/*.idx xx=$(date +&quot;%y.%m.%d:%H:%M&quot;) echo $sample End calling SNVs in $xxdone########################################################################## reference website## https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5373595/ Table1.RNA-seq variant calling pipeline used in this work.## https://gatkforums.broadinstitute.org/gatk/discussion/3891/calling-variants-in-rnaseq 流程官方参考## http://www.bioinfo-scrounger.com/archives/311 流程中文参考-1## https://www.wxwenku.com/d/100689018 流程中文参考-2## http://www.huangshujia.me/2017/09/19/2017-09-19-Begining-WGS-Data-Analysis-The-pipeline.html WGS流程概念理解## https://software.broadinstitute.org/gatk/documentation/tooldocs/current/org_broadinstitute_hellbender_tools_walkers_haplotypecaller_HaplotypeCaller.php HaplotypeCaller官方参考## https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5547479/ HaplotypeCaller参数 非Edits位点参数设置## http://www.biotrainee.com/thread-1417-1-1.html HaplotypeCaller参数中文参考## https://zhuanlan.zhihu.com/p/34878471 Variant filtering参数设置## https://www.biostars.org/p/84686/ zero-base########################################################################### http://www.codexiu.cn/openstack/blog/14713/ annovar# annovar#path_annovar=/home/tingm/software/annovar/annovar#perl $&#123;path_annovar&#125;/convert2annovar.pl -format vcf4 SRR.filt.vcf &gt; SRR.avinput#perl $&#123;path_annovar&#125;/table_annovar.pl SRR.avinput /home/tingm/software/annovar/annovar/humandb/ -buildver hg19 -out anno -remove -protocol refGene,cytoBand,genomicSuperDups,esp6500siv2_all,1000g2014oct_all,1000g2014oct_afr,1000g2014oct_eas,1000g2014oct_eur,snp138,ljb26_all -operation g,r,r,f,f,f,f,f,f,f -nastring . -csvout#perl $&#123;path_annovar&#125;/table_annovar.pl SRR.avinput /home/tingm/software/annovar/annovar/humandb38/ -buildver hg38 -out SRR.anno -remove -protocol refGene,avsnp147 -operation g,f -nastring . -csvout######################################################################### log.out1234567891011121314151617181920212223242526272829303132333435SRR Start calling SNVs in 18.06.09:19:32Jun 09 19:32:40 ..... started STAR runJun 09 19:32:40 ..... loading genomeJun 09 19:37:15 ..... started mappingJun 09 19:45:24 ..... finished successfullyJun 09 19:45:24 ..... started STAR runJun 09 19:45:24 ... starting to generate Genome filesJun 09 19:47:11 ... starting to sort Suffix Array. This may take a long time...Jun 09 19:47:50 ... sorting Suffix Array chunks and saving them to disk...Jun 09 20:30:58 ... loading chunks from disk, packing SA...Jun 09 20:33:11 ... finished generating suffix arrayJun 09 20:33:11 ... generating Suffix Array indexJun 09 20:38:56 ... completed Suffix Array indexJun 09 20:38:56 ..... processing annotations GTFJun 09 20:39:29 ..... inserting junctions into the genome indicesJun 09 20:43:35 ... writing Genome to disk ...Jun 09 20:43:40 ... writing Suffix Array to disk ...Jun 09 20:44:05 ... writing SAindex to diskJun 09 20:44:06 ..... finished successfullyJun 09 20:44:06 ..... started STAR runJun 09 20:44:06 ..... loading genomeJun 09 20:44:32 ..... started mappingJun 09 20:52:27 ..... finished successfullyTool returned:0Tool returned:0There were no warn messages.There were 4 WARN messages, the first 4 are repeated below.WARN 00:04:21,914 InbreedingCoeff - Annotation will not be calculated. InbreedingCoeff requires at least 10 unrelated samples.WARN 00:04:24,522 HaplotypeScore - Annotation will not be calculated, must be called from UnifiedGenotyper, not org.broadinstitute.gatk.tools.walkers.haplotypecaller.HaplotypeCallerWARN 00:19:43,412 HaplotypeCallerGenotypingEngine - location chr1:244056927-244056928: too many alternative alleles found (7) larger than the maximum requested with -maxAltAlleles (6), the following will be dropped: CCTT.WARN 02:29:18,464 HaplotypeCallerGenotypingEngine - location chr16:2771012-2771013: too many alternative alleles found (8) larger than the maximum requested with -maxAltAlleles (6), the following will be dropped: C, CCTTTT.There were no warn messages.SRR End calling SNVs in 18.06.10:03:28","tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"},{"name":"gatk","slug":"gatk","permalink":"http://yoursite.com/tags/gatk/"},{"name":"star","slug":"star","permalink":"http://yoursite.com/tags/star/"}]},{"title":"trim.aln.count.sh & find_virus_filt.sh","date":"2018-06-14T01:53:00.000Z","path":"2018/06/14/project/trim.aln.count & find_virus_filt/","text":"trim.aln.count.sh12345678910111213141516171819202122232425262728293031323334#! /bin/bashfile=$1samples=`awk &apos;&#123;print $1&#125;&apos; $file`path_data=/home/tingm/rna_editing/FL-HCC/raw_datapath_trim=/home/tingm/rna_editing/FL-HCC/results_trimpath_cur=`pwd`path_source=/home/tingm/rna_editing/FL-HCC/results_duppath_result=/home/tingm/rna_editing/FL-HCC/results_countpath_jar=/home/ywhuang/software/picard-1.127/distfor sample in $&#123;samples[@]&#125;;do echo $sample ref=grch38 echo Star xx=$(date +&quot;%y.%m.%d:%H:%M&quot;) echo $xx trim_galore --fastqc --paired $&#123;path_data&#125;/$&#123;sample&#125;_1.fastq $&#123;path_data&#125;/$&#123;sample&#125;_2.fastq -o $&#123;path_cur&#125;/results_trim hisat2 -x /home/database/GRCh38/grch38/genome -q -1 $&#123;path_trim&#125;/$&#123;sample&#125;_1_val_1.fq -2 $&#123;path_trim&#125;/$&#123;sample&#125;_2_val_2.fq -p 2 -S $&#123;path_cur&#125;/results_hisat/$&#123;sample&#125;_$ref.sam 2&gt; $&#123;path_cur&#125;/results_hisat/$&#123;sample&#125;_$ref.summary.txt samtools view -bS $&#123;path_cur&#125;/results_hisat/$&#123;sample&#125;_$&#123;ref&#125;.sam | samtools sort -o $&#123;path_cur&#125;/results_hisat/$&#123;sample&#125;_$&#123;ref&#125;.mapped.bam java -jar $&#123;path_jar&#125;/picard.jar MarkDuplicates M=$&#123;path_cur&#125;/results_dup/$&#123;sample&#125;_dupstats REMOVE_DUPLICATES=TRUE I=$&#123;path_cur&#125;/results_hisat/$&#123;sample&#125;_$&#123;ref&#125;.mapped.bam O=$&#123;path_cur&#125;/results_dup/$&#123;sample&#125;_$&#123;ref&#125;_mapped_NODUPS.bam /home/ywhuang/software/HTSeq-0.6.1/build/scripts-2.7/htseq-count -r name -f &apos;bam&apos; -s &apos;no&apos; -o $&#123;path_result&#125;/$&#123;sample&#125;_$&#123;ref&#125;_sum.out $&#123;path_source&#125;/$&#123;sample&#125;_$&#123;ref&#125;_mapped_NODUPS.bam /home/database/GRCh38/Homo_sapiens.GRCh38.84.gtf &gt; $&#123;path_result&#125;/htseq-counts.$&#123;sample&#125;_$&#123;ref&#125;.txt echo End xx=$(date +&quot;%y.%m.%d:%H:%M&quot;) echo $xxdone find_virus_filt.sh12345678910111213141516171819202122232425262728#! /bin/bashfile=$1samples=`awk &apos;&#123;print $1&#125;&apos; $file`path_cur=/home/tingm/rna_editing/FL-HCCpath=/home/tingm/rna_editing/FL-HCC/results_virus_filt#path_cur=/home/tingm/rna_editing/HBV_cirrho#path=/home/tingm/rna_editing/HBV_cirrho/results_virus_filtfor sample in $&#123;samples[@]&#125;;do echo $sample ref=grch38 echo Star xx=$(date +&quot;%y.%m.%d:%H:%M&quot;) echo $xx samtools view -b -f 4 $&#123;path_cur&#125;/results_dup/$&#123;sample&#125;_$&#123;ref&#125;_mapped_NODUPS.bam &gt; $&#123;path_cur&#125;/results_dup/$&#123;sample&#125;_$&#123;ref&#125;_mapped_NODUPS.unmapped.bam bedtools bamtofastq -i $&#123;path_cur&#125;/results_dup/$&#123;sample&#125;_$&#123;ref&#125;_mapped_NODUPS.unmapped.bam -fq $&#123;path_cur&#125;/unmapped_fq/$&#123;sample&#125;_1.fq -fq2 $&#123;path_cur&#125;/unmapped_fq/$&#123;sample&#125;_2.fq java -cp bin FastViromeExplorer -1 $&#123;path_cur&#125;/unmapped_fq/$&#123;sample&#125;_1.fq -2 $&#123;path_cur&#125;/unmapped_fq/$&#123;sample&#125;_2.fq -i /home/tingm/software/FastViromeExplorer/eukaryotic-virus-kallisto-index-k31.idx -o $&#123;path&#125;/$&#123;sample&#125;_output echo End xx=$(date +&quot;%y.%m.%d:%H:%M&quot;) echo $xxdone","tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"},{"name":"trim_galore","slug":"trim-galore","permalink":"http://yoursite.com/tags/trim-galore/"},{"name":"hisat2","slug":"hisat2","permalink":"http://yoursite.com/tags/hisat2/"},{"name":"HTSeq","slug":"HTSeq","permalink":"http://yoursite.com/tags/HTSeq/"},{"name":"FastViromeExplorer","slug":"FastViromeExplorer","permalink":"http://yoursite.com/tags/FastViromeExplorer/"}]},{"title":"giremi, gatk下载使用","date":"2018-06-04T04:30:00.000Z","path":"2018/06/04/project/giremi及gatk下载/","text":"giremigiremi下载后使用报错one. 从Giremi官网下载giremi的zip文件并解压two. 加入 ~/.bashrc路径three. giremi命令报错: giremi: /lib64/libc.so.6: version `GLIBC_2.14’ not found (required by giremi) 查看系统glibc支持的版本12strings /lib64/libc.so.6 |grep GLIBC_ rpm -qa |grep glibc 最高支持GLIBC_2.12 下载glibc-2.14设置 Linux 的 LD_LIBRARY_PATH 变量1export LD_LIBRARY_PATH=/usr/local/lib 123456789tar xvf glibc-2.14.tar.gzcd glibc-2.14mkdir build cd build../configure --prefix=/home/tingm/binmake -j4make install下面路径修改导致java1.8使用出现问题export LD_LIBRARY_PATH=&quot;/home/tingm/bin/lib&quot; gatk及其依赖packageR安装参考1234wget https://cran.usthb.dz/src/base/R-3/R-3.2.5.tar.gztar -zxvf R-3.2.5.tar.gz./configure --prefix=/home/tingm/R-3.2.5 --with-readline=yes --with-libpng=yes --with-x=nomake &amp;&amp; make install gatk12wget https://github.com/broadinstitute/gatk/releases/download/4.0.4.0/gatk-4.0.4.0.zipunzip gatk-4.0.4.0.zip GATK4 command-line syntaxjava–jvm启动的参数gatk best-practicescalling-variants-in-rnaseqGATK calling variants in RNA-seq","tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"},{"name":"giremi","slug":"giremi","permalink":"http://yoursite.com/tags/giremi/"},{"name":"gatk","slug":"gatk","permalink":"http://yoursite.com/tags/gatk/"}]},{"title":"samtools","date":"2018-05-16T12:00:00.000Z","path":"2018/05/16/project/samtools命令/","text":"samtoolssamtools view -f 4 file.bam &gt; unmapped.samsamtools view -b -f 4 file.bam &gt; unmapped.bamsamtools view -b -F 4 file.bam &gt; mapped.bam Question: How To Filter Mapped Reads With Samtoolssamtools命令讲解List_of_RNA-Seq_bioinformatics_tools","tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"},{"name":"samtools","slug":"samtools","permalink":"http://yoursite.com/tags/samtools/"}]},{"title":"Linux Tips记录","date":"2018-05-15T08:00:00.000Z","path":"2018/05/15/Linux/Linux_Tips/","text":"set set 所有本地定义的Shell变量；env 用来显示环境变量；export 用来显示和设置环境变量set 显示当前shell的变量，包括当前用户的变量；env 显示当前用户的变量；export 显示当前导出成用户变量的shell变量 du1234输出当前目录下上G和T的目录所使用的空间du -h --max-depth=1 /home |grep [TG] |sort``` #### 占用内存资源/CPU最多的前 10 个进程 [参考](https://linux.cn/article-9373-1.html) ps -auxf | sort -nr -k 4 | head -10ps -auxf | sort -nr -k 3 | head -1012345678910111213141516#### nohup&gt;jobs命令用于显示当前终端关联的后台任务情况&gt;bg [%n]用于将后台暂停的进程继续运行。&gt;fg [%n]用于将后台执行的进程变成前台进程。&gt;kill %n用于杀掉指定的任务#### top&gt;获取到top的进程ID为21223，父ID17594&gt;ps -ef | grep top&gt;pstree命令来看二者关系&gt;pstree -H 21223| grep top&gt;&apos;bash shell&apos; 和 &apos;top&apos; 进程处在同一个会话期 , 父 ID 是17594&gt;ps -xj|grep 17594#### 清除ZOMBIE（僵尸）进程看各个状态的进程 ps -a -o pid,ppid,stat,command进程级别ps axwf -eo pid,stat | grep D线程级别ps -eL -eo pid,stat,pcpu | grep D1234&gt;kill –18 PPID （PPID是其父进程）&gt;或者kill –15 PID1 PID2(PID1,PID2是僵尸进程的父进程的其它子进程)，然后再kill父进程：kill –15 PPID 这样僵尸进程就可能被完全杀掉了#### 计算文件夹下文件目录数量、统计字符数 某目录下文件的个数（不包括子目录）ls -l |grep “^-“|wc -l某目录下文件的个数（包括子目录）ls -lR|grep “^-“|wc -l某文件夹下目录的个数（包括子目录）ls -lR|grep “^d”|wc -l统计指定文件中包含某字符串的行数、字数和字节数grep ‘b’ file | wc1#### vim :nohl 删除高亮:/ term search:n,$s/vivian/sky/g 替换第 n 行开始到最后一行中每一行所有 vivian 为 sky:s#vivian/#sky/# 替换当前行第一个 vivian/ 为 sky/12#### shell字符串截取与拼接[bash shell学习之变量](http://blog.51cto.com/lovelace/1211141) var=http://www.test.com/lalala123.htmlecho ${var#//} 左起/ 向左删除echo ${var##/} 右起/ 向左删除echo ${var%/} 右起/ 向右删除echo ${var%%/} 左起/ 向右删除echo ${var:0:5} 左起 第0个字符到第4个echo ${var:0-7} 右起 第0个字符到第6个value1=hello 赋值，不能有空格value2=${value1}”world” 拼接echo ${value2}12345678#### shell 2&gt;&amp;1 使用 [参考](http://www.cnblogs.com/yangyongzhi/p/3364939.html)&gt;cat food 2&gt;&amp;1 &gt;file ：错误输出到终端，标准输出被重定向到文件file&gt;cat food &gt;file 2&gt;&amp;1 ：标准输出被重定向到文件file，然后错误输出也重定向到和标准输出一样，所以也错误输出到文件file#### rename##### rename命令是哪个版本man rename##### C 以log开头的所有文件中的log字符替换为historyrename log history log*1想实现类似perl rename 功能，自建perl脚本 #!/usr/bin/perl -wuse strict; use Getopt::Long;Getopt::Long::Configure(‘bundling’); my ($verbose, $no_act, $force, $op); die “Usage: rename [-v] [-n] [-f] perlexpr [filenames]\\n” unless GetOptions( ‘v|verbose’ =&gt; \\$verbose, ‘n|no-act’ =&gt; \\$no_act, ‘f|force’ =&gt; \\$force, ) and $op = shift; $verbose++ if $no_act; if (!@ARGV) { print “reading filenames from STDIN\\n” if $verbose; @ARGV = ; chop(@ARGV);} for (@ARGV) { my $was = $; eval $op; die $@ if $@; next if $was eq $; # ignore quietly if (-e $ and !$force) { warn “$was not renamed: $ already exists\\n”; } elsif ($noact or rename $was, $) { print “$was renamed as $\\n” if $verbose; } else { warn “Can’t rename $was $: $!\\n”; }}12[源码地址](https://gist.github.com/keymon/995151) 偶尔打不开##### perl 正则 以 .bak结尾，把.bak去掉rename ‘s/.bak$//‘ .bak把所有文件名内含有大小字母的修改为小写字母rename ‘y/A-Z/a-z/‘ 文件名去空格rename ‘s/[ ]+/_/g’ *1#### paste 合并两列，-d指定域分隔符为：paste -d: file1 file2合并两行paste -s file1 file2选项（-），对每一个（-），从标准输入中读一次数据。如，空格作域分隔符，以6列格式显示目录列表 ls /etc | paste -d” “ - - - - - -1#### awk [参考](http://man.linuxde.net/awk) awk -F: ‘{print NR,$1,$2,$3,$4,$5}’ OFS=’\\t’ helloworld.sh //制表符分隔输出前5个字段，并打印行号awk -F’[:#/]’ ‘{print NF}’ helloworld.sh //指定三个分隔符，并输出每行字段数12#### 软件下载[tar.gz,tar.bz2下载参考](http://www.cnblogs.com/huangfenghit/archive/2011/02/17/1957057.html) tar jxvf filename.tar.bz2tar zxvf filename.tar.gz./configuremakemake installmake clean卸载make uninstall1234567```i安装软件，v检测套件是否安装正确rpm -ivh filename.rpm卸载软件rpm -e 软件名rpm --rebuild filename.src.rpm rpm -ivh /usr/src/regflag/RPMS/i386/filename.rpm 12dpkg -i filename.debdpkg -e filename 12unrar filename.rarunzip filename.zip 32/64位CentOS 安装记录虚拟机：VirtualBox for windows hosts http://www.virtualbox.org/wiki/Downloads新建Lunixy用的虚拟机：CentOS下载CentOS镜像 http://Iso.lishiming.net 32/64设置虚拟光驱：找到镜像安装CentOSg出现问题：内存不能written改成安装VMware：VMware——&gt;CentOS开虚拟机——&gt;登录——&gt;application 注意联网MobaXterm http://mobaxterm.mobatek.net/download.html 查看Linux系统 uname -a 查看内核/操作系统/CPU信息 head -n 1 /etc/issue 查看操作系统版本 cat /proc/cpuinfo 查看CPU信息 hostname 查看计算机名 lspci -tv 列出所有PCI设备 lsusb -tv 列出所有USB设备 lsmod 列出加载的内核模块 env 查看环境变量资源 free -m 查看内存使用量和交换区使用量 df -h 查看各分区使用情况 du -sh &lt;目录名&gt; 查看指定目录的大小 grep MemTotal /proc/meminfo 查看内存总量 grep MemFree /proc/meminfo 查看空闲内存量 uptime 查看系统运行时间、用户数、负载 cat /proc/loadavg 查看系统负载磁盘和分区 mount | column -t 查看挂接的分区状态 fdisk -l 查看所有分区 swapon -s 查看所有交换分区 hdparm -i /dev/hda 查看磁盘参数(仅适用于IDE设备) dmesg | grep IDE 查看启动时IDE设备检测状况网络 ifconfig 查看所有网络接口的属性 iptables -L 查看防火墙设置 route -n 查看路由表 netstat -lntp 查看所有监听端口 netstat -antp 查看所有已经建立的连接 netstat -s 查看网络统计信息进程 ps -ef 查看所有进程 top 实时显示进程状态用户 w 查看活动用户 id &lt;用户名&gt; 查看指定用户信息 last 查看用户登录日志 cut -d: -f1 /etc/passwd 查看系统所有用户 cut -d: -f1 /etc/group 查看系统所有组 crontab -l 查看当前用户的计划任务服务 chkconfig –list 列出所有系统服务 chkconfig –list | grep on 列出所有启动的系统服务程序 rpm -qa 查看所有安装的软件包普通用户修改密码12passwd​` ```","tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"},{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"}]},{"title":"安装picard、FastViromeExplorer使用","date":"2018-05-11T08:54:00.000Z","path":"2018/05/11/project/安装picard、FastViromeExplorer使用/","text":"安装picard报错 安装参考1git clone https://github.com/broadinstitute/picard.git 报错如下123Initialized empty Git repository in /home/tingm/software/picard/.git/error: while accessing https://github.com/broadinstitute/picard.git/info/refsfatal: HTTP request failed 安装2.9.5版本git1234567wget https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.9.5.tar.gztar zxvf git-2.9.5.tar.gzcd git-2.9.5/makemake installwhereis git 旧版本gitvim ~、.bash_profile 添加路径 仍旧报错12Cloning into &apos;picard&apos;...fatal: unable to access &apos;https://github.com/broadinstitute/picard.git/&apos;: SSL connect error 设置git、添加SSH keys、git clone已存在GitHub上的Repository123456git config --global user.name &quot;Your Name&quot;git config --global user.email &quot;youremail@domain.com&quot;ssh-keygen -t rsa -C &quot;youremail@163.com&quot;vim ~/.ssh/id_rsa.pubssh -T git@github.comgit clone git@github.com:michaelliao/gitskills.git 更换下载路径 picard/issues/659123git clone git@github.com:broadinstitute/picard.gitcd picard/./gradlew shadowJar FastViromeExplorer使用1java -cp bin FastViromeExplorer -1 /home/tingm/test/test1.fq -2 /home/tingm/test/test2.fq -i /home/tingm/software/FastViromeExplorer/eukaryotic-virus-kallisto-index-k31.idx -o /home/tingm/test/test-output 问题：如何更改路径，使得不在FastViromeExplorer文件夹下也可运行 picard RevertSam1java -jar /home/tingm/software/picard/build/libs/picard.jar RevertSam I=/home/tingm/rna_editing/hbv/results_hisat/SRR6080227_grch38.mapped.bam O=test.bam bedtools bamtofastq -i test.bam -fq test.end1.fq -fq2 test.end2.fq","tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"},{"name":"FastViromeExplorer","slug":"FastViromeExplorer","permalink":"http://yoursite.com/tags/FastViromeExplorer/"},{"name":"picard","slug":"picard","permalink":"http://yoursite.com/tags/picard/"},{"name":"git","slug":"git","permalink":"http://yoursite.com/tags/git/"}]},{"title":"Linux路径问题","date":"2018-05-11T05:00:00.000Z","path":"2018/05/11/Linux/linux路径问题/","text":"问题：下载1.5版本samtools后仍调用1.19版本添加1.5版本路径后仍调用旧版本12vim ~/.bashrcPATH=$PATH:/home/tingm/software/samtools-1.5/ 查看调用1.19版本的绝对路径1which samtools bash命令优先级别名(alias)——复合命令——函数——内部命令(help)——缓存命令(hash -r)——外部命令(echo $PATH)type:确定命令是否为内部命令或外部命令1type samtools 外部命令samtools is /home/software/bin/samtools，可能外部命令中存在多个samtools路径，先调用了前面的samtools 查看PATH12exportecho $PATH export添加路径 只针对当前shell1export PATH=$PATH:新添加的路径 vim ~/.bash_profile添加路径 永久有效查找命令顺序是按环境变量顺序进行，第一次找到查询命令即调用执行。想执行的samtools命令path中有旧版调用，所以需把新版samtools路径/写在$PATH前面1export PATH=/home/tingm/software/samtools-1.5/:$PATH python路径可类比更改为python3java7路径改为java8 参考linux关于bashrc与profile的区别Linux可执行文件安装路径 环境变量","tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"},{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"samtools","slug":"samtools","permalink":"http://yoursite.com/tags/samtools/"}]},{"title":"L9.模型优化与融合","date":"2018-05-10T10:00:02.000Z","path":"2018/05/10/数据分析实战/L9.模型优化与融合/","text":"模型融合投票器模型融合、Bagging、RandomForest Mark:继续机器学习部分学习，完成作业Test3作业，加深理解，整理笔记","tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"L8.机器学习进阶","date":"2018-05-09T10:00:02.000Z","path":"2018/05/09/数据分析实战/L8.机器学习进阶/","text":"初步了解head() info() describe() shape 缺失值处理pd.DataFrame.fillna sklearn Imputer 数值型幅度变换 apply+numpy sklearn.preprocessing scaler统计 max min quantile四则运算高次特征与交叉特征 preprocessing.PolynomialFeatures离散化/分箱/分桶 pandas cut pandas qcut cut将根据值本身来选择箱子均匀间隔，qcut是根据这些值的频率来选择箱子的均匀间隔 OneHot encoding/独热向量编码 pandas get_dummies OneHotEncoder() 时间型日期处理 pandas to_datetime取出关键时间信息 dt.month dt.dayofweek dt.dayofyear 文本型词袋模型 CountVectorizerTF-IDF TfidfVectorizer 特征选择过滤式/Filter SelectKBes包裹型/wrapper RFE嵌入式/Embedded SelectFromModel 网格搜索和交叉验证 网格搜索法算法就是通过交叉验证的方法去寻找最优的模型参数 使用sklearn做单机特征工程网格搜索（参数选择）交叉验证与网格搜索算法","tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"Test1","date":"2018-05-09T09:00:02.000Z","path":"2018/05/09/练习/Test1/","text":"有如下json文件，取出http开头dcm结尾的下载链接（python）json文件网页搜索json在线解析查看规律12345678910111213141516171819202122import jsonimport iodef resolve(file_name): with io.open(file_name, &apos;r&apos;, encoding=&apos;windows-1252&apos;) as file: for line in file: Data = json.loads(line) return Datadef write_file(file_name,Data): serieslist = Data[&apos;data&apos;][0][&apos;SeriesList&apos;] with open(file_name,&quot;a&quot;) as f: for series in serieslist: imagelist = series[&apos;ImageList&apos;] for image in imagelist: f.write(image[&apos;ObjectKey&apos;]+&apos;\\n&apos;) f.close() c = resolve(&quot;c.json&quot;)write_file(&quot;c_https.txt&quot;,c)b = resolve(&quot;b.json&quot;)write_file(&quot;b_https.txt&quot;,b) shell12cat c.json | tr &apos;&quot;&apos; &apos;\\n&apos; | grep &apos;http:&apos; &gt; c_https.txtcat b.json | tr &apos;&quot;&apos; &apos;\\n&apos; | grep &apos;http:&apos; &gt; b_https.txt","tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"实战7-QQ答疑","date":"2018-05-03T13:40:00.000Z","path":"2018/05/03/数据分析实战/实战7-QQ答疑/","text":"123456789101112131415161718192021from sklearn import datasetsimport numpy as npimport pydotplusfrom IPython.display import Imagefrom IPython.display import displayif Version(sklearn_version) &gt;= &apos;0.18&apos;: try: import pydotplus dot_data = export_graphviz( tree, out_file=None, feature_names=[&apos;petal length&apos;,&apos;petal length&apos;], class_names=[&apos;setosa&apos;,&apos;versicolor&apos;,&apos;virginica&apos;], filled=True, rounded=True) graph = pydotplus.graph_from_dot_data(dot_data) display(Image(graph.create_png())) except ImportError: print(&apos;pydotplus is not installed.&apos;) NameError: name ‘Version’ is not definedhow to check which version of nltk, scikit learn installed?12import sklearnif sklearn.__version__ &gt;= &apos;0.18&apos;: InvocationException: GraphViz’s executables not foundWhy is pydot unable to find GraphViz’s executables in Windows 8?windows下Graphviz安装及入门教程123import sysimport os os.environ[&quot;PATH&quot;] += os.pathsep + &apos;C:/Program Files (x86)/Graphviz2.38/bin/&apos; scikit-learn决策树结果的可视化 在本地notebook上运行可行，在课程平台上InvocationException: GraphViz’s executables not found问题无法解决，没办法操作安装Graphviz 稀牛学院数据科学实训营 助教土豆老师QQ答疑*","tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"L7.机器学习初识","date":"2018-04-29T05:41:02.000Z","path":"2018/04/29/数据分析实战/L7.机器学习初识/","text":"分类算法之朴素贝叶斯分类Naive Bayesian classification支持向量机通俗导论（理解SVM的三层境界)真正理解拉格朗日乘子法和 KKT 条件SVM解二分类,多分类,及后验概率输出 记录几个CS229机器学习课程笔记博客Jiahe的博客张雨石的博客","tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"Test2.可视化","date":"2018-04-27T14:00:00.000Z","path":"2018/04/27/数据分析实战/Test2.可视化/","text":"参考资料Python matplotlib 练习题Python可视化seaborn练习题Python数据分析之seaborn常用方法","tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"L6.seaborn可视化 要点记录","date":"2018-04-26T13:00:00.000Z","path":"2018/04/26/数据分析实战/L6.seaborn可视化/","text":"np.random.seed(5) One.给随机数对象一个seed值(即test)，用于产生随机序列。Two.对同一个种子值，之后产生的随机数序列一样。Three.通常是把时间秒数等变化值作为种子值，达到每次运行产生的随机系列都不一样。Four.seed() 省略参数，意味着使用当前系统时间生成随机数。Five.设置的seed()值仅一次有效。 np.linspace(0, 14, 100) linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None)linspace(样本起始值，样本终止值，样本个数，为真则stop对应值包含在样本中，为真则返回样本及步长，样本数据类型) 整体参数设置123sns.set_style(&quot;ticks&quot;) #风格sns.set_context(&quot;paper&quot;) #尺度sns.color_palette(&quot;hls&quot;, 10)#颜色 图形绘制要点回归sns.lmplot(x=”size”, y=”tip”, data=tips, x_estimator=np.mean)#离散取值上用均值和置信区间代替散点 拟合曲线：lmplot(x, y, data, ci, x_estimator, robust, logistic, order)残差曲线：residplot()子图绘制：lmplot(hue, row, col)尺寸控制：lmplot(col_wrap, size, aspect) 分布 distplot(bins, rug)kdeplot(bw, fit)joinplot(kind)pairplot 分类 swarmplot(data), stripplot(data)boxplot(data), voilinplot(data, scale, split, inner)barplot(data, hue), pointplot(data, hue)factorplot(col, kind) seaborn 以上来自稀牛学院数据科学实训营 常老师关于seaborn的讲解","tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"Chapter 4 & 5","date":"2018-04-25T04:00:00.000Z","path":"2018/04/25/Beginning Perl (free)学习笔记/perl_learning.3/","text":"if &amp; unlessif(){}Logical operators revisitedfalse: “ “, 0, “0”, (), undefined value, everything else is trueexists $hash{$scalar} Comparing Numbers$a &gt; $b, &lt;, ==, != Comparing Strings$a gt $b, le, eq, ne Logical Conjunctionsand or not Multiple Choiceif elsif else Unless(){}If this doesn’t exist, then this happens; Unless this exists, this happens Loopsfor &amp; foreach注意my1234567891011#!/usr/bin/perluse warnings;use strict;my @array = (1, 3, 5, 7, 9);my $i;for $i (@array) &#123; print &quot;This element: $i\\n&quot;;&#125;foreach $i (@array) &#123; print &quot;This element: $i\\n&quot;;&#125; 123456789101112#!/usr/bin/perluse warnings;use strict;my @array = (1, 3, 5, 7, 9);foreach my $i (@array) &#123; print &quot;This element: $i\\n&quot;;&#125;my $j = &quot;End&quot;;foreach $j (@array)&#123; print &quot;This element: $j\\n&quot;;&#125;print &quot;$j\\n&quot;; 注意$_12345678#!/usr/bin/perluse warnings;use strict;my %hash = (car =&gt; &apos;voiture&apos;, coach =&gt; &apos;cat&apos;);for (keys %hash)&#123; print &quot;English: $_\\n&quot;; print &quot;French: $hash&#123;$_&#125;\\n\\n&quot;&#125; Change the iterator, make a copy1234567#!/usr/bin/perluse warnings;use strict;foreach (1, 2, 3) &#123; my $i = $_; # $i++;&#125; @ARGV123456#!/usr/bin/perluse warnings;use strict;my $total = 0;$total += $_ for @ARGV;print &quot;The total is $total\\n&quot;; While123456789#!/usr/bin/perluse warnings;use strict;while (&lt;STDIN&gt;) &#123; chomp; die &quot;!enod llA\\n&quot; unless $_; my $sdrawkcab = reverse $_; print &quot;$sdrawkcab\\n&quot;;&#125; 12345#!/usr/bin/perluse warnings;use strict;my $countdown = 5;print &quot;Counting down: $countdown\\n&quot; while $countdown-- &gt;0; until1234567#!/usr/bin/perluse warnings;use strict;my $countdown = 5;until ($countdown-- == 0) &#123; print &quot;Counting down: $countdown\\n&quot;;&#125; Controlling loop flow12345678910111213141516#!/usr/bin/perluse warnings;use strict;my $stopnow = 0; #flaguntil ($stopnow) &#123;print &quot;!enod llA\\n&quot;; $_ = &lt;STDIN&gt;; chomp;if ($_) &#123; my $sdrawkcab = reverse $_; print &quot;$sdrawkcab\\n&quot;; &#125; else &#123; $stopnow = 1; &#125;&#125;print &quot;!enod llA\\n&quot;; Breaking Out &amp; Going onto the nextlast &amp; next 正则Example1234567#!/usr/bin/perluse warnings;use strict;$_ = &quot;Nobody wants to hurt you... &apos;cept, I do hurt people sometimes, Case.&quot;;if ($_ =~ /people/) &#123; print &quot;Hooray! Found the word &apos;people&apos;\\n&quot;;&#125; 转义字符在PERL5中可用字符对\\Q和\\E来转义，类似\\ lists&amp;hashs学习资料Beginning Perl (free)——Chapter 4: Loops and Decisionsperl 入门介绍(2)正则学习资料Beginning Perl (free)——Chapter 5: Regular Expressions正则表达式的基本用法Perl 正则表达式Perl 特殊变量Learn Perl in about 2 hours 30 minutes","tags":[{"name":"perl","slug":"perl","permalink":"http://yoursite.com/tags/perl/"}]},{"title":"Chapter 3","date":"2018-04-24T06:00:00.000Z","path":"2018/04/24/Beginning Perl (free)学习笔记/perl_learning.2/","text":"Lists if you’re ever printing long strings, consider splitting it up into a list of smaller strings on separate lines as we’ve done above. More Complex Lists1234#!/usr/bin/perluse warnings;use strict;print (&apos;one&apos;,&apos;two&apos;,&apos;three&apos;,&apos;four&apos;); Accessing List Values123456789101112131415#!/usr/bin/perluse warnings;use strict;print ((&apos;salt&apos;, &apos;vinegar&apos;, &apos;mustard&apos;, &apos;pepper&apos;)[2]);print &quot;\\n&quot;;#!/usr/bin/perluse warnings;use strict;my $month = 3;print qw(January February MarchApril May JuneJuly August SeptemberOctober November December)[$month]; List Slices123456#!/usr/bin/perluse warnings;use strict;print((19, 68, 47, 60, 53, 51, 58, 55, 47)[4, 5, 6]);print &quot;\\n&quot;;print((19, 68, 47, 60, 53, 51, 58, 55, 47)[(4, 5, 6)]); Ranges can’t mix letters and numbers within a range123@var_1 = (1 .. 6);@var_2 = reverse(&apos;n&apos; .. &apos;z&apos;);(qw(Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec)[-2..1]) Arrays store a list in an array just like we store a scalar literal into a scalar variable:@array = (1,2,3); Assigned an array to a scalar variable12345678910111213#!/usr/bin/perluse warnings;use strict;my @array1;my $scalar1;@array1 = qw(Monday Tuesday Wednesday Thursday Friday Saturday Sunday);$scalar1 = @array1;print &quot;Array 1 is @array1\\nScalar 1 is $scalar1\\n&quot;;my @array2;my $scalar2;@array2 = qw(Winter Spring Summer Autumn);$scalar2 = @array2;print &quot;Array 2 is @array2\\nScalar 2 is $scalar2\\n&quot;; Scalar vs List Context12345678910111213#!/usr/bin/perluse warnings;use strict;my @array1 = (10, 20, 30);my $scalar;my @array2;@array2 = @array1;$scalar = @array1;print @array2,&quot;\\n&quot;;print &quot;@array2\\n&quot;;print $scalar,&quot;\\n&quot;;print scalar @array1;print &quot;\\n&quot;; Adding to an Array123my @array1 = (1, 2, 3);my @array2;@array2 = (@array1, 4, 5, 6); Accessing an ArrayScalar value @array[1] better written as $array[1]1234567#!/usr/bin/perluse warnings;use strict;my @array = (1, 3, 5, 7, 9);print @array[1];print $array[1];print @array[2..3]; Running through Arrays123456789101112131415#!/usr/bin/perluse warnings;use strict;my @array = qw(American Asia Europe Africa);my $element;for $element (@array) &#123; print $element, &quot;\\n&quot;&#125;#!/usr/bin/perluse warnings;use strict;my @array = (10, 20, 30, 40);print &quot;Before: @array\\n&quot;;for (@array) &#123; $_ *= 2&#125;print &quot;After: @array\\n&quot;; $#questions is the index of the highest element in the @question array注意scalar @array和$#array的区分 Pop and Push &amp; Shift and Unshift &amp; Sort12345@array = (@array, $scalar);$scalar = pop @array;push @array,$scalar;unshift(@array,$scalar);shift @array; if sort numbers there is a problem12345678#!/usr/bin/perluse warnings;use strict;my @unsorted = (1, 2, 11, 24, 3, 36, 40, 4);my @string = sort &#123; $a cmp $b&#125; @unsorted;my @number = sort &#123; $a &lt;=&gt; $b&#125; @unsorted;print &quot;@string\\n&quot;;print &quot;@number\\n&quot;; HashesCreating a hash12%hash = (&quot;a&quot;,&quot;xiaom&quot;,&quot;b&quot;,&quot;xiaohua&quot;);%hash = (&quot;a&quot;=&gt;&quot;xiaom&quot;,&quot;b&quot;=&gt;&quot;xiaohua&quot;); 1234567891011#!/usr/bin/perluse warnings;use strict;my @array;my %hash;@array = qw(Gary Dallas Lucy Exeter);%hash = @array;print @array,&quot;\\n&quot;;print %hash,&quot;\\n&quot;;@array = %hash;print @array,&quot;\\n&quot;; Adding, Changing, and Taking Values Away12$hash&#123;Eva&#125; = &quot;Denver&quot;;delete $hash&#123;Eva&#125;; Accessing multiple valueskeys %hashvalues %hash 学习资料Beginning Perl——Chapter 3: Lists and HashesPerl 数组Perl 哈希Perl入门Perl 入门介绍——一些常用的数据类型","tags":[{"name":"perl","slug":"perl","permalink":"http://yoursite.com/tags/perl/"}]},{"title":"Intro And Chapter 1-2","date":"2018-04-24T01:00:00.000Z","path":"2018/04/24/Beginning Perl (free)学习笔记/perl_learning.1/","text":"为学习解决FASTA的一些操作问题开始学习perl Intro(perl版本 v5.10.1)how to get help123456789perldoc -h #Display this help messageman perldoc#see information of functionperldoc -f print#search frequently questionsperldoc -q print#modules: filesperldoc Text::wrap Chapter 1First perl program123#!/usr/bin/perl -wprint &quot;Hello, world.\\n&quot;;&gt;perl hello1.plx For Perl 5.6.x and higher -w -&gt; use warnings;123456#!/usr/bin/perl use warnings;print &quot;Hello, world.\\n&quot;;&gt;perl hello2.plxprint &quot;Here &quot;,&quot;we &quot;,&quot;print &quot;,&quot;several &quot;,&quot;strings.\\n&quot;;print(&quot;Here &quot;,&quot;we &quot;,&quot;print &quot;,&quot;several &quot;,&quot;strings.\\n&quot;); 交互式1perl -e &apos;print &quot;Hello World\\n&quot;&apos; Chapter 2Types of dataNumbers: integers and floating-point numbersFor very large integers like 25,000,000123#!/usr/bin/perluse warnings;print 25_000_000,&quot; &quot;,-4,&quot;\\n&quot;; 进制123456#!usr/bin/perluse warnings;$var0 = 0b11111111; # 二进制$var1 = 0377; # 八进制$var2 = 0xFF; # 十六进制print $var0,&quot; &quot;,$var1,&quot; &quot;,$var2,&quot;\\n&quot;; For floating-point numbers: what we put in is only good to 14 decimal places123#!/usr/bin/perluse warnings;print 3.141592653589793238462643383279,&quot; &quot;,-4,&quot;\\n&quot;; StringsOne. “”和’’的区别The double-quoted string will have its escape sequences processed, and the single-quoted string will not. Two. 注意特例123#!/usr/bin/perluse warnings;print &apos;ex\\\\ er\\\\&apos; , &apos; ci\\&apos; se\\&apos;&apos; , &quot;\\n&quot;; Aternative delimiters: qq内容需要内嵌引号（单引号或双引号）时，不需要加转义符1234567#!usr/bin/perluse warnings;print qq/&apos;&quot;Hi,&quot;said Jack&apos;\\n/;print qq|&apos;&quot;Hi,&quot;said Jack&apos;\\n|;print qq#&apos;&quot;Hi,&quot;said Jack&apos;\\n#;print qq(&apos;&quot;Hi,&quot;said Jack&apos;\\n);print qq&lt;&apos;&quot;Hi,&quot;said Jack&apos;\\n&gt;; Here-documents12345678910111213#!/usr/bin/perl$a = 10;$var = &lt;&lt;&quot;EOF&quot;;使用双引号a = $aEOFprint &quot;$var\\n&quot;; $var = &lt;&lt;&apos;EOF&apos;;使用单引号a = $aEOFprint &quot;$var\\n&quot;; Converting between nums and strings123456#!/usr/bin/perluse warnings;print &quot;0x30\\n&quot;;print &quot;030\\n&quot;;print hex(&quot;0x30&quot;),&quot;\\n&quot;;print oct(&quot;030&quot;),&quot;\\n&quot;; OperatorsBitwise operator&amp; ‘and’ | ‘or’ ^ ‘exclusive or’ ~ ‘not’1perl -e &apos;print ~85,&quot;\\n&quot;&apos; get a much bigger number, it’s because the computer represents numbers internally with 64 bitsinstead of 32, and Perl has been configured to take advantage of this. Truth or Falsehood123456perl -e &apos;print 2==2,&quot;\\n&quot;&apos; #1#!/usr/bin/perluse warnings;print 6 &lt;=&gt; 9,&quot;\\n&quot;; #-1print 6 &lt;=&gt; 6,&quot;\\n&quot;; #0print 9 &lt;=&gt; 6,&quot;\\n&quot;; #1 Boolean Operators &amp;&amp; ‘and’ || ‘or’ ! ‘not’Perl uses a technique called lazy evaluation. String Operators1234#!/usr/bin/perluse warnings;print&quot;Four sevens are &quot;. 4*7 .&quot;\\n&quot;; #number and stringprint &quot;GO! &quot;x3, &quot;\\n&quot;; #x repetition Converting Strings to Numbers+自动将左右转换为数字，.自动将左右转换为字符串12345678#!/usr/bin/perl#use warnings;print&quot;12 monkeys&quot; + 0, &quot;\\n&quot;;print &quot;Eleven to fly&quot; + 0, &quot;\\n&quot;;print &quot;UB40&quot; + 0, &quot;\\n&quot;;print &quot;-20 10&quot; + 0, &quot;\\n&quot;;print &quot;0x30&quot; + 0, &quot;\\n&quot;;print &quot;030&quot; + 0,&quot;\\n&quot;; Converting Numbers to Strings12345#!/usr/bin/perl$foo = v102.111.111;$martin = v77.97.114.116.105.110;print &quot;foo = $foo\\n&quot;;print &quot;martin = $martin\\n&quot;; String Comparison One. ord() function, which tells us where in the (ASCII) order it comes.Two. less than, lt. greater than, gt. equal to, . not equal, ne. ge and le for ‘greater than or equal to’ and ‘less than and equal to’. The three-way-comparison becomes cmp.1234567#!/usr/bin/perl#use warnings;print ord(&quot;chicken&quot;),&quot; &quot;,ord(&quot;egg&quot;),&quot; &quot;,&quot;chicken&quot; cmp &quot;egg&quot;,&quot;\\n&quot;;print ord(&quot;dog&quot;),&quot; &quot;,ord(&quot;cat&quot;),&quot; &quot;,&quot;dog&quot; gt &quot;cat&quot;,&quot;\\n&quot;;print ord(&quot;^&quot;),&quot; &quot;,ord(&quot;+&quot;),&quot; &quot;,&quot;^&quot; lt &quot;+&quot;,&quot;\\n&quot;;print ord(&quot;four&quot;),&quot; &quot;,ord(&quot;six&quot;),&quot; &quot;,&quot;four&quot; eq &quot;six&quot;,&quot;\\n&quot;;print ord(&quot;four&quot;),&quot; &quot;,ord(&quot;six&quot;),&quot; &quot;,&quot;four&quot; == &quot;six&quot;,&quot;\\n&quot;; #convert to 0 VariablesScalars12345678910#!/usr/bin/perluse warnings;$a = 6 * 9;print &quot;Six nines are &quot;, $a, &quot;\\n&quot;;$a = $a + 3;print &quot;Plus three is &quot;, $a, &quot;\\n&quot;;$a = $a / 3;print &quot;All over three is &quot;, $a, &quot;\\n&quot;;$a = $a + 1;print &quot;Add one is &quot;, $a, &quot;\\n&quot;; ++ and –1234567891011#!/usr/bin/perluse warnings;$a=4;$b=10;print &quot;Our variables are &quot;, $a, &quot; and &quot;, $b, &quot;\\n&quot;;$b=$a++;print &quot;After incrementing, we have &quot;, $a, &quot; and &quot;, $b, &quot;\\n&quot;;$b=++$a*2;print &quot;Now, we have &quot;, $a, &quot; and &quot;, $b, &quot;\\n&quot;;$a=--$b+4;print &quot;Finally, we have &quot;, $a, &quot; and &quot;, $b, &quot;\\n&quot;; ++可用于字符串 One. 结尾字符为’z’、 ‘Z’、 ‘9’时进位Two. If there are no more digits to the left, either an ‘a’ or an ‘A’ is created12345678#!/usr/bin/perluse warnings;$a = &quot;A9&quot;; print ++$a, &quot;\\n&quot;;$a = &quot;BA9&quot;; print ++$a, &quot;\\n&quot;;$a = &quot;Zz&quot;; print ++$a, &quot;\\n&quot;;$a = &quot;z9&quot;; print ++$a, &quot;\\n&quot;;$a = &quot;9z&quot;; print ++$a, &quot;\\n&quot;; #???$a = &quot;a9z&quot;; print ++$a, &quot;\\n&quot;; Mutiple Assignments123#!/usr/bin/perl$b = 4 + ($a = 1); #注意括号print $b,&quot; &quot;,$a,&quot;\\n&quot;; Scoping To tell perl that a variable is lexical, we say ‘my $variable;’ Variable Interpolation One. Interpolation happens for scalar variables and arrays but not for hashesTwo. Note that this doesn’t happen with single-quoted stringsThree. It happens every time we construct a string12345#!/usr/bin/perluse warnings;use strict;my $times = 8;print &quot;This is the $&#123;times&#125;th time.\\n&quot;; Currency Converter12345678#!/usr/bin/perluse warnings;use strict;print &quot;Currency converter\\n\\nPlease enter the exchange rate: &quot;;my $yen = &lt;STDIN&gt;;print &quot;49518 Yen is &quot;, (49_518/$yen), &quot; pounds\\n&quot;;print &quot;360 Yen is &quot;, ( 360/$yen), &quot; pounds\\n&quot;;print &quot;30510 Yen is &quot;, (30_510/$yen), &quot; pounds\\n&quot;; 学习资料Beginning Perl–IntroductionBeginning Perl–Chapter 1: First Steps In PerlBeginning Perl–Chapter 2: Working with Simple ValuesPerl语言入门","tags":[{"name":"perl","slug":"perl","permalink":"http://yoursite.com/tags/perl/"}]},{"title":"MeDIP-seq,ChIP-seq,RNA-seq结合起来分析","date":"2018-04-23T08:10:29.000Z","path":"2018/04/23/seq实战/MeDIP-seq-ChIP-seq-RNA-seq结合起来分析/","text":"有空做MeDIP-seq,ChIP-seq,RNA-seq结合起来分析","tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"}]},{"title":"bioinformatics软件下载及简单使用","date":"2018-04-23T07:05:45.617Z","path":"2018/04/23/软件下载/","text":"Aspera12345678cd practisemkdir asperacd asperawget http://download.asperasoft.com/download/sw/connect/3.6.2/aspera-connect-3.6.2.117442-linux-64.tar.gztar zxf aspera-connect-3.6.2.117442-linux-64.tar.gzsh aspera-connect-3.6.2.117442-linux-64.shecho &apos;PATH=$PATH:/home/tingm/.aspera/connect/bin&apos; &gt;&gt; ~/.bashrcsource ~/.bashrc using ascp download data123ascp -T -l 200M -i ~/.aspera/connect/etc/asperaweb_id_dsa.openssh anonftp@ftp-private.ncbi.nlm.nih.gov:/sra/sra-instant/reads/ByRun/sra/ERR/ERR105/ERR105009/ERR105009.sra ./ascp -T -l 200M -i ~/.aspera/connect/etc/asperaweb_id_dsa.openssh --host=fasp.sra.ebi.ac.uk --user=era-fasp --mode=recv /vol1/fastq/ERR105/ERR105009/ERR105009_1.fastq.gz ./ascp -T -l 200M -i ~/.aspera/connect/etc/asperaweb_id_dsa.openssh era-fasp@fasp.sra.ebi.ac.uk:/vol1/fastq/ERR105/ERR105009/ERR105009_1.fastq.gz ./ SRA Toolkit:SRA to Fastq1234567cd practisemkdir biosoftcd biosoftwget http://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/2.8.1-3/sratoolkit.2.8.1-3-centos_linux64.tar.gztar zxf sratoolkit.2.8.1-3-centos_linux64.tar.gz echo &apos;PATH=$PATH:/home/tingm/practise/biosoft/sratoolkit.2.8.1-3-centos_linux64/bin&apos; &gt;&gt; ~/.bashrcsource ~/.bashrc sratoolkit download data / sra to fastq(pair end)12prefetch SRR7722890 fastq-dump --split-files SRR447685/SRR447685.sra NGSQCToolkit12345678wget https://bitbucket.org/libgd/gd-libgd/downloads/libgd-2.1.1.tar.xztar Jxf libgd-2.1.1.tar.xzcd libgd-2.1.1./bootstrap.sh./configure --prefix=/home/tingm/usrmake -j 4sudo make installgdlib-config FastQC www view FastQC 未成功12345678910111213141516171819202122232425262728sudo chmod 1777 /home/tingm/practise/ /home/tingm/practise/biosoft/wget http://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.5.zipunzip fastqc_v0.11.5.zip -d /home/tingm/practise/biosoft/ chmod 755 /home/tingm/practise/biosoft/FastQC/fastqcecho &apos;PATH=$PATH:/home/tingm/practise/biosoft/FastQC&apos; &gt;&gt; ~/.bashrcsource ~/.bashrcfastqc --help#########www view FastQC 未成功susetup/etc/init.d/httpd status/etc/init.d/httpd startvim /etc/sysconfig/iptatbles -A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT/etc/init.d/iptables restartvim /etc/httpd/conf/httpd.conf Alias /public &quot;/home/public/&quot;&lt;Directory &quot;/home/public/&quot;&gt; Options Indexes MultiViews FollowSymLinks AllowOverride None Order allow,deny Allow from all&lt;/Directory&gt;/etc/init.d/httpd restartmkdir /home/publicchmod 1777 /home/publicusermod -aG userGroupName apachechmod 755 /home/user Trimmonmatic123wget http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.36.zipunzip Trimmomatic-0.36.zipjava -jar trimmomatic-0.36.jar samtools123456wget https://github.com/samtools/samtools/releases/download/1.3.1/samtools-1.3.1.tar.bz2 -o samtools-1.3.1.tar.bztar jxf samtools-1.3.1.tar.bz2 -C /home/tingm/practise/biosoft/cd /home/tingm/practise/biosoft/samtools-1.3.1/makeecho &apos;PATH=$PATH:/home/tingm/practise/biosoft/samtools-1.3.1/&apos; &gt;&gt; ~/.bashrcsource ~/.bashrc bcftools123456wget https://github.com/samtools/bcftools/releases/download/1.3.1/bcftools-1.3.1.tar.bz2 -o bcftools-1.3.1.tar.bztar jxf bcftools-1.3.1.tar.bz2 -C /home/tingm/practise/biosoft/cd /home/tingm/practise/biosoft/bcftools-1.3.1/makeecho &apos;PATH=$PATH:/home/tingm/practise/biosoft/bcftools-1.3.1/&apos; &gt;&gt; ~/.bashrcsource ~/.bashrc hisat21234wget ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/downloads/hisat2-2.0.5-Linux_x86_64.zipunzip /home/tingm/practise/biosoft/hisat2-2.0.5-Linux_x86_64.zip -d /home/tingm/practise/biosoftecho &apos;PATH=$PATH:/home/tingm/practise/biosoft/hisat2-2.0.5/&apos; &gt;&gt; ~/.bashrcsource ~/.bashr anaconda123wget https://repo.continuum.io/archive/Anaconda2-4.4.0-Linux-x86_64.shbash Anaconda2-4.4.0-Linux-x86_64.shenter yes pycharm1234download tar.gz and loadtar zxvfchmod +x pycharm.shsh pycharm.sh miniconda &amp; multiqc12345wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.shbash Miniconda2-latest-Linux-x86_64.shconda install -c bioconda multiqcmultiqc --helpmultiqc /fastq/fastqc_out/*fastqc.zip --ignore *.html starstar下载使用参考123wget https://github.com/alexdobin/STAR/archive/2.6.0a.tar.gztar -xzf 2.6.0a.tar.gzcd STAR-2.6.0a","tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"}]},{"title":"L5.matplotlib可视化","date":"2018-04-22T12:03:08.119Z","path":"2018/04/22/数据分析实战/L5-matplotlib可视化/","text":"要点 关联分析数值比较：散点图、曲线图分布分析：灰度图、密度图分类分析：柱状图、箱式图 matplotlibMatplotlib详解图像各个部分Python–matplotlib绘图可视化知识点整理","tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"实战4.QQ答疑","date":"2018-04-15T13:21:51.508Z","path":"2018/04/15/数据分析实战/实战4.QQ答疑/","text":"Q1.有如下5列n行表格，其中后三列元素每列均相同，想去除重复行并统计重复行出现的次数得到新表格原表格 Name Sex 1 2 3 A F 6 G F B M 6 G F B M 6 G F C F 6 G F C F 6 G F C F 6 G F … … … … … 新表格 Name Sex 1 2 3 Count A F 6 G F 1 B M 6 G F 2 C F 6 G F 3 … … … … … … 1.drop.duplicate()能得到去除重复行的新表格，不知是否能同时计算出重复行数目？ Name Sex 1 2 3 A F 6 G F B M 6 G F C F 6 G F … … … … … 2.用groupby([‘Name’,’Sex’]).size()计算出了不同Name和Sex对应的次数，然后加上了后三行。不知是否有其他简便可行的方法推荐？分开写两个函数 Q2.合并Q1中格式的多个表格，比如1000个，有没有什么方法推荐？我用的循环读入单个表格然后写入新文件merge函数 Q3.关于可视化，是否能画4个circles以上的维恩图，R中是有对应包的，不确定python是否也有?seaborn 以上来自稀牛学院数据科学实训营 助教田老师及学员们的QQ答疑","tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"L4.链家网房价数据分析 要点记录","date":"2018-04-15T07:17:30.101Z","path":"2018/04/15/数据分析实战/L4-链家网房价数据分析/","text":"12345678910111213#改列名lj_data.columns = [&apos;district&apos;, &apos;address&apos;...]#最便宜和最贵lj_data[lj_data[&apos;price&apos;]==lj_data[&apos;price&apos;].min()] #min()lj_data.sort_values(by=&apos;price&apos;).head(1) #by和ascending#to_frame和reset_indexlj_data[&apos;view_num&apos;].value_counts().to_frame().reset_index()#loc和applylj_data.loc[:,&apos;area&apos;] = lj_data[&apos;area&apos;].apply(lambda x:x[:-2]).apply(lambda x:float(x))#groupbypop_dire = lj_data.groupby(&apos;direction&apos;)[[&apos;view_num&apos;]].sum().reset_index()#aggtmp = lj_data.groupby(&apos;house_type&apos;).agg(&#123;&apos;view_num&apos;:&apos;sum&apos;&#125;).reset_index()","tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"Test1.pandas part","date":"2018-04-12T11:13:50.589Z","path":"2018/04/12/数据分析实战/Test1_pandas/","text":"Test1 pandas部分步骤1. 载入需要的库12import pandas as pdimport numpy as np 步骤2. 导入数据12chipo = pd.read_csv(&apos;https://raw.githubusercontent.com/justmarkham/DAT8/master/data/chipotle.tsv&apos;, sep=&apos;\\t&apos;)chipo.head(5) 问题1. 被点最多的食物是哪个？1chipo[['item_name','quantity']].groupby(chipo['item_name']).sum().sort_values(by=['quantity'],ascending=False) 问题2. 有记录的这段时间总收入是？123chipo['new_price'] = chipo['item_price'].str.split('$').str[1].astype(np.float64) #取出价格 floatchipo['expense'] = chipo['quantity']*chipo['new_price']chipo['expense'].sum() #总收入美元 问题3. 有多少东西价格超过 $10.00?12df = chipo[['item_name','new_price']][chipo['new_price'] &gt; 10].groupby('item_name')len(df['item_name'].unique()) 问题4. 顾客点多于一罐Canned Soda的次数是？12df = chipo[(chipo['item_name'] == 'Canned Soda') &amp; (chipo['quantity'] &gt;1)]df.shape # 20 回答问题5 ~ 6请从导入数据，给该数据分配一个变量users12users = pd.read_csv('https://raw.githubusercontent.com/justmarkham/DAT8/master/data/u.user', sep='|')users.head(5) 问题5. 每个职业男性和女性的平均年龄分别是？1users.groupby(['occupation','gender'])[['age']].mean() 问题6. 每个职业中男性的比例是？12df = users[['gender','occupation']][users['gender']=='F']df['occupation'].value_counts(normalize=True) 回答问题7 ~ 8导入数据，给该数据分配一个变量df123data = pd.read_html('https://github.com/guipsamora/pandas_exercises/blob/master/04_Apply/Students_Alcohol_Consumption/student-mat.csv',header=0)[0]df = data.iloc[:,1:]df.columns = data.columns.delete(-1) 问题7. 请把Mjob和Fjob两列中数据都变成全部大写字母，查看df，如果df中这两列数据确实变成大写，说明操作成功12df[['Mjob','Fjob']] = df[['Mjob','Fjob']].applymap(lambda x:x.upper())df.head() 问题8. 把df中所有数值都乘以10123int_names = df.dtypes[df.dtypes == 'int64'].indexdf[int_names] = df[int_names]*10df.head() 回答问题9 ~ 13导入数据给该数据分配一个变量123import datetimewind = pd.read_csv('wind.data',delim_whitespace=True)wind.tail() 问题9. data中2061年有误，应为1961年。请改正。12wind['New_Yr'] = wind['Yr'].apply(lambda x :'19'+str(x))wind.tail() 问题10. 将正确的日期设为index。要求：index的dtype为datetime64[ns]1234567wind['date'] = wind[['New_Yr', 'Mo', 'Dy']].apply(lambda x: '-'.join(str(value) for value in x), axis=1)wind['date'].tail()wind['new_date']= pd.to_datetime(wind['date'])wind.tail()wind.set_index(wind['new_date'], inplace=True)wind = wind.iloc[:,:-2]wind.head() 问题11. 请分别统计每个地点总共缺失了多少数据。123all_pos = wind.columns[3:-1]total_null = [wind[wind[all_pos[i]].isnull()].shape[0] for i in range(0,len(all_pos))]total_null 问题12. 请创建两个dataframe，一个统计每个地点所有日期风速的最小值、最大值、均值、标准差；第二个统计每日所有地点的风速的最小值、最大值、均值、标准差。12345678910111213df1 = pd.DataFrame()df1['sum'] = wind.iloc[:,3:-1].apply(lambda x:x.sum(), axis=0)df1['mean'] = wind.iloc[:,3:-1].apply(lambda x:x.mean(), axis=0)df1['std'] = wind.iloc[:,3:-1].apply(lambda x:x.std(), axis=0)df1['median'] = wind.iloc[:,3:-1].apply(lambda x:x.median(), axis=0)df1df2 = pd.DataFrame()df2['sum'] = wind.iloc[:,3:-1].apply(lambda x:x.sum(), axis=1)df2['mean'] = wind.iloc[:,3:-1].apply(lambda x:x.mean(), axis=1)df2['std'] = wind.iloc[:,3:-1].apply(lambda x:x.std(), axis=1)df2['median'] = wind.iloc[:,3:-1].apply(lambda x:x.median(), axis=1)df2.head() 问题13. 将数据下采样，每地每年只保留一个样本数据 待解决123wind['date'] = wind.indexwind_year = wind.iloc[:,3:].resample('1A').asfreq() #每年每地wind_year.head() 回答问题14~17导入数据，给该数据分配一个变量iris.1iris = pd.read_csv('https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data',header=None) 问题14. 该数据中缺失了列名，请按照下面给出的名称添加。1iris.columns=['sepal_length','sepal_width','petal_length','petal_width','class'] 问题15. 1）将10 ~ 29行 ‘petal_length’列数据设为Nan；2）再将其设为1.0 【请分步操作，保留第1）步结果】1234iris.loc[10:29,'petal_length'] = np.naniris.loc[10:29]iris = iris.fillna(1.0)iris.loc[10:29] 问题16. 删掉class列1iris.drop('class',axis=1, inplace=True) 问题17. 1）将前3行所有数值设为Nan；2）删掉有缺失值的行【请分步操作，保留第1）步结果】1234iris.iloc[:3] = np.naniris.shapeiris.dropna(axis=0,inplace=True)iris.shape 回答问题18 ~ 20导入数据‘06_US_Baby_Names_right.csv’，给该数据分配一个变量baby_names.1baby_names = pd.read_csv('06_US_Baby_Names_right.csv',index_col=0,sep=',') 问题18. 男性名字多还是女性名字多?1baby_names.groupby('Gender').size() #F 问题19. 最常见的名字是？1baby_names['Name'].value_counts() #Riley 问题20. 最少见的名字出现了多少次？有多少个名字是最少见的？12df = baby_names['Name'].value_counts(ascending=True).to_frame() #1df[df['Name'] == 1].count() #3682 部分答案还需校正更改 题目以上来自稀牛学院数据科学实训营","tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"实战3.QQ答疑","date":"2018-04-11T12:33:41.922Z","path":"2018/04/11/数据分析实战/实战3-QQ答疑/","text":"python &amp; pypandasQ:用print命令在打印的str后面加一个space应该用什么命令A: print(str + ‘ ‘)Q:感觉transform和apply的功能好类似，这两个函数有什么区别A:pandas apply vs agg vs transformQ:dataframe当中，df.loc与df.ix区别A:ix / loc 可以通过行号和行标签进行索引，而iloc只能通过行号索引。loc 和 ix 大部分时候行为都差不多, 但是当假如某个行的索引标签就是一个 INT 比如 1 的时候, loc 优先将 df.loc[1] 理解为行标签为 1 的索引, 而 df.ix[1] 优先将其理解为 行号为 1 的索引(就是第二行)为了避免不小心犯错误, 建议:1.当用行号索引的时候, 尽量用 iloc 来进行索引; 2. 而用标签索引的时候用 loc , 3. ix 就别用了区别ix vs loc vs iloc区别A:一般我们直接指定对应的 columns 来赋值:df[‘Mjob’] = df.Mjob.applymap(lambda x: x.upper() )df[‘Fjob’] = df.Fjob.applymap(lambda x: x.upper() )一列作为Series 应该用map 学习Q：学习方法A：https://iphysresearch.github.io/2018/01/MyWay2017/ 就业Q：转行找数据分析工作，要达到怎样的程度A：不能说要达到怎样的程度，应该说要做过什么东西。竞赛获奖的经历，github 项目经验，参加case项目，写技术博文，自己建项目做数据建模分析，抓住机会积累项目经验~ 亟待升级的粗制滥造博客，mark下，五一有空优化下 以上来自稀牛学院数据科学实训营 助教土豆老师及学员们的QQ答疑","tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"L3.Pandas复杂统计与机器学习特征工程","date":"2018-04-10T11:47:17.698Z","path":"2018/04/10/数据分析实战/L3-Pandas复杂统计与机器学习特征工程/","text":"分组groupby() 聚合agg()123456789group_by_name = salaries.groupby(&apos;Name&apos;) #分组#分组后统计操作group_by_name.sum() #求和group_by_name.mean() #均值salaries.groupby(&apos;Name&apos;).median() #中位数salaries.groupby(&apos;Name&apos;).size() #频次salaries.groupby(&apos;Name&apos;,sort=False).sum() #默认先读到哪个salaries.groupby(&apos;Name&apos;,sort=True).sum() #按照Name排序salaries.groupby(&apos;Name&apos;).describe() #分组查看统计信息 123456#继续挑选后统计计算group_by_name[[&apos;Bonus&apos;,&apos;Salary&apos;]].sum() salaries.groupby(&apos;Name&apos;).agg([&apos;sum&apos;,&apos;mean&apos;,&apos;std&apos;,&apos;median&apos;]) #分组基础上聚合salaries.groupby(&apos;Name&apos;)[[&apos;Bonus&apos;,&apos;Salary&apos;]].agg([&apos;sum&apos;,&apos;mean&apos;,&apos;std&apos;,&apos;median&apos;]) #根据名字分组选bouns和salary进行后续统计salaries.groupby(&apos;Name&apos;)[[&apos;Bonus&apos;,&apos;Salary&apos;]].agg([np.sum,np.mean,np.std,np.median]) #npsalaries.groupby(&apos;Name&apos;)[[&apos;Bonus&apos;]].agg([np.sum,np.mean,np.std,np.median]) #[[&apos;Bonus&apos;]] dataframe 1234567891011#实例nvda = pd.read_csv(&apos;data/NVDA.csv&apos;, index_col=0,parse_dates=[&apos;Date&apos;])nvda.loc[:,&apos;year&apos;] = nvda.index.year #加入year这一列nvda[&apos;year&apos;].unique() #某一列有多少不同的取值 对series操作nvda[&apos;year&apos;].value_counts() #不同取值和出现次数 对series操作tmp = nvda[&apos;year&apos;].value_counts().to_frame() tmp = tmp.reset_index()tmp.columns = [&apos;year&apos;,&apos;count&apos;]tmp.head()tmp.sort_values(by=&apos;year&apos;).head()nvda.groupby(&apos;year&apos;).agg([&apos;mean&apos;,&apos;std&apos;]) #分组统计 123456#transform 变换def my_transform(x): return (x - x.mean())/x.std()tmp_arr = np.array(range(10))my_transform(tmp_arr)transformed = nvda.groupby(&apos;year&apos;).transform(my_transform) 1salaries.loc[:,&apos;new_name&apos;] = salaries[&apos;Name&apos;].apply(lambda x: &apos;HanXiao&apos; if x ==&apos;Han&apos; else x) #apply和匿名函数 拼接concat append1234results = pd.concat([df1,df2,df3]) #列test1 = pd.concat([df1,df2,df3], axis=1)#行对齐去拼接test2 = pd.concat([df1,df2,df3], axis=0)#列对齐拼接df1.append(df1)#append 追加 合并merge join12pd.merge(results,new_df,on=[&apos;new_apts&apos;],how=&apos;inner&apos;) #left right注意区分.join #基于索引 以上整理自稀牛学院数据科学实训营 寒小阳老师关于pandas的讲解","tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"Test1.python part","date":"2018-04-10T11:45:01.284Z","path":"2018/04/10/数据分析实战/Test1-python-part/","text":"Test1 python部分python基础1.任意定义三个数(有整型和浮点型)，通过比较判断，输出其最大者。1234from functools import reducelst = [eval(x) for x in input(&quot;Please input three numbers: \\n&quot;).split()] #输入三个数Max = reduce(lambda n1,n2:n1 if n1&gt;n2 else n2,lst) #比较判断数字大小 max()print(&apos;The largest number is: %s&apos;%Max) #输出最大值 2.将任意一句英文中的每个单词的倒序输出。例如”You are nice”，输出为”uoY era ecin”123words = input(&quot;Please input an English sentence: \\n&quot;).split() #输入一个英语句子new_words = &apos; &apos;.join(map(lambda x:x[::-1],words)) #将每个单词倒序print(&apos;The new English sentence: %s&apos;%new_words) #输出倒序句子 3.统计字符串中每个字母的出现次数（忽略大小写，a 与 A 是同一个字母）并输出成一个字典。1234567lst = [x for x in input(&quot;Please input a string: \\n&quot;).lower()] #输入字符串转为listSet = set(lst) #去重dic = &#123;&#125; #初始化for item in Set: dic.update(&#123;item:lst.count(item)&#125;) #计算元素数目并加入dicprint(dic) #输出#print([(k,dic[k]) for k in sorted(dic.keys())]) 4.用列表生成式1到200之间能被2或3整除的数12nums = [i for i in range(1, 200) if i%2 == 0 or i%3 ==0 ]print(nums) 5.切片练习，上述列表取出下标为奇数的所有元素，并进行降序排序1234new_nums = nums[1::2]new_nums.sort(reverse=True)print(new_nums)#new_nums = [nums[i] for i in reversed(range(1, len(nums), 2))] 6.定义一个函数，完成一个小任务：对于给定的银行定期利率(输入)，计算多少年后可以连本带息翻番1234import mathdef deposit_double(interest_rate): return math.ceil(math.log(2,(1+interest_rate)))deposit_double(0.015) 7.统计1到100之和1sum(range(1, 101)) 8.现有两个列表：[“小明”,”小红”,”小刚”,”小张”]、[97,78,90,89]。请编写代码，实现将上述列表合并转化成字典：{“小明”:97,”小红”：78,”小刚”：90,”小张”：89}1234names = [&quot;小明&quot;,&quot;小红&quot;,&quot;小刚&quot;,&quot;小张&quot;]grades = [97,78,90,89]dic = dict(zip(names,grades))print(dic) 9.现有一个表示学生信息的列表：infolst=[{“小明”:”180cm”},{“小红”:”155cm”},{“小明”:”70kg”},{“小红”:”45kg”},{“小明”:21},{“小红”:20}]，请编写代码实现将上述列表合并成：infolst1=[{“小明”:[“180cm”,”70kg”,21]},{“小红”:[“155cm”,”45kg”,20]}]1234567infolst = [&#123;&quot;小明&quot;:&quot;180cm&quot;&#125;,&#123;&quot;小红&quot;:&quot;155cm&quot;&#125;,&#123;&quot;小明&quot;:&quot;70kg&quot;&#125;,&#123;&quot;小红&quot;:&quot;45kg&quot;&#125;,&#123;&quot;小明&quot;:21&#125;,&#123;&quot;小红&quot;:20&#125;]infolst1 = &#123;&#125;#合并for info in infolst: for k, v in info.items(): infolst1.setdefault(k, []).append(v)print(infolst1) 10.定义一个函数，能实现将列表逆序输出的功能。12345def list_reverse(a): return a[::-1]lst = [eval(x) for x in input(&quot;Please input a list of numbers: \\n&quot;).split()] #for example,1 4 8 5 3rlst = list_reverse(lst)print(rlst) 11.斐波那契数列又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……在数学上，费波那契数列是以递归的方法来定义：F0 = 0 (n=0)；F1 = 1 (n=1)；Fn = F[n-1]+ F[n-2] (n=&gt;2)请用定义一个函数实现斐波那契数列，并打印出F20的值12345678910111213def fibo(i): if i == 0: return 0 elif i == 1: return 1 else: return fibo(i-1) + fibo(i-2) def fib(n): x,y=0,1 while(n): x,y,n=y,x+y,n-1 return xprint(fibo(20),fib(20)) 12.回文数指任意自然数n，若将n的各位数字反向排列所得自然数n1与n相等，则称n为一回文数。例如:12321,235532。请定义一个函数判断某个数是否为回文数1234def is_palindrome(n): str_n = str(n) return str_n == str_n[-1::-1] print(is_palindrome(12321),is_palindrome(235532),is_palindrome(123)) 13.一个数如果恰好等于它的因子之和，这个数就称为“完数”。例如，6的因子为1、2、3，而6=1+2+3，因此6是完数。找出10000之内的所有完数，并输出该完数及对应的因子1234567#求因子def get_factors(num): return [tmp for tmp in range(1,num) if num%tmp==0]#求完数def get_perfect_numbers(num): return [[tmp,get_factors(tmp)] for tmp in range(1,num) if sum(get_factors(tmp))==tmp]get_perfect_numbers(10000) 正则表达式1text = &apos;Python is an interpreted high-level programming language for general-purpose programming. Created by Guido van Rossum and first released in 1991, Python has a design philosophy that emphasizes code readability, notably using significant whitespace. It provides constructs that enable clear programming on both small and large scales.Python features a dynamic type system and automatic memory management. It supports multiple programming paradigms, including object-oriented, imperative, functional and procedural, and has a large and comprehensive standard library.Python interpreters are available for many operating systems. CPython, the reference implementation of Python, is open source software[28] and has a community-based development model, as do nearly all of its variant implementations. CPython is managed by the non-profit Python Software Foundation.&apos; 14.找出text中python或包含python的所有单词(忽略大小写)12import reprint(re.findall(r&apos;[a-zA-Z]*(?i)python[a-zA-Z]*&apos;,text)) 15.统计text中python出现的次数(忽略大小写)12improt reprint(len(re.findall(r&apos;\\b(?i)python\\b&apos;,text))) 16.将text中所有的Python替换为Py123import renew_text = re.sub(r&apos;\\b(?i)Python\\b&apos;,&apos;Py&apos;,text)print(new_text) 17.编写一个函数检查字符串中是否只包含数字和大小写字母，如果是返回True，如果否返回False1234567import redef check_str(str): if re.search(r&apos;[^a-zA-Z0-9]&apos;,str): return False else: return Trueprint(check_str(&apos;Good&apos;),check_str(&apos;bam2&apos;),check_str(&apos;1&amp;2to&apos;)) 18.编写一个函数将日期形式yyyy-mm-dd转换成日期形式dd-mm-yyyy123456789import redef date_trans1(date): m = re.match(r&apos;(\\d&#123;4&#125;)-(\\d&#123;1,2&#125;)-(\\d&#123;1,2&#125;)&apos;,date) return m.group(3) + &apos;-&apos; + m.group(2) + &apos;-&apos; + m.group(1) # 用group匹配每一部分def date_trans2(date): p = re.compile(r&apos;(\\d&#123;4&#125;)-(\\d&#123;1,2&#125;)-(\\d&#123;1,2&#125;)&apos;) m = p.sub(r&apos;\\3-\\2-\\1&apos;, date) # 用expand属性或re.sub函数 return mprint(date_trans1(&apos;1949-01-02&apos;),date_trans2(&apos;1949-01-02&apos;)) 19.找出text中每句话的第一个单词123456import re# 以句号分割每个句子sens = re.split(r&apos;\\.&apos;,text)# 用循环取出每句的第一个单词for line in sens[:-2]: print(re.search(r&apos;\\w+&apos;,line).group()) 文件读写20.读取文件number.txt并打印文件内容123import osfor line in open(&quot;number.txt&quot;): print(line.strip(&apos;\\n&apos;)) 21.读取文件夹下的所有文件名123import os files = os.listdir(os.getcwd())print(files) 22.将文件number.txt中的内容写入命名为num.txt的新文件1234outF = open(&apos;num.txt&apos;, &apos;w&apos;)for line in open(&quot;number.txt&quot;): outF.write(line)outF.close() 23.编写函数统计文件内容的行数1234567def count_lines(file): f = open(file, &quot;r&quot;) lines = [line.strip(&apos;\\n&apos;) for line in f.readlines()] # readlines() 方法用于读取所有行(直到结束符 EOF)并返回列表 lens = len(lines) # 函数len() f.close() return lenscount_lines(&apos;number.txt&apos;) 24.编写函数打印文件的最后5行内容1234567def print_last5lines(file): f = open(file, &quot;r&quot;) lines = [line.strip(&apos;\\n&apos;) for line in f.readlines()] # readlines() 方法用于读取所有行(直到结束符 EOF)并返回列表 for i in lines[-5:]: print(i) #取出列表的最后5个元素 f.close()print_last5lines(&apos;number.txt&apos;) 25.输入一个文件路径名或文件名，查看该文件是否存在。如存在，打开文件并在屏幕上输出该文件内容；如不存在，显示“输入的文件未找到！”并要求重新输入；如文件存在但在读文件过程中发生异常，则显示“文件无法正常读出！”并要求重新输入1234567891011while True: file = input(&quot;请输入文件名&quot;)#用input()提示输入文件名 try: f = open(file,&apos;r&apos;)# 打开文件 except IOError: #“文件未找到”对应的异常名 : print(&quot;输入的文件未找到！请重新输入&quot;)#显示“输入的文件未找到！请重新输入” except: print(&quot;文件无法正常读出！请重新输入&quot;)#显示“文件无法正常读出！请重新输入” else: print (f.read()) break #成功读取并打印文件内容并退出循环 正则和文件读写26.找一本英文小说(转为txt格式)，把其中所有的代词(I, you, he, she, it, we, you, they, me, you, him, her, it, us, you, them)都替换成两个星号12345678910import re,osf = open(&apos;godfather.txt&apos;,&apos;r&apos;)alllines = f.readlines() f.close() f = open(&apos;godfather.txt&apos;,&apos;w+&apos;)p = re.compile(r&apos;(\\b(?i)I\\b)|(\\b(?i)you\\b)|(\\b(?i)he\\b)|(\\b(?i)she\\b)|(\\b(?i)it\\b)|(\\b(?i)we\\b)|(\\b(?i)they\\b)|(\\b(?i)me\\b)|(\\b(?i)him\\b)|(\\b(?i)her\\b)|(\\b(?i)us\\b)|(\\b(?i)them\\b)&apos;)for eachline in alllines: a = p.sub(&apos;**&apos;,eachline) f.writelines(a) f.close() 27.找出文件夹下所有文件名格式为output_YYYY.MM.DD.txt(output_2016.10.21.txt)的文件 。读取文件名中的日期时间信息，并找出这一天是周几。将文件改名为output_YYYY-MM-DD-W.txt (YYYY:四位的年，MM：两位的月份，DD：两位的日，W：一位的周几，并假设周一为一周第一天)1234567891011121314import os,re,datetimepath = &apos;/home/ds/notebooks/Test1/Python/Test&apos; filelist = os.listdir(path)p = re.compile(r&apos;^output_(\\d&#123;4&#125;)\\.(\\d&#123;2&#125;)\\.(\\d&#123;2&#125;)\\.txt$&apos;)for f in filelist: m = p.match(f) if m: year, month, day = m.groups() try: dayofweek = datetime.date(int(year), int(month), int(day)).isoweekday() new_df = &apos;output_&apos; + year + &apos;-&apos; + month + &apos;-&apos; + day + &apos;-&apos; + str(dayofweek) + &apos;.txt&apos; os.rename(os.path.join(path, f),os.path.join(path,new_df)) except: pass 28.用电脑记录他每天掌握的英文单词。设计程序和相应的数据结构，能记录新学的英文单词和其中文翻译，并能很方便地根据英文来查找中文。实现一个类，能完成功能：1.背单词(添加单词)2.查单词(根据单词进行翻译)3.修改单词含义123456789101112131415161718192021222324252627282930# encoding: utf-8class DanCiBen(object): def __init__(self,my_dict=&#123;&#125;): self.my_dict=my_dict def recite(self,word,meaning): self.my_dict[word]=meaning print(&quot;新待背单词%s: %s&quot;%(word,meaning)) def search(self,word): if word in self.my_dict.keys(): return self.my_dict[word] else: return &quot;该单词未背诵，请添加入单词本&quot; def modify(self,word,meaning): self.my_dict[word]=meaning print(&quot;更改单词含义%s: %s&quot;%(word,meaning)) dcb=DanCiBen()#类测试#背单词dcb.recite(&apos;good&apos;,&apos;好&apos;)dcb.recite(&apos;day&apos;,&apos;天&apos;)dcb.recite(&apos;expend&apos;,&quot;扩张&quot;)#查单词print(&quot;good:&quot; + dcb.search(&apos;good&apos;))print(&quot;bad:&quot; + dcb.search(&apos;bad&apos;))#修改单词含义dcb.modify(&apos;expend&apos;,&apos;花费&apos;) 部分习题可参考group()用法os.walk()和os.listdir()判断一个路径是否存在判断一个路径是文件还是目录os.rename和os.renames 题目以上来自稀牛学院数据科学实训营","tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"实战2.python正则讲解","date":"2018-04-04T10:54:01.002Z","path":"2018/04/04/数据分析实战/实战2-python正则讲解/","text":"python正则不熟悉要点记录r 表示不转义(\\1) 引用前面一个分组\\w 匹配任何字母数字字符(?P…) 创建分组并命名(?i)忽略大小写.group()返回匹配结果中一个或多个group .group和.findall参考1234re.search(&apos;abc(?!def)&apos;,&apos;abcdef&apos;) #为NONE所以没有.group()re.findall(r&apos;(?i)sam&apos;, &apos;sam Sam&apos;) #.findallre.search(r&apos;(?i)sam&apos;, &apos;sam Sam&apos;).group()#注意区分.findall .groupre.match #只检测起始位置 12# 匹配&apos;数字abc&apos;后面是数字或abc的字符串print (re.search(r&apos;(\\d)abc(?(1)\\d|abc)&apos;, &apos;1abc1 abcabc&apos;).group()) (?P=name)引用name的分组，和（?P）一起使用 还需多练习 以上来自稀牛学院数据科学实训营 助教大菜菜老师的正则直播讲解","tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"爬虫：模拟登陆和动态网站抓取 要点记录","date":"2018-04-03T11:48:07.237Z","path":"2018/04/03/数据分析实战/爬虫：模拟登陆和动态网站抓取/","text":"豆瓣模拟登录（google浏览器）存在问题？ 登录账号和密码、保持登录状态（跨请求地保持某些参数）、图形验证码操作：在检查项的Network下查看登录信息，点击login，Header下From data内有表单信息 source: Noneredir: https://www.douban.com/ #登陆页面form_email: test2 #用户邮箱form_password: 111111 #密码captcha-solution: potato #验证码，豆瓣有验证码图库，比对图片ID号captcha-id: tljqzo0Gv3aYUpIarqXaDBAg:en #验证码ID XPath去取login: 登录 captcha_img_url = selector.xpath(‘//img[@id=”captcha_image”]//@src’)结果为空，待解决 scrapy 命令行端执行脚本待练习[Scrapy简单入门及实例讲解][https://www.cnblogs.com/kongzhagen/p/6549053.html][Scrapy安装、爬虫入门教程、爬虫实例（豆瓣电影爬虫）][http://www.cnblogs.com/Shirlies/p/4536880.html]","tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"L2 Pandas Series & DataFrame 关键点记录","date":"2018-04-03T11:43:53.533Z","path":"2018/04/03/数据分析实战/L2.Pandas-Series-DataFrame/","text":"Series 一维数组构建初始化：可用list构建（dict也可），默认用0-n为Series的index，也可指定位置索引/名称索引：s[[1,2,3]] 内为列表数学运算（广播特性）：list不可（list相加并在一起），基于索引进行计算（list相加并在一起）in判断是否在索引内 .get看值是否有 条件索引取值统计计算：min max mean等 可和numpy结合使用 如np.log()赋值：可和条件索引结合使用数据缺失：notnull() isnull() expense[expense.isnull()] = expense.mean() DataFrame 二维数组构建：给列名列元素 columns调整列的顺序 index可重定义 可由Series构建取值：下为取列，注意区分 .loc取行(传入list或类似切片用法) .loc用法参考1234type(df[&apos;apt&apos;])pandas.core.series.Seriestype(df[[&apos;apt&apos;]])pandas.core.frame.DataFrame df.T 转置 df.shape 、df.info()：行列信息 df.describe():均值分位数等信息.isin参考缺失值处理：.fillna Index csv文件的读写.read_csv参考: index_col parse_dates.to_csv().index index.dayofweek%matplotlib inline 绘图数据选择 | &amp; ! 以上整理自稀牛学院数据科学实训营 寒小阳老师关于pandas的讲解","tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"爬虫：静态网站数据获取","date":"2018-04-02T10:29:09.626Z","path":"2018/04/02/数据分析实战/爬虫：静态网站数据获取/","text":"XPath定义 XML 文档中查信息的语言， XML 文档中对元素和属性进行遍历 七类节点node XML最小单元 element、attribute、text、namespace、processing-instruction、comment、root 语法选取节点：路径表达式XPath教程 nodename 选取此node所有子节点/ 文档根下节点 // 文档里任何位置的节点. 当前节点 .. 当前节点父节点@选属性[] 谓语 找特定节点或包含特定值节点星号 匹配任何元素节点 @* 匹配任何属性节点 node() 匹配任何类型节点| 选取若干路径绝对路径和相对路径：前者以“/”起始 查看网页XPath路径记录右击标题，选检查，elements下查看，右击copy XPath，ctrl+F，ctrl+V，之前粘贴部分被高亮，高亮部分为XPath路径示例，具体语法参照上面//div[@class=”text”]/em/a/text() 取内容div[@class=”text”] 选取所有拥有名为class=”text” 的属性的div 元素a/@href 取属性 requesetsOne.请求网页，requesets详解Two.获取返回状态200和网页编码格式’GB2312’ -&gt; .content显示内容 -&gt; import etree;XPath抓取标题;用text-&gt;传递参数wd和rn -&gt; 超时时间 -&gt;添加代理 -&gt;请求头内容etree和XPath 豆瓣最热电影评论爬取示例、链家爬取案例练习 稀牛学院数据科学实训营 助教寒小阳老师爬虫课程 学习整理","tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"实战1.QQ答疑","date":"2018-04-01T13:13:58.757Z","path":"2018/04/01/数据分析实战/实战1-QQ答疑/","text":"实战1.一起来打怪之 python 基础与进阶练习题 QQ答疑关于竞赛Q：竞赛情况A：竞赛最有名的是Kaggle，国内是阿里天池。获奖情况每个比赛不一样，有的前10，有的前6。一般能到前1%就很不错了。竞赛爬取结果: 土豆的github 如何学习Q：边听课边在实验室环境里的notebook上做笔记，两个窗口不能同时开着，只能切换运行A：可同时打开notebook同时做笔记。但是建议注意力放在听课上面，用笔和纸速记。可用markdown做笔记。A：问题出现，先google,bing检索，常见社区Stack Overflow 运行平台Q：jupyter notebook执行ternimal无法显示A：广告拦截软件拦截，关掉广告拦截软件或者换一个浏览器试试。chrome和firefox都能很好的运行稀牛的实验环境。Q：只要能用anaconda里的jupyter打开发的ipynb的文件就说明配置没错吗A：anaconda应该没有什么需要编辑的，只要装上了，就能启动jupyterQ：jupyter里面有类似上下键翻录历史命令/代码的快捷键？A：shift+enter ctrl+enterQ：在terminal里面输入dir，然后下一条命令还要输入dir，winh和linux下都可以用键盘上下翻的键显示，ipython也可以，notebook里面不知道有没有A：木有Q：将notebook里的cell 转换为markdown格式是什么快捷键A：选中单元格+mQ：本地安装了jupyter ，但是terminal里运行jupyter notebook 每次给出本地地址，需要手动复制到浏览器运行，难道不应该是直接弹出浏览器运行吗？ 怎么设置，是要修改环境变量吗？怎么设置？A：打开失败了，检查一下里面浏览器的设置Q：在jupter里写的markdown可以变成文本吗A：可以点左上角，file——&gt;download as，里面有很多选项Q：shell查看文件A：!head python基础Q：文件读取多语言的文件怎么处理A：建议使用python3，python3对中文支持要好一些，特别爬虫的时候感觉最明显。如果还不行的话建议，在写入文件和读取文件的时候，跟上字符编码。未解决，可能和win10系统相关。Q：input 可以输入字符串列表吗A：input来输入int，raw_input来输入string。可参考：Python输入字符串转列表Q：导入了seaborn，为什么画出来的图还是matplotlib默认风格的A：代码用的pylot，sns.set()执行以下，再绘图Q：不定长度参数的函数中 * 号是指针的意思？A：不是，廖学峰的官方网站python3: 参数小结 爬虫Q：静态数据获取视频中查看元素之后在filter里填了东西是回车就可以找到了吗 xpath表达式A：取东西一般有两种类型。一种是文本，最后需要接一个text()来取文本。另外一种是取属性。可查看：xpath语法Q：浏览器打开检查元素，是直接在filter里填xpath就回高亮就会跳到我要找的文本或属性吗？A：是的，只要写对了，就会高亮。直接使用chrome右键copy xpath得到的，可读性不高，可用性不强。Q：怎样的xpath算是可读性比较强的A：简洁、高效。 以上来自稀牛学院数据科学实训营 助教易龙老师及学员们的QQ答疑","tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"来自google的专业python指南","date":"2018-04-01T10:01:46.182Z","path":"2018/04/01/数据分析实战/L1.来自google的专业python指南/","text":"前言：课程结构相对于前四期进行调整。one.爬虫（数据获取）直播切录播。Two.机器学习及其依赖的数据处理课时加重。Three.大数据技能后移，希望教给大家大数据处理和机器学习大数据建模的技能。 python使用原因：数据科学领域top2；深度学习、人工智能领域举例：google: tensorflow、facebook: pytorch + caffe2、Amazon: mnxet、caffe、易上手package：Keras, TFlearn, tensorlayer、python接口；机器学习领域举例：scikit-learn numpy/scipy pandas xgboost/lightGBM；大数据领域举例：spark scala、pyspark、hadoop Map-Reduce、hadoop streaming + python 脚本；数据科学家:数据驱动的解决方案，不花大时间在开发，集中在数据分析建模等问题上 如何寻求帮助help() (快捷键win+ctrl+shift+tab)dir() python运算运算符：+ - * / % 基本数据类型、变量基本数据类型：int float str booltype() 查看数据类型整数和浮点数在计算机内部存储的方式是不同的，整数运算永远是精确的，而浮点数运算则可能会有四舍五入的误差。 表达式+= -= *= /= 字符串1234x = &quot;hello world!&quot;abc = &quot;123456&quot; abc.isdigit() #Tab可补全&apos;&apos;&apos; &apos;&apos;&apos; 可内部换行 可参考：三种引号区别 字符串切片/splice12345678910len(tmp_str) 左起0 右起-1 左闭右开string.lower() .upper() .capitalize() .startswith(&quot;xiao&quot;) .endswith(&quot;sh&quot;) .strip() .find() #-1未找到 .split() 列表/list（存储一连串数据）1234567891011121314names=[&apos;Hanmei&apos;,&apos;Lilei&apos;,&apos;Hanxiao&apos;,&apos;Xi&apos;,&apos;Bob&apos;,&apos;Davie&apos;]len(names)mixed = [&apos;Han&apos;,2,3.14,[&apos;Li&apos;,&apos;Hanmei&apos;]]len(mixed)mixed[1]mixed[-2]mixed[-1][-1]&apos;\\n&apos;.join(names)names.append(&quot;xiaohong&quot;)#尾部添加names.remove([&quot;xiaohong&quot;])names.extend([&apos;xiao&apos;,&apos;xiaoxiao&apos;,&apos;Bao&apos;])names.reverse()help(list.pop)help(list.insert) 判断循环123456789101112131415161718age = 66if age&gt;80: print(&apos;very old&apos;)elif age&gt;30: print(&apos;old&apos;)else: print(&apos;young&apos;) for index,stu in enumerate(names): print(index,stu) i = 0while i&lt;10: print(i) i +=1 注意continue break 区分enumerate()函数将一个可遍历的数据对象(如list、元组或字符串)组合为一个索引序列，同时列出数据和数据下标，一般用在for循环当中 列表推导式1234[&quot;my name is: &quot; +name for name in names][num + 5 for num in num_list][num**3 for num in num_list if (num%2==1 and num &lt; 7)]#与或非and or not 集合Sety = set([‘h’,’a’,’m’])与列表和元组不同，集合是无序的，也无法通过数字进行索引。此外，集合中的元素不能重复 字典1234567legs = &#123;&apos;spider&apos;:8,&apos;pig&apos;:4,&apos;ducl&apos;:2&#125;type(legs)legs.values()legs.keys()&apos;bird&apos; in legsfor animal, leg_num in legs.items(): print(animal,leg_num) 字典推导式123456my_list = [1,3,5,7,9,2,4]dic = &#123;&#125;for num in my_list: dic[num] = num **3 &#123;num:num**3 for num in my_list&#125; 高级排序12345num_list1.sort()#成员函数，对自身做调整，num_list1排序结果为返回值返回sorted(num_list2) #python中函数，num_list2未更改sorted(str, reverse=True)#字母反序sorted(str,key=len)#根据key函数即长度排序，长度一致asic排序sorted(str,key=str.lower)#小写后排序，key function给函数名，无需括号 函数123456789def get_first(my_list): return my_list[0]get_first([&apos;Han&apos;,&apos;Li&apos;])classed = [&apos;Han&apos;,&apos;Li&apos;],[&apos;Xiao&apos;,&apos;Ming&apos;],[&apos;Wang&apos;,&apos;Xiao&apos;]sorted(classed,key=get_first)#不定长度的参数def print_all(*args): print(type(args)) print(args) 文件读写12345678head -2 test.txt #shellf = open(&quot;test.txt&quot;, &apos;r&apos;)contents = f.readlines()f.close()for line in open(&apos;test.txt&apos;,&apos;r&apos;,encoding=&apos;UTF-8&apos;): print(line.strip()) print(&quot;\\n&quot;) 统计文件中的词频12345678910111213141516171819def my_word_count(in_file,out_file): word_count = &#123;&#125; for line in open(in_file,&apos;r&apos;,encoding=&apos;utf-8&apos;): words = line.strip().split(&quot; &quot;) for word in words: if word.lower() in word_count: word_count[word.lower()] += 1 else: word_count[word.lower()] = 1 out = open(out_file,&apos;w&apos;,encoding=&apos;utf-8&apos;) for word in word_count: out.write(word+&quot;:&quot;+str(word_count[word])+&quot;\\n&quot;) print(&quot;词频统计完成&quot;) out.close() in_file = &apos;test.txt&apos;out_file = &apos;out.txt&apos;my_word_count(in_file,out_file)# += 间无空格 严格缩进 正则表达式 \\d匹配一个数字\\w匹配一个字母或数字\\s匹配一个空格（也包括Tab等空白符）.匹配任意字符表示任意个字符（包括0个）+表示至少一个字符?表示0个或1个字符{n}表示n个字符{n,m}表示n-m个字符[0-9a-zA-Z_]匹配一个数字、字母或者下划线[0-9a-zA-Z_]+可以匹配至少由一个数字、字母或者下划线组成的字符串，比如’a100’，’0Z’，’Py3000’等等；[a-zA-Z\\][0-9a-zA-Z_]可以匹配由字母或下划线开头，后接任意个由一个数字、字母或者下划线组成的字符串，也就是Python合法的变量；[a-zA-Z_][0-9a-zA-Z_]{0, 19}更精确地限制了变量的长度是1-20个字符（前面1个字符+后面最多19个字符）。A|B可以匹配A或B，所以(P|p)ython可以匹配’Python’或者’python’。^表示行的开头，^\\d表示必须以数字开头。\\d$表示必须以数字结束 参考资料: 廖雪峰的Python教程 有意思的拓展链接整理中八道python练习题http://aosabook.org/blog/ 以上来自稀牛学院数据科学实训营 寒小阳老师关于python基础的讲解由于课程版权问题，后续会减去课程具体内容，更换为个人学习体验和拓展学习内容","tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"一个MeDIP-seq实战","date":"2017-09-05T11:10:14.000Z","path":"2017/09/05/seq实战/一个MeDIP-seq实战/","text":"123456789101112131415161718192021wget ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByStudy/sra/SRP/SRP018/SRP018845/SRR764931/SRR764931.srawget ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByStudy/sra/SRP/SRP018/SRP018845/SRR764932/SRR764932.srals *sra |while read id; do fastq-dump --gzip --split-3 -A $id;donebowtie2 -p 6 -x /home/tingm/refdata/biotree_refdata/bowtie2_index/mm10/mm10 -U SRR764931.sra.fastq.gz | /home/tingm/software/samtools-1.3.1/samtools sort -O bam -o shGFP.bambowtie2 -p 6 -x /home/tingm/refdata/biotree_refdata/bowtie2_index/mm10/mm10 -U SRR764932.sra.fastq.gz | /home/tingm/software/samtools-1.3.1/samtools sort -O bam -o shDnmt3L.bam/home/tingm/software/samtools-1.3.1/samtools index shDnmt3L.bam/home/tingm/software/samtools-1.3.1/samtools index shGFP.bammacs2 callpeak -t shDnmt3L.bam -m 10 30 -p 1e-5 -f BAM -g mm -n shDnmt3L 2&gt;shDnmt3L.masc2.logmacs2 callpeak -t shGFP.bam -m 10 30 -p 1e-5 -f BAM -g mm -n shGFP 2&gt;shGFP.masc2.log~/.local/bin/bamCoverage -b shDnmt3L.bam -o shDnmt3L.bw #-p 10 --normalizeUsingRPKM~/.local/bin/bamCoverage -b shGFP.bam -o shGFP.bw #-p 10 --normalizeUsingRPKM~/.local/bin/computeMatrix reference-point --referencePoint TSS -b 10000 -a 10000 -R /home/tingm/refdata/biotree_refdata/bowtie2_index/mm10_refSeq.bed -S shDnmt3L.bw --skipZeros -o matrix1_shDnmt3L_TSS.gz~/.local/bin/plotHeatmap -m matrix1_shDnmt3L_TSS.gz -out shDnmt3L.png~/.local/bin/computeMatrix reference-point --referencePoint TSS -b 10000 -a 10000 -R /home/tingm/refdata/biotree_refdata/bowtie2_index/mm10_refSeq.bed -S shGFP.bw --skipZeros -o matrix1_shGFP_TSS.gz~/.local/bin/plotHeatmap -m matrix1_shGFP_TSS.gz -out shGFP.png 不知道结果对不对 MeDIP-seq 跟ChIP-seq的分析手段是一模一样的，同理hMeDIP-seq，caMeDIP-seq等等，都没有本质上的区别，只是用的抗体不一样而已一个MeDIP-seq实战","tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"}]},{"title":"一个ChIP-seq实战","date":"2017-09-02T12:10:00.000Z","path":"2017/09/02/seq实战/一个ChIP-seq实战/","text":"###软件准备已有sratoolkit,fastqc,bowtie2,samtools,htseq-count,bedtools,R,Rstudio下载macs2,deeptools bedtools官方下载参考12345678#download bedtoolswget https://github.com/arq5x/bedtools2/releases/download/v2.25.0/bedtools-2.25.0.tar.gztar -zxvf bedtools-2.25.0.tar.gzcd bedtools2makeecho &apos;PATH=$PATH:/home/tingm/practise/biosoft/bedtools2/bin&apos; &gt;&gt; ~/.bashrcsource ~/.bashrcsu yum install BEDTools #root 12#download pyBigWigpip install pyBigWig --user deeptools官方网址deeptools官方使用教程中文教程123456#download deeptools conda install deeptools #condagit clone https://github.com/fidelram/deepToolscd deepToolspython setup.py install --user~/.local/bin/deeptools centos本身python为2.6版本，且无pip 进行以下操作参考 https://my.oschina.net/vaero/blog/21048612345678910111213141516171819#download pip 先安装python2.7并设置软连接，指定yumpython#安装setuptoolswget https://pypi.python.org/packages/26/d1/dc7fe14ce4a3ff3faebf1ac11350de4104ea2d2a80c98393b55c84362b0c/setuptools-32.1.0.tar.gztar zxvf setuptools-32.1.0.tar.gzcd setuptools-32.1.0/python setup.py buildsudo python setup.py install#安装pip 参考https://my.oschina.net/vaero/blog/210486wget --no-check-certificate https://pypi.python.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gztar zxvf pip-9.0.1.tar.gzcd pip-9.0.1python setup.py install(error)yum install openssl openssl-devel -ymake # Python-2.7.6目录make installeasy_install -i http://pypi.douban.com/simple pipsudo python setup.py installpip MACS2官方网址https://pypi.python.org/pypi/MACS2/2.1.1.20160309MACS2中文教程centos python 2.6 上未安装成功12345678pip install MACS2 #errorwget https://pypi.python.org/packages/9f/99/a8ac96b357f6b0a6f559fe0f5a81bcae12b98579551620ce07c5183aee2c/MACS2-2.1.1.20160309.tar.gztar zxvf MACS2-2.1.1.20160309.tar.gzcd MACS2-2.1.1.20160309python setup.py install --user #error CRITICAL:Numpy must be installed!pip install numpy # python 2.7存在问题~/.local/bin/macs2 --help #未安装成功 ###bed下载1curl &apos;https://genome.ucsc.edu/cgi-bin/hgTables?hgsid=603641571_MKLxB78UAcjaI3oj5YiFCA0Ms86o&amp;boolshad.hgta_printCustomTrackHeaders=0&amp;hgta_ctName=tb_refGene&amp;hgta_ctDesc=table+browser+query+on+refGene&amp;hgta_ctVis=pack&amp;hgta_ctUrl=&amp;fbQual=whole&amp;fbUpBases=200&amp;fbExonBases=0&amp;fbIntronBases=0&amp;fbDownBases=200&amp;hgta_doGetBed=get+BED&apos; &gt; mm10_refSeq.bed ###分析过程 bowtie索引下载要注意，重新下载解压后未报错12345for x in $(seq 4 9);do ascp -T -l 200M -i ~/.aspera/connect/etc/asperaweb_id_dsa.openssh --host=ftp-private.ncbi.nlm.nih.gov --user=anonftp --mode=recv /sra/sra-instant/reads/ByStudy/sra/SRP/SRP017/SRP017311/SRR62020&quot;$x&quot;/SRR62020&quot;$x&quot;.sra . ;donefor i in `seq 4 9`;do fastq-dump --gzip --split-3 -A SRR62020$&#123;i&#125;.sra;donemkdir fastqc_outfastqc -o fastqc_out --extract *.fastq.gzls *.fastq.gz |while read id;do (bowtie2 -p 6 -3 5 --local -x /home/tingm/refdata/biotree_refdata/bowtie2_index/mm10/mm10 -U $&#123;id&#125;| /home/tingm/software/samtools-1.3.1/samtools sort -O bam -o $&#123;id%%.*&#125;.bam);done ###peaking calling1234macs2 callpeak -c IgGold.bam -t suz12.bam -m 10 30 -p 1e-5 -f BAM -g mm -n suz12 2&gt;suz12.masc2.logmacs2 callpeak -c IgGold.bam -t ring1B.bam -m 10 30 -p 1e-5 -f BAM -g mm -n ring1B 2&gt;ring1B.masc2.logmacs2 callpeak -c IgG.bam -t cbx7.bam -m 10 30 -p 1e-5 -f BAM -g mm -n cbx7 2&gt;cbx7.masc2.logmacs2 callpeak -c IgG.bam -t RYBP.bam -m 10 30 -p 1e-5 -f BAM -g mm -n RYBP 2&gt;RYBP.masc2.log ####bam转换成bw文件12345678910ls *.bam | while read iddofile=$(basename $id )sample=$&#123;file%%.*&#125;echo $sample/home/tingm/software/samtools-1.3.1/samtools index $id $id.bai~/.local/bin/bamCoverage -b $id -o $sample.bw ## 这里有个参数，-p 10 --normalizeUsingRPKM~/.local/bin/computeMatrix reference-point --referencePoint TSS -b 10000 -a 10000 -R /home/tingm/refdata/biotree_refdata/bowtie2_index/mm10_refSeq.bed -S $sample.bw --skipZeros -o matrix1_$&#123;sample&#125;_TSS.gz --outFileSortedRegions regions1_$&#123;sample&#125;_genes.bed~/.local/bin/plotHeatmap -m matrix1_$&#123;sample&#125;_TSS.gz -out $&#123;sample&#125;.pngdone ####画基因的TSS附近的和genebody附近的profile和heatmap图123456789~/.local/bin/computeMatrix reference-point -p 10 --referencePoint TSS -b 2000 -a 2000 -S *bw -R /home/tingm/refdata/biotree_refdata/bowtie2_index/mm10_refSeq.bed --skipZeros -o tmp4.mat.gz~/.local/bin/plotHeatmap -m tmp4.mat.gz -out tmp4.merge.png~/.local/bin/plotProfile --dpi 720 -m tmp4.mat.gz -out tmp4.profile.pdf --plotFileFormat pdf --perGroup~/.local/bin/plotHeatmap --dpi 720 -m tmp4.mat.gz -out tmp4.merge.pdf --plotFileFormat pdf修改了bed文件地址~/.local/bin/computeMatrix scale-regions -p 6 -S *bw -R /home/tingm/my_refdata/biotree_refdata/bowtie2_index/mm10_refSeq.bed -b 3000 -a 3000 -m 5000 --skipZeros -o tmp5.mat.gz~/.local/bin/plotHeatmap -m tmp5.mat.gz -out tmp5.merge.png~/.local/bin/plotProfile --dpi 720 -m tmp5.mat.gz -out tmp5.profile.pdf --plotFileFormat pdf --perGroup~/.local/bin/plotHeatmap --dpi 720 -m tmp5.mat.gz -out tmp5.merge.pdf --plotFileFormat pdf CentOS升级Python2.7及安装pip一文学会ChIP-Seq数据分析（想想也不可能）ChIP-seq实战分析生物信息学常见1000个软件的安装代码！ChIP-seq基础入门传送门","tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"}]},{"title":"一个RNA-seq实战","date":"2017-08-28T12:09:43.000Z","path":"2017/08/28/seq实战/一个RNA-seq实战/","text":"123456789101112#! usr/bin/bashset -uset -eset -o pipefailhg19_ref=~/fastq/hisat2_index/hg19/genomefor x in `seq 677 680`;do ascp -T -l 200M -i ~/.aspera/connect/etc/asperaweb_id_dsa.openssh --host=ftp-private.ncbi.nlm.nih.gov --user=anonftp --mode=recv /sra/sra-instant/reads/ByStudy/sra/SRP/SRP029/SRP029245/SRR957&quot;$x&quot;/SRR957&quot;$x&quot;.sra .;done##ls *sra |while read id; do fastq-dump --split-3 $id;donels *sra |while read id; do fastq-dump --gzip --split-3 -A $id ;done## ls *fastq |xargs fastqc -t 10ls *.fastq.gz|while read id;do(hisat2 -t -p 5 -x $hg19_ref -U $id 2&gt;$&#123;id%%.*&#125;.map.log | /home/tingm/software/samtools-1.3.1/samtools view -Sb - &gt;$&#123;id%%.*&#125;.bam);donels *.bam|while read id;do /home/tingm/software/samtools-1.3.1/samtools sort -n -@ 5 $id -o $&#123;id%%.*&#125;.Nsorted.bam;donels *.Nsorted.bam |while read id;do htseq-count -f bam -s no -i gene_name $id ~/fastq/refdata/Genecode/gencode.v26lift37.annotation.gff3 1&gt;$&#123;id%%.*&#125;.geneCounts 2&gt;$&#123;id%%.*&#125;.HTseq.log;done 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107#download deseqsource(&quot;http://bioconductor.org/biocLite.R&quot;)biocLite(&quot;DESeq&quot;)#载入R示范数据biocLite(&quot;pasilla&quot;)#查看r下载位置.libPaths()#转到pasilla下载位置setwd(&quot;/home/tingm/R/x86_64-pc-linux-gnu-library/3.2/pasilla/&quot;)#设置路径datafile =system.file(&quot;extdata/pasilla_gene_counts.tsv&quot;,package=&quot;pasilla&quot;) #读入数据pasillaCounttable=read.table(datafile,header=TRUE,row.names=1) dim(pasillaCounttable) #差异分析pasillaDesign = data.frame(row.names = colnames(pasillaCounttable),condition = c(&quot;untreated&quot;,&quot;untreated&quot;,&quot;untreated&quot;,&quot;untreated&quot;,&quot;treated&quot;,&quot;treated&quot;,&quot;treated&quot;),libType = c(&quot;single-end&quot;,&quot;single-end&quot;,&quot;paired-end&quot;,&quot;paired-end&quot;,&quot;single-end&quot;,&quot;paired-end&quot;,&quot;paired-end&quot;)) de = newCountDataSet(pasillaCounttable,pasillaDesign[,1]) de=estimateSizeFactors(de)de=estimateDispersions(de)#res是表达量检测结果res=nbinomTest(de,&quot;untreated&quot;,&quot;treated&quot;)uniq=na.omit(res)#输出差异显著值sum(na.omit(res$padj&lt;0.05))#输出表格write.table(res,file=&quot;file.csv&quot;,sep=&quot;,&quot;)#数据分析代码library(DESeq)C1=read.table(&quot;control_1.geneCounts&quot;,row.names=1)C2=read.table(&quot;control_2.geneCounts&quot;,row.names=1)S1=read.table(&quot;siSUZ12_1.geneCounts&quot;,row.names=1)S2=read.table(&quot;siSUZ12_2.geneCounts&quot;,row.names=1)data=cbind(C1,C2,S1,S2)n=nrow(data)#删除后四行data&lt;-data[-c(58523:58527),]#差异分析colnames(data)=c(&quot;C1&quot;,&quot;C2&quot;,&quot;S1&quot;,&quot;S2&quot;)type=rep(c(&quot;C&quot;,&quot;S&quot;),c(2,2))de=newCountDataSet(data,type)de=estimateSizeFactors(de)#locfunc = genefilter :: shorth数据集中0太多de=estimateDispersions(de)res=nbinomTest(de,&quot;C&quot;,&quot;S&quot;)# DESeq2 source(&quot;http://bioconductor.org/biocLite.R&quot;)biocLite(&quot;DESeq2&quot;)library(DESeq2)biocLite(&quot;limma&quot;)library(limma)library(pasilla)data(pasillaGenes)exprSet=counts(pasillaGenes) ##做好表达矩阵group_list=pasillaGenes$condition##做好分组因子即可colData &lt;- data.frame(row.names=colnames(exprSet), group_list=group_list)dds &lt;- DESeqDataSetFromMatrix(countData = exprSet,colData = colData,design = ~ group_list)dds2 &lt;- DESeq(dds) ##第二步，直接用DESeq函数即可resultsNames(dds2)res &lt;- results(dds2, contrast=c(&quot;group_list&quot;,&quot;treated&quot;,&quot;untreated&quot;))## 提取你想要的差异分析结果，我们这里是treated组对untreated组进行比较resOrdered &lt;- res[order(res$padj),]resOrdered=as.data.frame(resOrdered)#实战数据分析source(&quot;http://bioconductor.org/biocLite.R&quot;)biocLite(&quot;org.Hs.eg.db&quot;)library(org.Hs.eg.db)keytypes(org.Hs.eg.db)tmp=select(org.Hs.eg.db,keys=res$id,columns=c(&quot;SYMBOL&quot;,&quot;ENTREZID&quot;,&quot;GENENAME&quot;,&quot;ENSEMBL&quot;), keytype=&quot;SYMBOL&quot;)#合并res和tmpres=merge(tmp,res,by.x=&quot;SYMBOL&quot;,by.y=&quot;id&quot;,all=TRUE)#gotmp=select(org.Hs.eg.db, keys=res$ENSEMBL, columns=&quot;GO&quot;, keytype=&quot;ENSEMBL&quot;)ensembl_go=unlist(tapply(tmp[,2],as.factor(tmp[,1]),function(x) paste(x,collapse =&quot;|&quot;),simplify =F))#为res加入go注释，res$go=ensembl_go[res$ENSEMBL]#为res加入一列go#写入all——dataall_res=reswrite.csv(res,file=&quot;all_data.csv&quot;,row.names =F)uniq=na.omit(res)#删除无效基因sort_uniq=uniq[order(uniq$padj),]#按照矫正p值排序#写入排序后的all_datawrite.csv(res,file=&quot;all_data.csv&quot;,row.names =F)#标记上下调基因sort_uniq$up_down=ifelse(sort_uniq$baseMeanA&gt;sort_uniq$baseMeanB,&quot;up&quot;,&quot;down&quot;)#交换上下调基因列位置final_res=sort_uniq[,c(12,1:11)]#写出最后数据write.csv(final_res,file=&quot;final_annotation_gene_bedtools_sort_uniq.csv&quot;,row.names =F)#然后挑选出padj值小于0.05的数据来做富集tmp=select(org.Hs.eg.db, keys=sort_uniq[sort_uniq$padj&lt;0.05,1], columns=&quot;ENTREZID&quot;, keytype=&quot;SYMBOL&quot;)diff_ENTREZID=tmp$ENTREZIDdiff_SYMBOL=tmp$SYMBOLsource(&quot;http://bioconductor.org/biocLite.R&quot;)biocLite(&quot;DOSE&quot;)biocLite(&quot;clusterProfiler&quot;)require(DOSE)require(clusterProfiler)diff_ENTREZID=na.omit(diff_ENTREZID)diff_SYMBOL=na.omit(diff_SYMBOL)ego &lt;-enrichGO(gene=diff_ENTREZID,OrgDb=org.Hs.eg.db,ont=&quot;CC&quot;,pvalueCutoff=0.05) ##errorekk &lt;- enrichKEGG(gene=diff_ENTREZID,organism = &apos;hsa&apos;,pvalueCutoff = 0.05)write.csv(summary(ekk),&quot;KEGG-enrich.csv&quot;,row.names =F)write.csv(summary(ego),&quot;GO-enrich.csv&quot;,row.names =F) ###goenrich有错误 后续差异分析如何进行得到的结果？ R语言DESeq找差异基因 http://www.bio-info-trainee.com/741.html用DESeq进行差异分析的源代码 http://www.bio-info-trainee.com/867.html用R语言的DESeq2包来对RNA-seq数据做差异分析 http://www.bio-info-trainee.com/1533.html#more-1533Bioconductor annotation packages https://davetang.org/muse/2013/12/16/bioconductor-annotation-packages/clusterProfiler https://bioconductor.org/packages/release/bioc/vignettes/clusterProfiler/inst/doc/clusterProfiler.html","tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"}]},{"title":"转录组入门——8","date":"2017-08-23T10:02:51.000Z","path":"2017/08/23/转录组入门/转录组入门——8/","text":"选择p&lt;0.05而且abs(logFC)大于一个与众的基因为显著差异表达基因集，对这个基因集用R包做KEGG/GO超几何分布检验分析。然后把表达矩阵和分组信息分别作出cls和gct文件，导入到GSEA软件分析。基本任务是完成这个分析。 GO/KEGG分析 clusterProfiler12345678910111213141516171819202122232425262728source(&quot;http://bioconductor.org/biocLite.R&quot;)biocLite(&quot;DOSE&quot;)require(DOSE)require(clusterProfiler)library(org.Mm.eg.db)##去除ID的版本号diff_gene_ENSEMBL &lt;- unlist(lapply(diff_gene, function(x)&#123;strsplit(x, &quot;\\\\.&quot;)[[1]][1]&#125;))##GOid mapping + GO富集## R版本 在服务器上R 无法使用ego &lt;- enrichGO(gene = diff_gene_ENSEMBL, OrgDb = org.Mm.eg.db, keytype = &quot;ENSEMBL&quot;, ont = &quot;BP&quot;, pAdjustMethod = &quot;BH&quot;, pvalueCutoff = 0.01, qvalueCutoff = 0.05)##查看富集结果数据enrich_go &lt;- as.data.frame(ego)##作图barplot(ego, showCategory=10)dotplot(ego)enrichMap(ego)plotGOgraph(ego)##ID转化ids &lt;- bitr(diff_gene_ENSEMBL, fromType = &quot;ENSEMBL&quot;, toType = &quot;ENTREZID&quot;, OrgDb = &quot;org.Mm.eg.db&quot;)kk &lt;- enrichKEGG(gene = ids[,2], organism = &quot;mmu&quot;, keyType = &quot;kegg&quot;,pvalueCutoff = 0.05, pAdjustMethod = &quot;BH&quot;, qvalueCutoff = 0.1)##查看富集结果数据enrich_kegg &lt;- as.data.frame(kk)##作图dotplot(kk) GSEA 基因集富集分析 (Gene Set Enrichment Analysis, GSEA) 的基本思想是使用预定义的基因集（通常来自功能注释或先前实验的结果），将基因按照在两类样本中的差异表达程度排序，然后检验预先设定的基因集合是否在这个排序表的顶端或者底端富集。基因集合富集分析检测基因集合而不是单个基因的表达变化，因此可以包含这些细微的表达变化，预期得到更为理想的结果。 Gene Set Enrichment Analysis（GSEA）123456789101112131415diff_gene_DESeq2 &lt;- subset(res, padj &lt; 0.05 &amp; (log2FoldChange &gt; 1 | log2FoldChange &lt; -1))diff_gene_ENSEMBL &lt;- unlist(lapply(rownames(diff_gene_DESeq2), function(x)&#123;strsplit(x, &quot;\\\\.&quot;)[[1]][1]&#125;))rownames(diff_gene_DESeq2) &lt;- diff_gene_ENSEMBLdiff_gene_ENTREZID &lt;- select(org.Mm.eg.db,keys = diff_gene_ENSEMBL,columns =&quot;ENTREZID&quot;,keytype = &quot;ENSEMBL&quot;)diff_gene_DESeq2$ENTREZID &lt;- diff_gene_ENTREZID[,2]# 获取按照log2FC大小来排序的基因列表genelist &lt;- diff_gene_DESeq2$log2FoldChangenames(genelist) &lt;- diff_gene_DESeq2$ENTREZIDgenelist &lt;- sort(genelist, decreasing = TRUE)# GSEA分析（具体参数参考：https://mp.weixin.qq.com/s/p-n5jq5Rx2TqDBStS2nzoQ）gsemf &lt;- gseGO(genelist,OrgDb = org.Mm.eg.db,ont=&quot;MF&quot;)# 查看大致信息head(gsemf)# 画出GSEA图gseaplot(gsemf, geneSetID=&quot;GO:0000977&quot;) 转录组入门（7-8）从差异基因到富集分析从零开始学转录组（8）：富集分析","tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"}]},{"title":"转录组入门——7","date":"2017-08-21T08:02:38.000Z","path":"2017/08/21/转录组入门/转录组入门——7/","text":"12345678910111213141516171819202122.libPaths(&quot;/home/tingm/R/x86_64-pc-linux-gnu-library/3.2&quot;) library(limma) library(edgeR) library(DESeq2) #change path&lt;-&quot;/home/tingm/fastq/mus_result_count/&quot; #change samples&lt;-read.table(&quot;samples.list.txt&quot;,header=F,sep=&quot;\\t&quot;) samples&lt;-samples[,1] #change data.raw&lt;-read.table(&quot;Mus_SRR3589959.sgeneCounts&quot;,header=F,sep=&quot;\\t&quot;,col.names = c(&quot;gene_id&quot;,&quot;Mus_SRR3589959.sgeneCounts&quot;)) for(sample in samples) &#123; print(sample) file&lt;-paste(path,sample,sep=&quot;&quot;) data.new&lt;-read.table(file,header=F,sep=&quot;\\t&quot;,col.names = c(&quot;gene_id&quot;,sample)) data.raw&lt;-merge(data.new,data.raw,by=&quot;gene_id&quot;) &#125; data.raw&lt;-data.raw[-1:-5,] #change names(data.raw) &lt;- c(&quot;gene_id&quot;,&quot;Akap95_2&quot;,&quot;control_2&quot;,&quot;Akap95_1&quot;,&quot;control_1&quot;) write.table(data.raw,&quot;count.matix.csv&quot;,row.names=F,quote=F) 使用DESeq2进行差异基因分析 筛选出基因数目不一样123456789101112131415161718##数据预处理database &lt;- read.table(file = &quot;count.matix.csv&quot;, sep = &quot; &quot;, header = T,row.names = 1)database &lt;- round(as.matrix(database))##设置分组信息并构建dds对象condition &lt;- factor(c(&quot;Akap95&quot;,&quot;control&quot;,&quot;Akap95&quot;,&quot;control&quot;), levels = c(&quot;control&quot;, &quot;Akap95&quot;))coldata &lt;- data.frame(row.names = colnames(database), condition)dds &lt;- DESeqDataSetFromMatrix(countData=database, colData=coldata, design=~condition)dds &lt;- dds[ rowSums(counts(dds)) &gt; 1, ]##使用DESeq函数估计离散度，然后差异分析获得res对象dds &lt;- DESeq(dds)res &lt;- results(dds)#summary(res)#最后设定阈值，筛选差异基因，导出数据(全部数据。包括标准化后的count数)res &lt;- res[order(res$padj),]diff_gene_DESeq2 &lt;- subset(res, padj &lt; 0.05 &amp; (log2FoldChange &gt; 1 | log2FoldChange &lt; -1))diff_gene_DESeq2 &lt;- row.names(diff_gene_DESeq2)resdata &lt;- merge(as.data.frame(res), as.data.frame(counts(dds, normalized=TRUE)),by=&quot;row.names&quot;,sort=FALSE)write.csv(resdata,file = &quot;control_vs_Akap95.csv&quot;,row.names = F) 使用edgeR进行差异基因分析12345678910111213141516##跟DESeq2一样，导入数据，预处理（用了cpm函数）exprSet&lt;- read.table(file = &quot;count.matix.csv&quot;, sep = &quot; &quot;, header = TRUE, row.names = 1, stringsAsFactors = FALSE)group_list &lt;- factor(c(&quot;Akap95&quot;,&quot;control&quot;,&quot;Akap95&quot;,&quot;control&quot;), levels = c(&quot;control&quot;, &quot;Akap95&quot;))exprSet &lt;- exprSet[rowSums(cpm(exprSet) &gt; 1) &gt;= 2,]##设置分组信息，并做TMM标准化exprSet &lt;- DGEList(counts = exprSet, group = group_list)exprSet &lt;- calcNormFactors(exprSet)##使用qCML（quantile-adjusted conditional maximum likelihood）估计离散度（只针对单因素实验设计）exprSet &lt;- estimateCommonDisp(exprSet)exprSet &lt;- estimateTagwiseDisp(exprSet)##寻找差异gene(这里的exactTest函数还是基于qCML并且只针对单因素实验设计)，然后按照阈值进行筛选即可et &lt;- exactTest(exprSet)tTag &lt;- topTags(et, n=nrow(exprSet))diff_gene_edgeR &lt;- subset(tTag$table, FDR &lt; 0.05 &amp; (logFC &gt; 1 | logFC &lt; -1))diff_gene_edgeR &lt;- row.names(diff_gene_edgeR)write.csv(tTag$table,file = &quot;control_vs_Akap95_edgeR.csv&quot;) 使用limma进行差异分析 limma的voom流程待续 不同软件包分析结果比较待续 转录组入门（7）：差异基因分析从零开始学转录组（7）：差异基因表达分析转录组入门（7-8）从差异基因到富集分析为什么RNA-seq的read数服从泊松分布？","tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"}]},{"title":"转录组入门——6","date":"2017-08-15T12:37:18.000Z","path":"2017/08/15/转录组入门/转录组入门——6/","text":"实现reads计数的软件教程 map后获得了每条read比对到基因组上的位置，后面需要把基因组的位置对应到基因。这个提供基因位置的注释文件通常以GTF或GFF3格式呈现。基因表达量最直接的分析手段就是计算比对到每个基因的reads有多少条，在转录组测序中，我们通常称这个数字为count对每个基因计数之后得到的count matrix再后续的分析中，要注意标准化的问题。比较同一个样本(within-sample)不同基因之间的表达情况，需要考虑到转录本长度，因为转录本越长，那么检测的片段也会更多。比较不同样本（across sample）同一个基因的表达情况，不必在意转录本长度，但要考虑到测序深度（sequence depth)，测序深度越高，检测到的概率越大。除这两因素外，还需考虑GC%导致的偏差及测序仪器的系统偏差。目前对read count标准化的算法有RPKM（SE）, FPKM（PE），TPM, TMM等。但是，有一些下游分析的软件会要求是输入的count matrix是原始数据，未经标准化，比如说DESeq2，这个时候你需要注意你上一步所用软件会不会进行标准化。计数分为三个水平： gene-level, transcript-level, exon-usage-level标准化方法： FPKM RPKM TMM TPM Gene-level HTSeq 官方网址 中文教程featureCounts 官方网址 Rsubread 官方网址bedtools multicov 官方网址 中文教程Qualimap 官方网址 中文教程GenomicRanges 官方网址 Transcript-level cufflink 官方网址 中文教程stringtie 官方网址 中文教程上述软件都是alignment-basedalignment-free软件，如kallisto, silfish, salmon，能够省去比对这一步，直接得到read count，在运行效率上更高。不过最近一篇文献Gaining comprehensive biological insight into the transcriptome by performing a broad-spectrum RNA-seq analysis指出这类方法在估计丰度时存在样本特异性和读长偏差salmon Exon-usage-level 和基因水平的统计类似。但是值得注意的是为了更好的计数，我们需要提供无重叠的外显子区域的gtf文件Detecting differential usage of exons from RNA-seq data。用于分析差异外显子使用的DEXSeq提供了一个Python脚本（dexseq_prepare_annotation.py）执行这个任务。 基因表达量归一算法待续 参考 htseq-count1234ls Homo*.Nsorted.bam|while read id;do(htseq-count -f bam -i gene_name -s no $id $hg19_gff &gt; $&#123;id%_*&#125;.geneCounts 2&gt; $&#123;id%_*&#125;.HTseq.log);donels Mus*.Nsorted.bam|while read id;do(htseq-count -f bam -i gene_name -s no $id $mm10_gff &gt; $&#123;id%_*&#125;.geneCounts 2&gt; $&#123;id%_*&#125;.HTseq.log);donewc -l Homo*.geneCounts head -n 4 Homo*.geneCounts -f bam/sam： 指定输入文件格式，默认SAM-r name/pos: 你需要利用samtool sort对数据根据read name或者位置进行排序，默认是name-s yes/no/reverse: 数据是否来自于strand-specific assay。DNA是双链的，所以需要判断到底来自于哪条链。如果选择了no， 那么每一条read都会跟正义链和反义链进行比较。默认的yes对于双端测序表示第一个read都在同一个链上，第二个read则在另一条链上。-a 最低质量， 剔除低于阈值的read-m 模式 union（默认）, intersection-strict and intersection-nonempty。一般而言就用默认的，作者也是这样认为的。-i id attribute: 在GTF文件的最后一栏里，会有这个基因的多个命名方式（如下）， RNA-Seq数据分析常用的是gene_id， 当然你可以写一个脚本替换成其他命名方式。 编写脚本合并所有的样本为表达矩阵123456789101112131415sed -i &apos;$d&apos; *geneCountsperl -lne &apos;if($ARGV=~/Homo_(.*).geneCounts/)&#123;print &quot;$1\\t$_&quot;&#125;&apos; *|grep -v Homo_sapiens&gt;hg.countperl -lne &apos;if($ARGV=~/Mus_(.*).geneCounts/)&#123;print &quot;$1\\t$_&quot;&#125;&apos; *|grep -v Mus &gt;mus.counthg &lt;- read.csv(file = &quot;hg.count&quot;,header = F,sep = &quot;\\t&quot;)colnames(hg) &lt;- c(&apos;sample&apos;,&apos;gene&apos;,&apos;count&apos;)library(reshape2)hg_reads &lt;- dcast(hg,formula = gene ~ sample)write.table(hg_reads,file = &quot;hg_join.count&quot;,sep = &quot;\\t&quot;,quote = FALSE,row.names = FALSE)mus &lt;- read.csv(file = &quot;mus.count&quot;,header = F,sep = &quot;\\t&quot;)colnames(mus) &lt;- c(&apos;sample&apos;,&apos;gene&apos;,&apos;count&apos;)library(reshape2)mus_reads &lt;- dcast(mus,formula = gene ~ sample)write.table(mus_reads,file = &quot;mus_join.count&quot;,sep = &quot;\\t&quot;,quote = FALSE,row.names = FALSE) 对表达矩阵可进行简单的探索123456789101112summary(hg_reads) summary(mus_reads) row.names(hg_reads) &lt;- hg_reads$geneGAPDH &lt;- hg_reads[rownames(hg_reads)==&quot;GAPDH&quot;,]source(&quot;http://bioconductor.org/biocLite.R&quot;)biocLite(&quot;dplyr&quot;)library(dplyr)sample_mean &lt;- group_by(hg,sample)%&gt;% summarize(mean=mean(count))gene_mean &lt;- group_by(hg,gene)%&gt;% summarize(mean=mean(count)) tmp &lt;- full_join(hg,gene_mean,by=&apos;gene&apos;)write.table(tmp,file = &quot;tmp.count&quot;,sep = &quot;\\t&quot;,quote = FALSE,row.names = FALSE) 另一种1234567891011121314151617181920212223242526272829303132options(stringsAsFactors = FALSE)#导入数据homo_control &lt;- read.table(&quot;Homo_SRR3589956.geneCounts&quot;,sep=&quot;\\t&quot;, col.names = c(&quot;gene_symbol&quot;,&quot;homo_control&quot;))homo_rep1 &lt;- read.table(&quot;Homo_SRR3589957.geneCounts&quot;,sep=&quot;\\t&quot;, col.names = c(&quot;gene_symbol&quot;,&quot;homo_rep1&quot;))homo_rep2 &lt;- read.table(&quot;Homo_SRR3589958.geneCounts&quot;,sep=&quot;\\t&quot;,col.names = c(&quot;gene_symbol&quot;,&quot;rep2&quot;))mus_control1 &lt;- read.table(&quot;Mus_SRR3589959.geneCounts&quot;, sep=&quot;\\t&quot;, col.names = c(&quot;gene_symbol&quot;,&quot;mus_control1&quot;))mus_control2 &lt;- read.table(&quot;Mus_SRR3589960.geneCounts&quot;, sep=&quot;\\t&quot;, col.names = c(&quot;gene_symbol&quot;,&quot;mus_control2&quot;)) mus_rep1 &lt;- read.table(&quot;Mus_SRR3589961.geneCounts&quot;, sep=&quot;\\t&quot;, col.names = c(&quot;gene_symbol&quot;,&quot;mus_rep1&quot;)) mus_rep2 &lt;- read.table(&quot;Mus_SRR3589962.geneCounts&quot;, sep=&quot;\\t&quot;,col.names = c(&quot;gene_symbol&quot;,&quot;mus_rep2&quot;))#去除后五行homo_control &lt;- homo_control[-58523:-58527,]homo_rep1 &lt;- homo_rep1[-58523:-58527,]homo_rep2 &lt;- homo_rep2[-58523:-58527,]mus_control1 &lt;- mus_control1[-48322:-48326,]mus_control2 &lt;- mus_control2[-48322:-48326,]mus_rep1 &lt;- mus_rep1[-48322:-48326,]mus_rep2 &lt;- mus_rep2[-48322:-48326,]#整合homo_raw_count &lt;- merge(merge(homo_control, homo_rep1, by=&quot;gene_symbol&quot;), homo_rep2, by=&quot;gene_symbol&quot;)mus_raw_count &lt;- merge(merge(mus_control1, mus_control2, by=&quot;gene_symbol&quot;), merge(mus_rep1,mus_rep2, by=&quot;gene_symbol&quot;))summary(homo_raw_count)summary(mus_raw_count)row.names(homo_raw_count) &lt;- homo_raw_count$gene_symbolrow.names(mus_raw_count) &lt;- mus_raw_count$gene_symbolgapdh &lt;- homo_raw_count[rownames(homo_raw_count)==&quot;GAPDH&quot;,]gapdh &lt;- mus_raw_count[rownames(mus_raw_count)==&quot;GAPDH&quot;,]#因为我们无法在EBI数据库上直接搜索找到ENSMUSG00000024045.5这样的基因，只能是ENSMUSG00000024045的整数，没有小数点，所以需要进一步替换为整数的形式#第一步将匹配到的.以及后面的数字连续匹配并替换为空，并赋值给ENSEMBL#ENSEMBL &lt;- gsub(&quot;\\\\.\\\\d*&quot;, &quot;&quot;, raw_count_filt1$gene_id) #将ENSEMBL重新添加到raw_count_filt1矩阵#row.names(raw_count_filter) &lt;- ENSEMBL 以上两种都有两个问题：AKAP95未找到 小鼠第一列不是gene name和sort是否为reads name无关，htseq count -i 参数去掉则默认为gene id 看生物学意义特殊的基因表现如何如GAPDH,β-ACTIN 12345678910#! usr/bin/bashset -uset -eset -o pipefailhg19_ref=~/fastq/hisat2_index/hg19/genomemm10_ref=~/fastq/hisat2_index/mm10/genomehg19_gff=~/fastq/refdata/Genecode/gencode.v26lift37.annotation.gff3mm10_gff=~/fastq/refdata/Genecode/gencode.vM10.annotation.gtfls Homo*.sorted.bam|while read id;do(htseq-count -f bam -r pos -s no $id $hg19_gff &gt; $&#123;id%%.*&#125;.sgeneCounts 2&gt; $&#123;id%%.*&#125;.sHTseq.log);donels Mus*.sorted.bam|while read id;do(htseq-count -f bam -r pos -s no $id $mm10_gff &gt; $&#123;id%%.*&#125;.sgeneCounts 2&gt; $&#123;id%%.*&#125;.sHTseq.log);done 12345678910111213141516171819202122232425options(stringsAsFactors = FALSE)homo_control &lt;- read.table(&quot;Homo_SRR3589956.sgeneCounts&quot;,sep=&quot;\\t&quot;, col.names = c(&quot;gene_id&quot;,&quot;homo_control&quot;))homo_rep1 &lt;- read.table(&quot;Homo_SRR3589957.sgeneCounts&quot;,sep=&quot;\\t&quot;, col.names = c(&quot;gene_id&quot;,&quot;homo_rep1&quot;))homo_rep2 &lt;- read.table(&quot;Homo_SRR3589958.sgeneCounts&quot;,sep=&quot;\\t&quot;,col.names = c(&quot;gene_id&quot;,&quot;rep2&quot;))mus_control1 &lt;- read.table(&quot;Mus_SRR3589959.sgeneCounts&quot;, sep=&quot;\\t&quot;, col.names = c(&quot;gene_id&quot;,&quot;mus_control1&quot;))mus_control2 &lt;- read.table(&quot;Mus_SRR3589960.sgeneCounts&quot;, sep=&quot;\\t&quot;, col.names = c(&quot;gene_id&quot;,&quot;mus_control2&quot;)) mus_rep1 &lt;- read.table(&quot;Mus_SRR3589961.sgeneCounts&quot;, sep=&quot;\\t&quot;, col.names = c(&quot;gene_id&quot;,&quot;mus_rep1&quot;)) mus_rep2 &lt;- read.table(&quot;Mus_SRR3589962.sgeneCounts&quot;, sep=&quot;\\t&quot;,col.names = c(&quot;gene_id&quot;,&quot;mus_rep2&quot;))homo_control &lt;- homo_control[-60472:-60476,]homo_rep1 &lt;- homo_rep1[-60472:-60476,]homo_rep2 &lt;- homo_rep2[-60472:-60476,]mus_control1 &lt;- mus_control1[-48441:-48445,]mus_control2 &lt;- mus_control2[-48441:-48445,]mus_rep1 &lt;- mus_rep1[-48441:-48445,]mus_rep2 &lt;- mus_rep2[-48441:-48445,]homo_raw_count &lt;- merge(merge(homo_control, homo_rep1, by=&quot;gene_id&quot;), homo_rep2, by=&quot;gene_id&quot;)mus_raw_count &lt;- merge(merge(mus_control1, mus_control2, by=&quot;gene_id&quot;), merge(mus_rep1,mus_rep2, by=&quot;gene_id&quot;))ENSEMBL &lt;- gsub(&quot;\\\\.\\\\d*_\\\\d*&quot;, &quot;&quot;, homo_raw_count$gene_id)row.names(homo_raw_count) &lt;- ENSEMBL # errorENSEMBL &lt;- gsub(&quot;\\\\.\\\\d*&quot;, &quot;&quot;, mus_raw_count$gene_id) row.names(mus_raw_count) &lt;- ENSEMBLsummary(homo_raw_count)summary(mus_raw_count)#在UniProt数据库找到AKAP95的idMUS_AKAP95 &lt;- mus_raw_count[rownames(mus_raw_count)==&quot;ENSMUSG00000024045&quot;,] #reads很大 最开始未加 -r pos 有问题 reads数目不同，后续计数没有大问题12345678910111213141516171819202122232425count.matrix&lt;-function()&#123; .libPaths(&quot;/home/tingm/R/x86_64-pc-linux-gnu-library/3.2&quot;) library(limma) library(edgeR) #change path&lt;-&quot;/home/tingm/fastq/homo_result_count/&quot; #change samples&lt;-read.table(&quot;samples.list.txt&quot;,header=F,sep=&quot;\\t&quot;) samples&lt;-samples[,1] #change data.raw&lt;-read.table(&quot;Homo_SRR3589956.sgeneCounts&quot;,header=F,sep=&quot;\\t&quot;,col.names = c(&quot;gene_id&quot;,&quot;Homo_SRR3589956.sgeneCounts&quot;)) for(sample in samples) &#123; print(sample) file&lt;-paste(path,sample,sep=&quot;&quot;) data.new&lt;-read.table(file,header=F,sep=&quot;\\t&quot;,col.names = c(&quot;gene_id&quot;,sample)) data.raw&lt;-merge(data.new,data.raw,by=&quot;gene_id&quot;) &#125; data.raw&lt;-data.raw[-1:-5,] #ENSEMBL &lt;- gsub(&quot;\\\\.\\\\d*_\\\\d*&quot;, &quot;&quot;, data.raw$gene_id) #row.names(data.raw) &lt;- ENSEMBL # ENSEMBL &lt;- gsub(&quot;\\\\.\\\\d*&quot;, &quot;&quot;, mus_raw_count$gene_id) write.table(data.raw,&quot;count.matix.csv&quot;,row.names=F,quote=F)&#125; 参考引用来自以下资料PANDA姐的转录组入门(6)：reads计数生信媛 转录组入门(6)： reads计数lxmic转录组入门(6)： reads计数","tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"}]},{"title":"转录组入门——5","date":"2017-08-14T10:21:01.000Z","path":"2017/08/14/转录组入门/转录组入门——5/","text":"比对软件简介 比对软件比较Bowtie1 官方网址Bowtie2 官方网址 中文教程 中文教程中文教程 中文教程Bowtie1 Bowtie2 二者区别Bowtie 安装1234#下载bowtie2-2.3.2-linux-x86_64.zip解压后有错误 未解决 tbb需要Python2.7find ./ -name libtbbmalloc_proxy.so.2echo $LD_LIBRARY_PATHexport LD_LIBRARY_PATH=~/biosoft/tbb2017_20170604oss/lib/:$LD_LIBRARY_PATH TBB下载地址Linux LD_LIBRARY_PATHapt-get 和 yum installTophat 官方网址 中文教程Hisat2 官方网址 中文教程STAR 中文教程 中文教程其他比对软件 参考 hisat2 下载index bowtie原理123wget ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/data/hg19.tar.gzwget ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/data/mm10.tar.gztar -zxvf *.tar.gz hiat2 Map，sam转bam，name-sort1234567891011121314#! usr/bin/bashset -uset -eset -o pipefailhg19_ref=~/fastq/hisat2_index/hg19/genomemm10_ref=~/fastq/hisat2_index/mm10/genomehg19_gff=~/fastq/refdata/Genecode/gencode.v26lift37.annotation.gff3mm10_gff=~/fastq/refdata/Genecode/gencode.vM10.annotation.gtfdata_path=~/fastqls Homo*.fastq.gz|while read id;do(hisat2 -t -p 5 -x $hg19_ref -1 $data_path/$&#123;id%_*&#125;_1.fastq.gz -2 $data_path/$&#123;id%_*&#125;_2.fastq.gz 2&gt;$&#123;id%_*&#125;_map.log | /home/tingm/software/samtools-1.3.1/samtools view -Sb - &gt;$&#123;id%_*&#125;.bam);donels Mus*.fastq.gz|while read id;do(hisat2 -t -p 5 -x $mm10_ref -1 $data_path/$&#123;id%_*&#125;_1.fastq.gz -2 $data_path/$&#123;id%_*&#125;_2.fastq.gz 2&gt;$&#123;id%_*&#125;_map.log | /home/tingm/software/samtools-1.3.1/samtools view -Sb - &gt;$&#123;id%_*&#125;.bam);donels *.bam|while read id;do(/home/tingm/software/samtools-1.3.1/samtools sort -n -@ 5 $id -o $&#123;id%%.*&#125;.Nsorted.bam);done#ls Homo*.Nsorted.bam|while read id;do(htseq-count -f bam -i gene_name -s no $id $hg19_gff &gt; $&#123;id%%.*&#125;.geneCounts 2&gt; $&#123;id%%.*&#125;.HTseq.log);done#ls Mus*.Nsorted.bam|while read id;do(htseq-count -f bam -i gene_name -s no $id $mm10_gff &gt; $&#123;id%%.*&#125;.geneCounts 2&gt; $&#123;id%%.*&#125;.HTseq.log);done BWA中文参考 Samtools官方网址下载参考中文教程123456wget https://github.com/samtools/samtools/releases/download/1.5/samtools-1.5.tar.bz2tar jxf samtools-1.5.tar.bz2cd samtools-1.5makeecho &apos;PATH=$PATH:~/biosoft/samtools-1.5/&apos; &gt;&gt; ~/.bashrcsource ~/.bashrc 两种排序方式及索引(默认排序是根据染色体位置 -n reads名称进行排序)12345678ls *.sra.bam|while read id;do(/home/tingm/software/samtools-1.3.1/samtools sort -@ 5 $id -o $&#123;id%%.*&#125;.sorted.bam);donels *.sorted.bam|while read id;do(/home/tingm/software/samtools-1.3.1/samtools index $&#123;id%%.*&#125;.sorted.bam;done#head -1000 Homo_SRR3589956.sra.bam &gt; test.bam#samtools view test.bam | head#head -1000 Homo_SRR3589956.Nsorted.bam &gt; test.nsorted.bam#samtools view test.nsorted.bam | head#head -1000 Homo_SRR3589956.sorted.bam &gt; test.sorted.bam#samtools view test.sorted.bam | head IGV 载入bam文件及其index 如何查看，理解结果？1igv.sh 质量控制 常用工具有Picard https://broadinstitute.github.io/picard/RSeQC http://rseqc.sourceforge.net/Qualimap http://qualimap.bioinfo.cipf.es/12345678# Python2.7环境下pip install RSeQC# 先对bam文件进行统计分析， 从结果上看是符合70~90的比对率要求bam_stat.py -i Homo_SRR3589956.sorted.bam# 基因组覆盖率的QC需要提供bed文件，可以直接RSeQC的网站下载，或者可以用gtf转换wget https://sourceforge.net/projects/rseqc/files/BED/Human_Homo_sapiens/hg19_RefSeq.bed.gz/download -O hg19_RefSeq.bed.gzgzip -d hg19_RefSeq.bed.gzread_distribution.py -i Homo_SRR3589956.sorted.bam -r ~/fastq/refdata/hg19_RefSeq.bed 参考资料PANDA姐的转录组入门(5)：序列比对hoptop 转录组入门（5）： 序列比对lxmic转录组入门（5）： 序列比对 Picard下载参考2下载版本较旧 因需java1.8 放弃旧版本下载参考1 java需1.8java8下载下载参考终版下载参考12wget https://github.com/broadinstitute/picard/releases/download/2.11.0/picard.jarjava -jar picard.jar -h 使用参考使用参考","tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"}]},{"title":"转录组入门——4","date":"2017-08-11T14:08:50.000Z","path":"2017/08/11/转录组入门/转录组入门——4/","text":"参考基因组(hg19)下载 NCBI UCSC ENSEMBL数据库 对应关系GRCh36 hg18 ENSEMBL release_52GRCh37 hg19 ENSEMBL release_59/61/64/68/69/75GRCh38 hg38 ENSEMBL release_76/77/78/80/81/82 NCBIhttps://ftp.ncbi.nlm.nih.gov/genomes/H_sapiens/ARCHIVE/BUILD.37.3/Assembled_chromosomes/seq/123456789101112#! /bin/bashfile=$1chrs=`awk &apos;&#123;print $1&#125;&apos; $file`for i in $&#123;chrs[@]&#125;;do echo $i;wget https://ftp.ncbi.nlm.nih.gov/genomes/H_sapiens/ARCHIVE/BUILD.37.3/Assembled_chromosomes/seq/hs_ref_GRCh37.p5_$&#123;i&#125;.fa.gz;donegunzip *.gzfor i in $&#123;chrs[@]&#125;;do cat hs_ref_GRCh37.p5_$&#123;i&#125;.fa &gt;&gt; hg19.fasta;donerm -fr *.fa Emsembl 过于大 应该为3G大小？1nohup wget ftp://ftp.ensembl.org/pub/release-75/fasta/homo_sapiens/dna/Homo_sapiens.GRCh37.75.dna.toplevel.fa.gz &amp; UCSClxmic 转录组入门（4）：了解参考基因组及基因注释12345678nohup wget http://hgdownload.soe.ucsc.edu/goldenPath/hg19/bigZips/chromFa.tar.gz &amp;jobsfg %1bg %1kill %1tar -zxvf chromFa.tar.gzcat *.fa &gt; hg19.farm -rf chr* 参考基因组注释下载NCBI12nohup wget https://ftp.ncbi.nlm.nih.gov/genomes/H_sapiens/GFF/ref_GRCh38.p7_top_level.gff3.gz &amp;gzip -d ref_GRCh38.p7_top_level.gff3.gz Ensembl生信菜鸟团 基因组各种版本对应关系12nohup wget ftp://ftp.ensembl.org/pub/release-75/gtf/homo_sapiens/Homo_sapiens.GRCh37.75.gtf.gz &amp;gzip -d Homo_sapiens.GRCh37.75.gtf.gz UCSC Navigate to http://genome.ucsc.edu/cgi-bin/hgTablesSelect the following options:clade: Mammalgenome: Humanassembly: Feb. 2009 (GRCh37/hg19)group: Genes and Gene Predictionstrack: UCSC Genestable: knownGeneregion: Select “genome” for the entire genome.output format: GTF - gene transfer formatoutput file: enter a file name to save your results to a file, or leave blank to display results in the browserClick ‘get output’. Genecode转录组入门4-了解参考基因组及基因注释1234wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_26/GRCh37_mapping/gencode.v26lift37.annotation.gtf.gzwget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_26/GRCh37_mapping/gencode.v26lift37.annotation.gff3.gzgunzip *.gz rm -rf *.gz IGV转录组作业（四）：来自零基础的小白1234![软件自带基因组-TP53](http://upload-images.jianshu.io/upload_images/2116382-35124fbd81c8bdab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)![hg19.fa 蓝色带没有变化？？](http://upload-images.jianshu.io/upload_images/2116382-75961165acf84dd2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)***问题：linux服务器未安装上IGV；自行下载的hg19比对结果和软件自带不一致*** sudo apt-get install glib-networking-common``` 其他参考资料ncbi中的基因组genome全序列下载 参考基因组下载及index建立基因组各种版本对应关系从UCSC获取基因组序列及基因注释转录组入门4-了解参考基因组及基因注释关于基因组注释文件GTF的解释GTF/GFF文件的差异及其看相互转换ensembel及NCBI注释文件下载","tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"}]},{"title":"转录组入门——3","date":"2017-08-10T11:34:02.000Z","path":"2017/08/10/转录组入门/转录组入门——3/","text":"SRA Toolkit 软件官方网址 软件下载（CentOS 6.8）官方参考中文参考1234567891011#下载软件包wget ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/2.8.2-1/sratoolkit.2.8.2-1-centos_linux64.tar.gz#解压tar -zxf sratoolkit.2.8.2-1-centos_linux64.tar.gz #解压后文件夹移动到biosoft目录下mv sratoolkit.2.8.2-1-centos_linux64/ biosoft/#设置绝对路径echo &apos;PATH=$PATH:~/biosoft/sratoolkit.2.8.2-1-centos_linux64/bin&apos; &gt;&gt; ~/.bashrcsource ~/.bashrc#测试安装fastq-dump -h fastq-dump参数官方参考中文参考–split-3 如果是双端测序数据，则输出两个文件，如果不是则只输出一个文件-O 指定输出路径–gzip 指定输出格式为gzip压缩格式-A –accession 输入sra文件可以是绝对路径 SRA文件转换为fastq文件(仅关注RNA-Seq数据)1for i in `seq 56 62`;do fastq-dump --gzip --split-3 -O ~/fastq/ -A ~/ncbi/public/sra/SRR35899$&#123;i&#125;.sra;done 生信名词理解测序reads：高通量测序平台产生的序列标签就称为readsGC含量：中文参考质量值：每测一个碱基会有相应的质量值，质量值用于衡量测序准确度中文参考英文参考adapter：接头是一段短的序列已知的核酸链，用于连接序列未知的目标测序片段index：索引序列，是一段很短的寡居核酸链，用于在多个样品混合测序时，标记不同的样品，为区分不同样本而构建参考 FastQC 软件官方网址 软件下载（CentOS 6.8）官方参考中文参考123456789java -versionwget http://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.5.zipunzip fastqc_v0.11.5.zipmv FastQC/ biosoft/cd ~/biosoft/FastQCchmod 755 fastqcecho &apos;PATH=$PATH:~/biosoft/FastQC/&apos; &gt;&gt; ~/.bashrcsource ~/.bashrcfastqc -h fastqc-o 输出目录，需自己创建目录–extract 是否解压输出文件，默认自动解压缩zip文件-f 指定输入文件的类型，支持fastq|bam|sam三种格式的文件，默认自动识别-t 同时处理的文件数目1fastqc -o fastqc_out --extract *.fastq.gz fastqc质控结果官方参考中文参考中文参考 批量查看MultiQC官方网址中文参考 软件下载及使用123conda install -c bioconda multiqc#进入对应文件，扫描zip文件，忽略html文件multiqc ~/fastq/fastqc_out/*fastqc.zip --ignore *.html 结果查看 重点关注的部分参考青山屋主 转录组入门3-测序数据质量检查","tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"}]},{"title":"转录组入门——2","date":"2017-08-09T10:58:42.000Z","path":"2017/08/09/转录组入门/转录组入门——2/","text":"CentOS release 6.5 (Final)GEO/SRA数据库的数据存放形式参考青山屋主 转录组入门(2)-作业hoptop 转录组入门（二）读文献下数据 软件及参数比对：TopHat (v2.0.13) 参考基因组：GRCh37/hg19 GTF文件：GTF version GRCh37.70 去除MQ&gt;30的reads计算平均插入大小和标准差：Picard-tools（v1.126）计算reads count：HTSeq (v0.6.0)差异表达：DESeq (v3.0) 差异外显子：DEXSeq (v3.1)normalize Bigwig files to per million reads：BEDTools (v2.17.0), bedGraphToBigWig tool (v4)统计分析和作图： R (v3.1.1) (http://www.r-project.org/)GO富集分析：DAVID (http://david.ncifcrf.gov/) 123456789101112# download Asperawget http://download.asperasoft.com/download/sw/connect/3.6.2/aspera-connect-3.6.2.117442-linux-64.tar.gztar zxf aspera-connect-3.6.2.117442-linux-64.tar.gzsh aspera-connect-3.6.2.117442-linux-64.shecho &apos;PATH=$PATH:/home/tma/.aspera/connect/bin&apos; &gt;&gt; ~/.bashrcsource ~/.bashrcascp# download datafor x in $(seq 48 62);do ascp -T -l 200M -i ~/.aspera/connect/etc/asperaweb_id_dsa.openssh --host=ftp-private.ncbi.nlm.nih.gov --user=anonftp --mode=recv /sra/sra-instant/reads/ByStudy/sra/SRP/SRP075/SRP075747/SRR35899&quot;$x&quot;/SRR35899&quot;$x&quot;.sra . ;done# sratoolkit prefetchfor x in $(seq 48 62);do prefetch SRR35899&quot;$x&quot;;done","tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"}]},{"title":"转录组入门——1","date":"2017-08-09T08:22:38.000Z","path":"2017/08/09/转录组入门/转录组入门——1/","text":"系统环境CentOS 6.8（虚拟机之前就已安装好，所以不是推荐安装的ubuntu） 软件安装参考Jimmy转录组入门(1)：计算机资源的准备青山屋主转录组入门(1)-作业HTSeq中文教程1234567891011121314151617181920212223242526272829303132333435363738# download miniconda2wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh bash Miniconda2-latest-Linux-x86_64.shsource ~/.bashrc# sratoolkitconda install -c jfear sratoolkit=2.8.1fastq-dump# fastqcconda install -c bioconda fastqc=0.11.5fastqc# hisat2conda install -c bioconda hisat2hisat2# samtoolsconda install -c bioconda samtools=1.5 # error# samtools: error while loading shared libraries: libbz2.so.1.0: cannot open shared object file: No such file or directory# 错误解决参考 https://www.biostars.org/p/266111/conda install -c conda-forge -c bioconda samtools bzip2samtools# htseq-countconda install -c bioconda htseq=0.7.2python&gt;&gt;&gt;import HTSeq# Rsudo yum install epel-releasesudo yum install RR# Rstudioconda install rstudiorstudio","tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"}]}]